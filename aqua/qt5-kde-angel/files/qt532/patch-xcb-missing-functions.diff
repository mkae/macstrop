--- qtbase/src/3rdparty/xkbcommon/src/orig.atom.c	2014-09-11 12:48:04.000000000 +0200
+++ qtbase/src/3rdparty/xkbcommon/src/atom.c	2015-03-25 23:32:58.000000000 +0100
@@ -183,6 +183,18 @@
     return *atomp;
 }
 
+static inline char *strndup(char *string, size_t len)
+{ size_t slen = strlen(string);
+  char *target;
+   if (len < slen) {
+	   slen = len;
+   }
+   if (target = malloc( (len+1) * sizeof(char) )) {
+	   strncpy( target, string, len );
+   }
+   return target;
+}
+
 /*
  * If steal is true, we do not strdup @string; therefore it must be
  * dynamically allocated, NUL-terminated, not be free'd by the caller
--- qtbase/src/3rdparty/xkbcommon/src/x11/orig.util.c	2014-09-11 12:48:04.000000000 +0200
+++ qtbase/src/3rdparty/xkbcommon/src/x11/util.c	2015-03-25 23:34:05.000000000 +0100
@@ -122,6 +122,18 @@
     return device_id;
 }
 
+static inline char *strndup(char *string, size_t len)
+{ size_t slen = strlen(string);
+  char *target;
+   if (len < slen) {
+	   slen = len;
+   }
+   if (target = malloc( (len+1) * sizeof(char) )) {
+	   strncpy( target, string, len );
+   }
+   return target;
+}
+
 bool
 get_atom_name(xcb_connection_t *conn, xcb_atom_t atom, char **out)
 {
--- qtbase/src/3rdparty/xkbcommon/src/x11/orig.x11-keymap.c	2014-09-11 12:48:04.000000000 +0200
+++ qtbase/src/3rdparty/xkbcommon/src/x11/x11-keymap.c	2015-03-25 23:42:02.000000000 +0100
@@ -957,6 +957,12 @@
     return false;
 }
 
+static inline size_t strnlen(char *s, size_t maxlen)
+{
+	size_t len = strlen(s);
+	return (len > maxlen)? maxlen : len;
+}
+
 static bool
 get_key_names(struct xkb_keymap *keymap, xcb_connection_t *conn,
               xcb_xkb_get_names_reply_t *reply,
