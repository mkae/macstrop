diff --git a/qtbase/src/plugins/platforms/xcb/gl_integrations/xcb_glx/qxcbglxwindow.cpp b/qtbase/src/plugins/platforms/xcb/gl_integrations/xcb_glx/qxcbglxwindow.cpp
index 8ae83b8..5be5d64 100644
--- a/qtbase/src/plugins/platforms/xcb/gl_integrations/xcb_glx/qxcbglxwindow.cpp
+++ b/qtbase/src/plugins/platforms/xcb/gl_integrations/xcb_glx/qxcbglxwindow.cpp
@@ -42,6 +42,8 @@
 #include "qxcbscreen.h"
 #include <QtPlatformSupport/private/qglxconvenience_p.h>
 
+#include "qdebug.h"
+
 QT_BEGIN_NAMESPACE
 
 QXcbGlxWindow::QXcbGlxWindow(QWindow *window)
@@ -59,9 +61,16 @@ const xcb_visualtype_t *QXcbGlxWindow::createVisual()
     if (!scr)
         return Q_NULLPTR;
     XVisualInfo *visualInfo = qglx_findVisualInfo(DISPLAY_FROM_XCB(scr), scr->screenNumber(), &m_format);
-    const xcb_visualtype_t *xcb_visualtype = scr->visualForId(visualInfo->visualid);
-    XFree(visualInfo);
-    return xcb_visualtype;
+    if (visualInfo) {
+        const xcb_visualtype_t *xcb_visualtype = scr->visualForId(visualInfo->visualid);
+        XFree(visualInfo);
+        return xcb_visualtype;
+    } else {
+        // RJVB
+        qWarning() << "QXcbGlxWindow::createVisual() could not get XVisualInfo for" << scr << "number" << scr->screenNumber()
+            << "of display" << DISPLAY_FROM_XCB(scr) << "with format" << m_format;
+        return Q_NULLPTR;
+    }
 }
 
 QT_END_NAMESPACE
