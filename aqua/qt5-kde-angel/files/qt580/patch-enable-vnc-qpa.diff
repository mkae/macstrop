diff --git a/qtbase/src/plugins/platforms/platforms.pro b/qtbase/src/plugins/platforms/platforms.pro
index 2a6e059..56a5012 100644
--- a/qtbase/src/plugins/platforms/platforms.pro
+++ b/qtbase/src/plugins/platforms/platforms.pro
@@ -36,7 +36,7 @@ qtConfig(directfb) {
 
 qtConfig(linuxfb): SUBDIRS += linuxfb
 
-unix:!android:!darwin: SUBDIRS += vnc
+unix:!android: SUBDIRS += vnc
 
 freebsd {
     SUBDIRS += bsdfb
diff --git a/qtbase/src/plugins/platforms/vnc/qvncscreen.cpp b/qtbase/src/plugins/platforms/vnc/qvncscreen.cpp
index 34def45..5ebea26 100644
--- a/qtbase/src/plugins/platforms/vnc/qvncscreen.cpp
+++ b/qtbase/src/plugins/platforms/vnc/qvncscreen.cpp
@@ -45,7 +45,6 @@
 #include <QtGui/QPainter>
 #include <QtCore/QRegularExpression>
 
-
 QT_BEGIN_NAMESPACE
 
 
@@ -66,22 +65,33 @@ bool QVncScreen::initialize()
     QRegularExpression sizeRx(QLatin1String("size=(\\d+)x(\\d+)"));
     QRegularExpression mmSizeRx(QLatin1String("mmsize=(?<width>(\\d*\\.)?\\d+)x(?<height>(\\d*\\.)?\\d+)"));
     QRegularExpression depthRx(QLatin1String("depth=(\\d+)"));
+    QRegularExpression densityRx(QLatin1String("density=(\\d+)"));
 
     mGeometry = QRect(0, 0, 1024, 768);
     mFormat = QImage::Format_ARGB32_Premultiplied;
     mDepth = 32;
-    mPhysicalSize = QSizeF(mGeometry.width()/96.*25.4, mGeometry.height()/96.*25.4);
+    double density = 96.0;
+    mPhysicalSize = QSizeF(0.0, 0.0);
 
     for (const QString &arg : mArgs) {
         QRegularExpressionMatch match;
         if (arg.contains(mmSizeRx, &match)) {
             mPhysicalSize = QSizeF(match.captured("width").toDouble(), match.captured("height").toDouble());
-        } else if (arg.contains(sizeRx, &match)) {
-            mGeometry.setSize(QSize(match.captured(1).toInt(), match.captured(2).toInt()));
-        } else if (arg.contains(depthRx, &match)) {
-            mDepth = match.captured(1).toInt();
+        } else {
+            if (arg.contains(densityRx, &match)) {
+                density = match.captured(1).toDouble();
+            }
+            if (arg.contains(sizeRx, &match)) {
+                mGeometry.setSize(QSize(match.captured(1).toInt(), match.captured(2).toInt()));
+            }
+            if (arg.contains(depthRx, &match)) {
+                mDepth = match.captured(1).toInt();
+            }
         }
     }
+    if (mPhysicalSize.isEmpty()) {
+        mPhysicalSize = QSizeF(mGeometry.width()/density*25.4, mGeometry.height()/density*25.4);
+    }
 
     QFbScreen::initializeCompositor();
 
@@ -130,8 +140,7 @@ void QVncScreen::enableClientCursor(QVncClient *client)
 
 void QVncScreen::disableClientCursor(QVncClient *client)
 {
-    uint clientCount = clientCursor->removeClient(client);
-    if (clientCount == 0) {
+    if (clientCursor && clientCursor->removeClient(client) == 0) {
         delete clientCursor;
         clientCursor = nullptr;
     }
