diff --git a/qtbase/src/corelib/io/qfilesystemwatcher_kqueue.cpp b/qtbase/src/corelib/io/qfilesystemwatcher_kqueue.cpp
index c33fba2..a4c8ff6 100644
--- a/qtbase/src/corelib/io/qfilesystemwatcher_kqueue.cpp
+++ b/qtbase/src/corelib/io/qfilesystemwatcher_kqueue.cpp
@@ -101,6 +101,7 @@ QStringList QKqueueFileSystemWatcherEngine::addPaths(const QStringList &paths,
     while (it.hasNext()) {
         QString path = it.next();
         int fd;
+        errno = 0;
 #if defined(O_EVTONLY)
         fd = qt_safe_open(QFile::encodeName(path), O_EVTONLY);
 #else
@@ -109,12 +110,26 @@ QStringList QKqueueFileSystemWatcherEngine::addPaths(const QStringList &paths,
         if (fd == -1) {
             perror("QKqueueFileSystemWatcherEngine::addPaths: open");
             continue;
+        } else {
+            if (errno) {
+                perror("QKqueueFileSystemWatcherEngine::addPaths: open returned valid descriptor but");
+                ::close(fd);
+                continue;
+            }
         }
+        errno = 0;
         if (fd >= (int)FD_SETSIZE / 2 && fd < (int)FD_SETSIZE) {
             int fddup = qt_safe_dup(fd, FD_SETSIZE);
             if (fddup != -1) {
                 ::close(fd);
                 fd = fddup;
+            } else {
+                perror("QKqueueFileSystemWatcherEngine::addPaths: fddup");
+                if (errno = EMFILE) {
+                    // it seems wise not to insist when we just hit the open file limit
+                    ::close(fd);
+                    continue;
+                }
             }
         }
 
