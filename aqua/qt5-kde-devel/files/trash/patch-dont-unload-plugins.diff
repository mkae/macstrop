From 45b060ce3ee135a9b92d341421a3c56376c5db45 Mon Sep 17 00:00:00 2001
From: Thiago Macieira <thiago.macieira@intel.com>
Date: Thu, 12 Nov 2015 10:14:51 -0800
Subject: [PATCH] Stop unloading plugins in QPluginLoader and QFactoryLoader

QPluginLoader hasn't unloaded in its destructor since Qt 5.0, but we
missed the equivalent code in QFactoryLoader (which bypasses
QPluginLoader). Besides, QPluginLoader::unload() was still doing
unloading, which it won't anymore.

Not unloading plugins is Qt's policy, as decided during the 5.0
development process and reaffirmed now in 5.6. This is due to static
data in plugins leaking out and remaining in use past the unloading of
the plugin, causing crashes.

This does not affect QLibrary and QLibrary::unload(). Those are meant
for non-Qt loadable modules, so unloading them may be safe.

Task-number: QTBUG-49061
Discussed-on: http://lists.qt-project.org/pipermail/development/2015-November/023681.html
Change-Id: I461e9fc7199748faa187ffff1416070f138df8db
---
 src/corelib/plugin/qfactoryloader.cpp | 2 +-
 src/corelib/plugin/qpluginloader.cpp  | 4 +++-
 2 files changed, 4 insertions(+), 2 deletions(-)

--- a/qtbase/src/corelib/plugin/qfactoryloader.cpp
+++ b/qtbase/src/corelib/plugin/qfactoryloader.cpp
@@ -85,7 +85,7 @@ QFactoryLoaderPrivate::~QFactoryLoaderPrivate()
 {
     for (int i = 0; i < libraryList.count(); ++i) {
         QLibraryPrivate *library = libraryList.at(i);
-        library->unload();
+        library->unload(QLibraryPrivate::NoUnloadSys);
         library->release();
     }
 }
diff --git a/qtbase/src/corelib/plugin/qpluginloader.cpp b/qtbase/src/corelib/plugin/qpluginloader.cpp
index 37f2368..a6e4317 100644
--- a/qtbase/src/corelib/plugin/qpluginloader.cpp
+++ b/qtbase/src/corelib/plugin/qpluginloader.cpp
@@ -247,13 +247,15 @@ bool QPluginLoader::load()
     Don't try to delete the root component. Instead rely on
     that unload() will automatically delete it when needed.
 
+    \note QPluginLoader does not actually unload the plugin shared library/DLL.
+
     \sa instance(), load()
 */
 bool QPluginLoader::unload()
 {
     if (did_load) {
         did_load = false;
-        return d->unload();
+        return d->unload(QLibraryPrivate::NoUnloadSys);
     }
     if (d)  // Ouch
         d->errorString = tr("The plugin was not loaded.");
