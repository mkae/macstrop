From c1ae20108831c56419371eaa0485c50c52bcda6e Mon Sep 17 00:00:00 2001
From: Allan Sandfeld Jensen <allan.jensen@qt.io>
Date: Mon, 12 Jun 2017 13:33:46 +0200
Subject: [PATCH] Fix composition on xcb with misconfigured ibus

If ibus has been set, but either isn't installed or doesn't launch, all
composition fails on xcb. This ensures we fallback to "compose" which
is needed for working composition on XCB.

Change-Id: Ic2061c330bcb907759a13920c3eede14f3036563
---
 src/plugins/platforminputcontexts/ibus/qibusplatforminputcontext.cpp | 2 +-
 src/plugins/platforms/xcb/qxcbintegration.cpp                        | 5 ++++-
 2 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/src/plugins/platforminputcontexts/ibus/qibusplatforminputcontext.cpp b/src/plugins/platforminputcontexts/ibus/qibusplatforminputcontext.cpp
index 1ee81fa..24084fc 100644
--- a/src/plugins/platforminputcontexts/ibus/qibusplatforminputcontext.cpp
+++ b/src/plugins/platforminputcontexts/ibus/qibusplatforminputcontext.cpp
@@ -133,7 +133,7 @@ QIBusPlatformInputContext::~QIBusPlatformInputContext (void)
 
 bool QIBusPlatformInputContext::isValid() const
 {
-    return d->valid;
+    return d->valid && d->busConnected;
 }
 
 void QIBusPlatformInputContext::invokeAction(QInputMethod::Action a, int)
diff --git a/src/plugins/platforms/xcb/qxcbintegration.cpp b/src/plugins/platforms/xcb/qxcbintegration.cpp
index 8e3ee20..fbf2515 100644
--- a/src/plugins/platforms/xcb/qxcbintegration.cpp
+++ b/src/plugins/platforms/xcb/qxcbintegration.cpp
@@ -289,12 +289,15 @@ QAbstractEventDispatcher *QXcbIntegration::createEventDispatcher() const
 
 void QXcbIntegration::initialize()
 {
+    const static QLatin1String defaultInputContext("compose");
     // Perform everything that may potentially need the event dispatcher (timers, socket
     // notifiers) here instead of the constructor.
     QString icStr = QPlatformInputContextFactory::requested();
     if (icStr.isNull())
-        icStr = QLatin1String("compose");
+        icStr = defaultInputContext;
     m_inputContext.reset(QPlatformInputContextFactory::create(icStr));
+    if (!m_inputContext && icStr != defaultInputContext && icStr != QLatin1String("none"))
+        m_inputContext.reset(QPlatformInputContextFactory::create(defaultInputContext));
 }
 
 void QXcbIntegration::moveToScreen(QWindow *window, int screen)
-- 
2.7.4

