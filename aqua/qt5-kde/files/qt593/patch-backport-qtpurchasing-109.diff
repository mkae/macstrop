--- qt-everywhere-opensource-src-5.9.3/qtpurchasing/src/purchasing/inapppurchase/mac/qmacinapppurchasebackend.mm	2017-11-12 09:16:56.000000000 +0100
+++ qt-everywhere-opensource-src-5.8.0/qtpurchasing/src/purchasing/inapppurchase/mac/qmacinapppurchasebackend.mm	2016-12-16 05:07:49.000000000 +0100
@@ -37,7 +37,7 @@
 @interface QT_MANGLE_NAMESPACE(InAppPurchaseManager) : NSObject <SKProductsRequestDelegate, SKPaymentTransactionObserver>
 {
     QMacInAppPurchaseBackend *backend;
-    NSMutableArray<SKPaymentTransaction *> *pendingTransactions;
+    NSMutableArray *pendingTransactions;
 }
 
 -(void)requestProductData:(NSString *)identifier;
@@ -50,7 +50,7 @@
 -(id)initWithBackend:(QMacInAppPurchaseBackend *)iapBackend {
     if (self = [super init]) {
         backend = iapBackend;
-        pendingTransactions = [[NSMutableArray<SKPaymentTransaction *> alloc] init];
+        pendingTransactions = [[NSMutableArray alloc] init];
         [[SKPaymentQueue defaultQueue] addTransactionObserver:self];
         qRegisterMetaType<QMacInAppPurchaseProduct*>("QMacInAppPurchaseProduct*");
         qRegisterMetaType<QMacInAppPurchaseTransaction*>("QMacInAppPurchaseTransaction*");
@@ -67,7 +67,7 @@
 
 -(void)requestProductData:(NSString *)identifier
 {
-    NSSet<NSString *> *productId = [NSSet<NSString *> setWithObject:identifier];
+    NSSet *productId = [NSSet setWithObject:identifier];
     SKProductsRequest *productsRequest = [[SKProductsRequest alloc] initWithProductIdentifiers:productId];
     productsRequest.delegate = self;
     [productsRequest start];
@@ -75,7 +75,7 @@
 
 -(void)processPendingTransactions
 {
-    NSMutableArray<SKPaymentTransaction *> *registeredTransactions = [NSMutableArray<SKPaymentTransaction *> array];
+    NSMutableArray *registeredTransactions = [NSMutableArray array];
 
     for (SKPaymentTransaction *transaction in pendingTransactions) {
         QInAppTransaction::TransactionStatus status = [QT_MANGLE_NAMESPACE(InAppPurchaseManager) statusFromTransaction:transaction];
@@ -102,7 +102,7 @@
 //SKProductsRequestDelegate
 -(void)productsRequest:(SKProductsRequest *)request didReceiveResponse:(SKProductsResponse *)response
 {
-    NSArray<SKProduct *> *products = response.products;
+    NSArray *products = response.products;
     SKProduct *product = [products count] == 1 ? [[products firstObject] retain] : nil;
 
     if (product == nil) {
@@ -151,7 +151,7 @@
 }
 
 //SKPaymentTransactionObserver
-- (void)paymentQueue:(SKPaymentQueue *)queue updatedTransactions:(NSArray<SKPaymentTransaction *> *)transactions
+- (void)paymentQueue:(SKPaymentQueue *)queue updatedTransactions:(NSArray *)transactions
 {
     Q_UNUSED(queue);
     for (SKPaymentTransaction *transaction in transactions) {
