diff --git a/qtbase/src/corelib/kernel/qcoreapplication.cpp b/qtbase/src/corelib/kernel/qcoreapplication.cpp
index bf423ce..85b906b 100644
--- a/qtbase/src/corelib/kernel/qcoreapplication.cpp
+++ b/qtbase/src/corelib/kernel/qcoreapplication.cpp
@@ -351,9 +351,16 @@ QAbstractEventDispatcher *QCoreApplicationPrivate::eventDispatcher = 0;
 #endif // QT_NO_QOBJECT
 
 QCoreApplication *QCoreApplication::self = 0;
+#ifdef Q_OS_MACOS
+uint QCoreApplicationPrivate::attribs =
+    (1 << Qt::AA_SynthesizeMouseForUnhandledTouchEvents) |
+    (1 << Qt::AA_SynthesizeMouseForUnhandledTabletEvents) |
+    (1 << Qt::AA_DontShowIconsInMenus);
+#else
 uint QCoreApplicationPrivate::attribs =
     (1 << Qt::AA_SynthesizeMouseForUnhandledTouchEvents) |
     (1 << Qt::AA_SynthesizeMouseForUnhandledTabletEvents);
+#endif
 
 struct QCoreApplicationData {
     QCoreApplicationData() Q_DECL_NOTHROW {
diff --git a/qtbase/src/widgets/styles/qmacstyle_mac.mm b/qtbase/src/widgets/styles/qmacstyle_mac.mm
index 58aba3a..2d4d47e 100644
--- a/qtbase/src/widgets/styles/qmacstyle_mac.mm
+++ b/qtbase/src/widgets/styles/qmacstyle_mac.mm
@@ -716,7 +716,8 @@ static QSize qt_aqua_get_known_size(QStyle::ContentsType ct, const QWidget *widg
             else if (sz == QAquaSizeMini)
                 ret = QSize(-1, qt_mac_aqua_get_metric(kThemeMetricMiniPushButtonHeight));
 
-            if (!psh->icon().isNull()){
+            bool showIcon = !psh->text().isEmpty() || widg->style()->proxy()->styleHint(QCommonStyle::SH_DialogButtonBox_ButtonsHaveIcons);
+            if (showIcon && !psh->icon().isNull()) {
                 // If the button got an icon, and the icon is larger than the
                 // button, we can't decide on a default size
                 ret.setWidth(-1);
@@ -4052,8 +4053,10 @@ void QMacStyle::drawControl(ControlElement ce, const QStyleOption *opt, QPainter
             // tab. So, cheat a little here. However, if it *is* only an icon
             // the windows style works great, so just use that implementation.
             bool hasMenu = btn.features & QStyleOptionButton::HasMenu;
+            // do we have icon AND should it show?
             bool hasIcon = !btn.icon.isNull();
             bool hasText = !btn.text.isEmpty();
+            bool showIcon = hasIcon && (!hasText || proxy()->styleHint(SH_DialogButtonBox_ButtonsHaveIcons));
 
             if (!hasMenu) {
                 if (tds == kThemeStatePressed
@@ -4111,7 +4114,7 @@ void QMacStyle::drawControl(ControlElement ce, const QStyleOption *opt, QPainter
                     p->restore();
                 }
             } else {
-                if (hasIcon && !hasText) {
+                if (hasIcon && showIcon && !hasText) {
                     QCommonStyle::drawControl(ce, &btn, p, w);
                 } else {
                     QRect freeContentRect = btn.rect;
@@ -4121,7 +4124,7 @@ void QMacStyle::drawControl(ControlElement ce, const QStyleOption *opt, QPainter
                         textRect.moveTo(w ? 15 : 11, textRect.top()); // Supports Qt Quick Controls
                     }
                     // Draw the icon:
-                    if (hasIcon) {
+                    if (hasIcon && showIcon) {
                         int contentW = textRect.width();
                         if (hasMenu)
                             contentW += proxy()->pixelMetric(PM_MenuButtonIndicator) + 4;
