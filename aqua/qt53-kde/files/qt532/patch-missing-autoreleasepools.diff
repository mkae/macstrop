From 9608629d7ee42dd65437d2e7fad5c91438d7de4b Mon Sep 17 00:00:00 2001
From: Erik Verbruggen <erik.verbruggen@theqtcompany.com>
Date: Thu, 26 Feb 2015 13:00:39 +0100
Subject: OSX: fix leaks due to missing NSAutoreleasePool
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

env OBJC_DEBUG_MISSING_POOLS=YES qtcreator

Change-Id: Ibbe5f42af5b94a439be3f0dd0f2b6e34bb1afd3f
Reviewed-by: Morten Johan SÃ¸rvig <morten.sorvig@theqtcompany.com>
---
 src/corelib/tools/qlocale_mac.mm                      | 13 +++++++++++++
 .../fontdatabases/mac/qcoretextfontdatabase.mm        | 14 ++++++++++++++
 src/plugins/platforms/cocoa/qcocoahelpers.mm          |  1 +
 src/plugins/platforms/cocoa/qcocoaintegration.mm      |  2 ++
 src/plugins/platforms/cocoa/qcocoamenu.mm             |  2 ++
 src/plugins/platforms/cocoa/qcocoamenubar.mm          |  2 ++
 src/plugins/platforms/cocoa/qcocoamenuitem.mm         |  2 ++
 src/plugins/platforms/cocoa/qcocoanativeinterface.mm  |  1 +
 src/plugins/platforms/cocoa/qcocoasystemsettings.mm   |  3 +++
 src/widgets/styles/qmacstyle_mac.mm                   | 19 +++++++++++++++++++
 10 files changed, 59 insertions(+)

--- qtbase/src/corelib/tools/qlocale_mac.mm
+++ qtbase/src/corelib/tools/qlocale_mac.mm
@@ -52,6 +52,18 @@
 
 QT_BEGIN_NAMESPACE
 
+namespace {
+class AutoReleasePool
+{
+public:
+    AutoReleasePool(): pool([[NSAutoreleasePool alloc] init]) {}
+    ~AutoReleasePool() { [pool drain]; }
+
+private:
+    NSAutoreleasePool *pool;
+};
+}
+
 /******************************************************************************
 ** Wrappers for Mac locale system functions
 */
@@ -414,6 +426,7 @@ QLocale QSystemLocale::fallbackUiLocale() const
 
 QVariant QSystemLocale::query(QueryType type, QVariant in = QVariant()) const
 {
+    AutoReleasePool pool;
     switch(type) {
 //     case Name:
 //         return getMacLocaleName();
diff --git qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase.mm qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase.mm
index f7165be..a022587 100644
--- qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase.mm
+++ qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase.mm
@@ -48,6 +48,18 @@
 
 QT_BEGIN_NAMESPACE
 
+namespace {
+class AutoReleasePool
+{
+public:
+    AutoReleasePool(): pool([[NSAutoreleasePool alloc] init]) {}
+    ~AutoReleasePool() { [pool drain]; }
+
+private:
+    NSAutoreleasePool *pool;
+};
+}
+
 // this could become a list of all languages used for each writing
 // system, instead of using the single most common language.
 static const char *languageForWritingSystem[] = {
@@ -218,6 +218,7 @@ void QCoreTextFontDatabase::populateFontDatabase()
         QPlatformFontDatabase::registerFontFamily(familyName);
 
 #if defined(Q_OS_OSX)
+        AutoReleasePool pool;
         QString localizedFamilyName = QString::fromNSString([[NSFontManager sharedFontManager] localizedNameForFamily:(NSString*)familyNameRef face:nil]);
         if (familyName != localizedFamilyName)
             QPlatformFontDatabase::registerAliasToFontFamily(familyName, localizedFamilyName);
@@ -439,6 +451,8 @@ QStringList QCoreTextFontDatabase::fallbacksForFamily(const QString &family, QFo
     Q_UNUSED(style);
     Q_UNUSED(script);
 
+    AutoReleasePool pool;
+
     static QHash<QString, QStringList> fallbackLists;
 
     if (!family.isEmpty()) {
diff --git qtbase/src/plugins/platforms/cocoa/qcocoahelpers.mm qtbase/src/plugins/platforms/cocoa/qcocoahelpers.mm
index ac43ee6..a84c0c0 100644
--- qtbase/src/plugins/platforms/cocoa/qcocoahelpers.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoahelpers.mm
@@ -630,6 +630,7 @@ QString qt_mac_applicationName()
 
 int qt_mac_mainScreenHeight()
 {
+    QCocoaAutoReleasePool pool;
     // The first screen in the screens array is documented
     // to have the (0,0) origin.
     NSRect screenFrame = [[[NSScreen screens] firstObject] frame];
diff --git qtbase/src/plugins/platforms/cocoa/qcocoaintegration.mm qtbase/src/plugins/platforms/cocoa/qcocoaintegration.mm
--- qtbase/src/plugins/platforms/cocoa/qcocoaintegration.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoaintegration.mm
@@ -41,6 +41,7 @@
 
 #include "qcocoaintegration.h"
 
+#include "qcocoaautoreleasepool.h"
 #include "qcocoawindow.h"
 #include "qcocoabackingstore.h"
 #include "qcocoanativeinterface.h"
@@ -147,6 +148,7 @@ qreal QCocoaScreen::devicePixelRatio() const
 {
 #if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_7
     if (QSysInfo::MacintoshVersion >= QSysInfo::MV_10_7) {
+        QCocoaAutoReleasePool pool;
         NSScreen * screen = osScreen();
         return qreal(screen ? [screen backingScaleFactor] : 1.0);
     } else
diff --git qtbase/src/plugins/platforms/cocoa/qcocoamenu.mm qtbase/src/plugins/platforms/cocoa/qcocoamenu.mm
index e6a3ac9..fb11efb 100644
--- qtbase/src/plugins/platforms/cocoa/qcocoamenu.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoamenu.mm
@@ -217,6 +217,8 @@ QCocoaMenu::QCocoaMenu() :
     m_menuBar(0),
     m_containingMenuItem(0)
 {
+    QCocoaAutoReleasePool pool;
+
     m_delegate = [[QCocoaMenuDelegate alloc] initWithMenu:this];
     m_nativeItem = [[NSMenuItem alloc] initWithTitle:@"" action:nil keyEquivalent:@""];
     m_nativeMenu = [[NSMenu alloc] initWithTitle:@"Untitled"];
diff --git qtbase/src/plugins/platforms/cocoa/qcocoamenubar.mm qtbase/src/plugins/platforms/cocoa/qcocoamenubar.mm
index c68f083..5d8082d 100644
--- qtbase/src/plugins/platforms/cocoa/qcocoamenubar.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoamenubar.mm
@@ -145,6 +145,8 @@ void QCocoaMenuBar::removeMenu(QPlatformMenu *platformMenu)
 
 void QCocoaMenuBar::syncMenu(QPlatformMenu *menu)
 {
+    QCocoaAutoReleasePool pool;
+
     QCocoaMenu *cocoaMenu = static_cast<QCocoaMenu *>(menu);
     Q_FOREACH (QCocoaMenuItem *item, cocoaMenu->items())
         cocoaMenu->syncMenuItem(item);
diff --git qtbase/src/plugins/platforms/cocoa/qcocoamenuitem.mm qtbase/src/plugins/platforms/cocoa/qcocoamenuitem.mm
index 603d5c9..d681374 100644
--- qtbase/src/plugins/platforms/cocoa/qcocoamenuitem.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoamenuitem.mm
@@ -99,6 +99,8 @@ QCocoaMenuItem::QCocoaMenuItem() :
 
 QCocoaMenuItem::~QCocoaMenuItem()
 {
+    QCocoaAutoReleasePool pool;
+
     if (m_menu && COCOA_MENU_ANCESTOR(m_menu) == this)
         SET_COCOA_MENU_ANCESTOR(m_menu, 0);
     if (m_merged) {
diff --git qtbase/src/plugins/platforms/cocoa/qcocoanativeinterface.mm qtbase/src/plugins/platforms/cocoa/qcocoanativeinterface.mm
index cd88579..205a49d 100644
--- qtbase/src/plugins/platforms/cocoa/qcocoanativeinterface.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoanativeinterface.mm
@@ -234,6 +234,7 @@ void QCocoaNativeInterface::registerDraggedTypes(const QStringList &types)
 
 void QCocoaNativeInterface::setDockMenu(QPlatformMenu *platformMenu)
 {
+    QCocoaAutoReleasePool pool;
     QCocoaMenu *cocoaPlatformMenu = static_cast<QCocoaMenu *>(platformMenu);
     NSMenu *menu = cocoaPlatformMenu->nsMenu();
     [NSApp QT_MANGLE_NAMESPACE(qt_setDockMenu): menu];
diff --git qtbase/src/plugins/platforms/cocoa/qcocoasystemsettings.mm qtbase/src/plugins/platforms/cocoa/qcocoasystemsettings.mm
--- qtbase/src/plugins/platforms/cocoa/qcocoasystemsettings.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoasystemsettings.mm
@@ -41,6 +41,8 @@
 
 #include "qcocoasystemsettings.h"
 
+#include "qcocoaautoreleasepool.h"
+
 #include <QtCore/private/qcore_mac_p.h>
 #include <QtGui/qfont.h>
 
@@ -69,6 +71,8 @@ QColor qt_mac_colorFromCGColor(CGColorRef cgcolor)
 
 QColor qt_mac_colorForTheme(ThemeBrush brush)
 {
+    QCocoaAutoReleasePool pool;
+
     QCFType<CGColorRef> cgClr = 0;
     HIThemeBrushCreateCGColor(brush, &cgClr);
     return qt_mac_colorFromCGColor(cgClr);
diff --git qtbase/src/widgets/styles/qmacstyle_mac.mm qtbase/src/widgets/styles/qmacstyle_mac.mm
--- qtbase/src/widgets/styles/qmacstyle_mac.mm
+++ qtbase/src/widgets/styles/qmacstyle_mac.mm
@@ -100,6 +100,18 @@
 
 QT_USE_NAMESPACE
 
+namespace {
+class AutoReleasePool
+{
+public:
+    AutoReleasePool(): pool([[NSAutoreleasePool alloc] init]) {}
+    ~AutoReleasePool() { [pool drain]; }
+
+private:
+    NSAutoreleasePool *pool;
+};
+}
+
 @interface QT_MANGLE_NAMESPACE(NotificationReceiver) : NSObject {
 QMacStylePrivate *mPrivate;
 }
@@ -1863,6 +1875,8 @@ QMacStyle::QMacStyle()
     Q_D(QMacStyle);
 #if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_7
     if (QSysInfo::MacintoshVersion >= QSysInfo::MV_10_7) {
+        AutoReleasePool pool;
+
         d->receiver = [[NotificationReceiver alloc] initWithPrivate:d];
         NotificationReceiver *receiver = static_cast<NotificationReceiver *>(d->receiver);
 
@@ -1882,6 +1896,8 @@ QMacStyle::~QMacStyle()
 #if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_7
     Q_D(QMacStyle);
     if (QSysInfo::MacintoshVersion >= QSysInfo::MV_10_7) {
+        AutoReleasePool pool;
+
         [reinterpret_cast<NSScroller*>(d->nsscroller) release];
 
         NotificationReceiver *receiver = static_cast<NotificationReceiver *>(d->receiver);
@@ -1899,6 +1915,7 @@ QMacStyle::~QMacStyle()
 */
 QPixmap QMacStylePrivate::generateBackgroundPattern() const
 {
+    AutoReleasePool pool;
     QPixmap px(4, 4);
     QMacCGContext cg(&px);
     HIThemeSetFill(kThemeBrushDialogBackgroundActive, 0, cg, kHIThemeOrientationNormal);
@@ -2504,6 +2521,8 @@ QPalette QMacStyle::standardPalette() const
 int QMacStyle::styleHint(StyleHint sh, const QStyleOption *opt, const QWidget *w,
                          QStyleHintReturn *hret) const
 {
+    AutoReleasePool pool;
+
     SInt32 ret = 0;
     switch (sh) {
     case SH_Slider_SnapToValue:
diff --git qtbase/src/plugins/platforms/cocoa/qcocoawindow.mm qtbase/src/plugins/platforms/cocoa/qcocoawindow.mm
index 4d0458a..7921b8f 100644
--- qtbase/src/plugins/platforms/cocoa/qcocoawindow.mm
+++ qtbase/src/plugins/platforms/cocoa/qcocoawindow.mm
@@ -1644,6 +1644,8 @@ void QCocoaWindow::applyContentBorderThickness(NSWindow *window)
     if (!window)
         return;
 
+    QCocoaAutoReleasePool pool;
+
     if (!m_drawContentBorderGradient) {
         [window setStyleMask:[window styleMask] & ~NSTexturedBackgroundWindowMask];
         [[[window contentView] superview] setNeedsDisplay:YES];
