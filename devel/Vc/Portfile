# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           muniversal 1.0
PortGroup           github 1.0

# The 1.3.0 release is out of date w.r.t. Intel CPUs, get the latest version
github.setup        VcDevel Vc fe8ba6087d8ff36bba5473cab4bdc0eb0594f51c
version             1.3.2.8
categories          math devel
license             LGPL-3+
maintainers         gmail.com:rjvbertin
description         Portable, zero-overhead SIMD library for C++
long_description \
                    Vc is a free software library to ease explicit vectorisation of \
                    C++ code. It has an intuitive API and provides portability \
                    between different compilers and compiler versions as well as \
                    portability between different vector instruction sets. Thus an \
                    application written with Vc can be compiled for AVX\; SSE2 up to SSE4.2\; \
                    SSE4a\; XOP\; FMA4 and FMA or Scalar (fallback which works everywhere).\n\
                    This port should ideally be installed from source (built locally).
platforms           darwin

# homepage            http://code.compeng.uni-frankfurt.de/projects/vc

checksums           rmd160  d6e4bec3b759db128d9cbc83a0cad41150f17907 \
                    sha256  d078e33032663a0037a0c6b8c20d645e5f963947ea852a239e195f9fabb53656

installs_libs       yes

variant docs description {Create API docs using the KF5 doc generator} {
}
if {[variant_isset docs]} {
    set kf5.allow_apidocs_generation yes
    set kf5.dont_use_xz yes
    PortGroup       kf5 1.1
    if {[info exists qt5_dependency]} {
        depends_lib-delete ${qt5_dependency}
    }
    set kf5.docs_dir \
                    ${prefix}/share/doc/Vc
}

configure.args-append \
                    -DBUILD_TESTING=OFF \
                    -DBUILD_EXAMPLES=OFF

variant tests description {build the tests} {
    configure.args-replace \
                    -DBUILD_TESTING=OFF \
                    -DBUILD_TESTING=ON
    test.run        yes
}
variant examples description {build the examples} {
    configure.args-replace \
                    -DBUILD_EXAMPLES=OFF \
                    -DBUILD_EXAMPLES=ON
    post-destroot {
        xinstall -m 755 -d ${destroot}${prefix}/libexec/Vc
        # unreadable syntax: copy all matching files returned by glob to libexec/Vc
        xinstall -m 755 {*}[glob ${build.dir}/examples/*/example_*] \
                    ${destroot}${prefix}/libexec/Vc
    }
}

# make the build a bit less resource-hungry:
cmake.generator     Ninja
