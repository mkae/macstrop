diff --git a/Source/PlatformQt.cmake b/Source/PlatformQt.cmake
index 0044dec033c9..7f0a542726bc 100644
--- a/Source/PlatformQt.cmake
+++ b/Source/PlatformQt.cmake
@@ -32,6 +32,9 @@ if (USE_MINIMAL_DEBUG_INFO AND CMAKE_BUILD_TYPE STREQUAL "Debug")
     if (TARGET gtest)
         target_compile_options(gtest          PRIVATE -g0 -O1)
     endif ()
+
+    target_compile_options(WebKit            PRIVATE -g1 -O1 -fdebug-types-section)
+    target_compile_options(WebKit2           PRIVATE -g1 -O1 -fdebug-types-section)
 endif ()
 
 if (USE_MINIMAL_DEBUG_INFO_MSVC AND MSVC AND CMAKE_BUILD_TYPE STREQUAL "Debug")
@@ -71,6 +74,19 @@ target_include_directories(WebKitWidgets INTERFACE
     $<INSTALL_INTERFACE:${KDE_INSTALL_INCLUDEDIR}/QtWebKitWidgets>
 )
 
+set(QTWEBKIT_PACKAGE_INIT "
+macro(find_dependency_with_major_and_minor _dep _major _minor)
+    find_dependency(\${_dep} \"\${_major}.\${_minor}\")
+    if (NOT(\"\${\${_dep}_VERSION_MAJOR}\" STREQUAL \"\${_major}\" AND \"\${\${_dep}_VERSION_MINOR}\" STREQUAL \"\${_minor}\"))
+        set(\${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE \"\${CMAKE_FIND_PACKAGE_NAME} could not be found because dependency \${dep} is required to have exact version \${_major}.\${_minor}.x.\")
+        set(\${CMAKE_FIND_PACKAGE_NAME}_FOUND False)
+        return()
+    endif ()
+endmacro ()
+
+####################################################################################
+")
+
 set(_package_footer_template "
 ####### Expanded from QTWEBKIT_PACKAGE_FOOTER variable #######
 
diff --git a/Source/Qt5WebKitConfig.cmake.in b/Source/Qt5WebKitConfig.cmake.in
index 34e9aadcac58..a50d0353fd58 100644
--- a/Source/Qt5WebKitConfig.cmake.in
+++ b/Source/Qt5WebKitConfig.cmake.in
@@ -1,8 +1,9 @@
 @PACKAGE_INIT@
+@QTWEBKIT_PACKAGE_INIT@
 
-find_dependency(Qt5Core    @Qt5_VERSION@ EXACT)
-find_dependency(Qt5Gui     @Qt5_VERSION@ EXACT)
-find_dependency(Qt5Network @Qt5_VERSION@ EXACT)
+find_dependency_with_major_and_minor(Qt5Core @Qt5_VERSION_MAJOR@ @Qt5_VERSION_MINOR@)
+find_dependency_with_major_and_minor(Qt5Gui @Qt5_VERSION_MAJOR@ @Qt5_VERSION_MINOR@)
+find_dependency_with_major_and_minor(Qt5Network @Qt5_VERSION_MAJOR@ @Qt5_VERSION_MINOR@)
 
 include("${CMAKE_CURRENT_LIST_DIR}/WebKitTargets.cmake")
 
diff --git a/Source/Qt5WebKitWidgetsConfig.cmake.in b/Source/Qt5WebKitWidgetsConfig.cmake.in
index ade62eeaed0b..ef1c42956f4c 100644
--- a/Source/Qt5WebKitWidgetsConfig.cmake.in
+++ b/Source/Qt5WebKitWidgetsConfig.cmake.in
@@ -1,11 +1,8 @@
 @PACKAGE_INIT@
-
-find_dependency(Qt5Core    @Qt5_VERSION@ EXACT)
-find_dependency(Qt5Gui     @Qt5_VERSION@ EXACT)
-find_dependency(Qt5Network @Qt5_VERSION@ EXACT)
-find_dependency(Qt5Widgets @Qt5_VERSION@ EXACT)
+@QTWEBKIT_PACKAGE_INIT@
 
 find_dependency(Qt5WebKit @PROJECT_VERSION_STRING@ EXACT)
+find_dependency_with_major_and_minor(Qt5Widgets @Qt5_VERSION_MAJOR@ @Qt5_VERSION_MINOR@)
 
 include("${CMAKE_CURRENT_LIST_DIR}/Qt5WebKitWidgetsTargets.cmake")
 
diff --git a/Source/WTF/wtf/Platform.h b/Source/WTF/wtf/Platform.h
index 3f2069e7ce0b..f563e382063c 100644
--- a/Source/WTF/wtf/Platform.h
+++ b/Source/WTF/wtf/Platform.h
@@ -1058,6 +1058,9 @@
 #if PLATFORM(QT)
 #ifdef __cplusplus
 #include <qglobal.h>
+#if QT_VERSION >= QT_VERSION_CHECK(5,8,0)
+#include <QtGui/qtguiglobal.h>
+#endif
 #endif
 #if defined(QT_OPENGL_ES_2) && !defined(USE_OPENGL_ES_2)
 #define USE_OPENGL_ES_2 1
diff --git a/Source/WTF/wtf/PlatformQt.cmake b/Source/WTF/wtf/PlatformQt.cmake
index 32c8d2c70a04..684119455b36 100644
--- a/Source/WTF/wtf/PlatformQt.cmake
+++ b/Source/WTF/wtf/PlatformQt.cmake
@@ -4,7 +4,7 @@ list(APPEND WTF_SOURCES
 
     text/qt/StringQt.cpp
 )
-QTWEBKIT_GENERATE_MOC_FILES_CPP(qt/MainThreadQt.cpp qt/RunLoopQt.cpp)
+QTWEBKIT_GENERATE_MOC_FILES_CPP(WTF qt/MainThreadQt.cpp qt/RunLoopQt.cpp)
 
 list(APPEND WTF_SYSTEM_INCLUDE_DIRECTORIES
     ${Qt5Core_INCLUDE_DIRS}
@@ -33,7 +33,7 @@ if (UNIX AND NOT APPLE)
 
         qt/WorkQueueQt.cpp
     )
-    QTWEBKIT_GENERATE_MOC_FILES_CPP(qt/WorkQueueQt.cpp)
+    QTWEBKIT_GENERATE_MOC_FILES_CPP(WTF qt/WorkQueueQt.cpp)
 endif ()
 
 if (USE_GLIB)
diff --git a/Source/WTF/wtf/qt/WorkQueueQt.cpp b/Source/WTF/wtf/qt/WorkQueueQt.cpp
index be04dae3f97f..4e2f364097f5 100644
--- a/Source/WTF/wtf/qt/WorkQueueQt.cpp
+++ b/Source/WTF/wtf/qt/WorkQueueQt.cpp
@@ -30,7 +30,6 @@
 #include <QObject>
 #include <QProcess>
 #include <QThread>
-#include <wtf/Threading.h>
 
 namespace WTF {
 
diff --git a/Source/WTF/wtf/win/WorkItemWin.cpp b/Source/WTF/wtf/win/WorkItemWin.cpp
index 33ddf8ed9a86..7a67ecfaf26b 100644
--- a/Source/WTF/wtf/win/WorkItemWin.cpp
+++ b/Source/WTF/wtf/win/WorkItemWin.cpp
@@ -26,7 +26,6 @@
 #include "config.h"
 #include "WorkItemWin.h"
 
-#include <Windows.h>
 #include <wtf/Threading.h>
 #include <wtf/WorkQueue.h>
 
diff --git a/Source/WTF/wtf/win/WorkItemWin.h b/Source/WTF/wtf/win/WorkItemWin.h
index af3fa1799e2f..92308d832732 100644
--- a/Source/WTF/wtf/win/WorkItemWin.h
+++ b/Source/WTF/wtf/win/WorkItemWin.h
@@ -27,8 +27,8 @@
 #ifndef WorkItemWin_h
 #define WorkItemWin_h
 
-#include <Windows.h>
 #include <functional>
+#include <windows.h>
 #include <wtf/RefPtr.h>
 #include <wtf/ThreadSafeRefCounted.h>
 
diff --git a/Source/WebCore/PlatformQt.cmake b/Source/WebCore/PlatformQt.cmake
index c5466b6c788c..f0e68cf9e025 100644
--- a/Source/WebCore/PlatformQt.cmake
+++ b/Source/WebCore/PlatformQt.cmake
@@ -110,6 +110,7 @@ list(APPEND WebCore_SOURCES
     platform/network/NetworkStorageSessionStub.cpp
     platform/network/MIMESniffing.cpp
 
+    platform/network/qt/BlobUrlConversion.cpp
     platform/network/qt/CookieJarQt.cpp
     platform/network/qt/CredentialStorageQt.cpp
     platform/network/qt/DNSQt.cpp
@@ -162,19 +163,19 @@ list(APPEND WebCore_SOURCES
     platform/text/qt/TextBreakIteratorInternalICUQt.cpp
 )
 
-QTWEBKIT_GENERATE_MOC_FILES_CPP(
+QTWEBKIT_GENERATE_MOC_FILES_CPP(WebCore
     platform/network/qt/DNSQt.cpp
     platform/qt/MainThreadSharedTimerQt.cpp
 )
 
-QTWEBKIT_GENERATE_MOC_FILES_H(
+QTWEBKIT_GENERATE_MOC_FILES_H(WebCore
     platform/network/qt/CookieJarQt.h
     platform/network/qt/QNetworkReplyHandler.h
     platform/network/qt/QtMIMETypeSniffer.h
 )
 
-QTWEBKIT_GENERATE_MOC_FILE_H(platform/network/qt/NetworkStateNotifierPrivate.h platform/network/qt/NetworkStateNotifierQt.cpp)
-QTWEBKIT_GENERATE_MOC_FILE_H(platform/network/qt/SocketStreamHandlePrivate.h platform/network/qt/SocketStreamHandleQt.cpp)
+QTWEBKIT_GENERATE_MOC_FILE_H(WebCore platform/network/qt/NetworkStateNotifierPrivate.h platform/network/qt/NetworkStateNotifierQt.cpp)
+QTWEBKIT_GENERATE_MOC_FILE_H(WebCore platform/network/qt/SocketStreamHandlePrivate.h platform/network/qt/SocketStreamHandleQt.cpp)
 
 if (COMPILER_IS_GCC_OR_CLANG)
     set_source_files_properties(
@@ -182,6 +183,12 @@ if (COMPILER_IS_GCC_OR_CLANG)
     PROPERTIES
         COMPILE_FLAGS "-frtti -UQT_NO_DYNAMIC_CAST"
     )
+
+    set_source_files_properties(
+        platform/network/qt/BlobUrlConversion.cpp
+    PROPERTIES
+        COMPILE_FLAGS "-fexceptions -UQT_NO_EXCEPTIONS"
+    )
 endif ()
 
 if (ENABLE_DEVICE_ORIENTATION)
@@ -197,7 +204,7 @@ if (ENABLE_GAMEPAD_DEPRECATED)
     list(APPEND WebCore_SOURCES
         platform/qt/GamepadsQt.cpp
     )
-    QTWEBKIT_GENERATE_MOC_FILES_CPP(platform/qt/GamepadsQt.cpp)
+    QTWEBKIT_GENERATE_MOC_FILES_CPP(WebCore platform/qt/GamepadsQt.cpp)
 endif ()
 
 if (ENABLE_GRAPHICS_CONTEXT_3D)
@@ -221,7 +228,7 @@ if (ENABLE_NETSCAPE_PLUGIN_API)
             platform/win/WebCoreInstanceHandle.cpp
         )
         list(APPEND WebCore_LIBRARIES
-            Shlwapi
+            shlwapi
             version
         )
     elseif (PLUGIN_BACKEND_XLIB)
@@ -374,7 +381,7 @@ if (USE_QT_MULTIMEDIA)
     list(APPEND WebCore_LIBRARIES
         ${Qt5Multimedia_LIBRARIES}
     )
-    QTWEBKIT_GENERATE_MOC_FILES_H(platform/graphics/qt/MediaPlayerPrivateQt.h)
+    QTWEBKIT_GENERATE_MOC_FILES_H(WebCore platform/graphics/qt/MediaPlayerPrivateQt.h)
 endif ()
 
 if (ENABLE_VIDEO)
diff --git a/Source/WebCore/bridge/qt/qt_class.cpp b/Source/WebCore/bridge/qt/qt_class.cpp
index 5efebc0fdb90..1554f8d63e57 100644
--- a/Source/WebCore/bridge/qt/qt_class.cpp
+++ b/Source/WebCore/bridge/qt/qt_class.cpp
@@ -108,7 +108,7 @@ JSValue QtClass::fallbackObject(ExecState* exec, Instance* inst, PropertyName id
         return jsUndefined();
 
     int flags = metaMethod.methodType() == QMetaMethod::Signal ? QtRuntimeMethod::MethodIsSignal : 0;
-    QtRuntimeMethod* method = new QtRuntimeMethod(context, static_cast<QtInstance*>(inst)->getObject(), normal, index, flags, qtinst);
+    QtRuntimeMethod* method = new QtRuntimeMethod(static_cast<QtInstance*>(inst)->getObject(), normal, index, flags, qtinst);
     qtinst->m_methods.insert(name, method);
     JSValue obj = toJS(method->jsObjectRef(context, &exception));
     if (exception)
diff --git a/Source/WebCore/bridge/qt/qt_runtime.cpp b/Source/WebCore/bridge/qt/qt_runtime.cpp
index 84335e8cad01..4859faee3e2a 100644
--- a/Source/WebCore/bridge/qt/qt_runtime.cpp
+++ b/Source/WebCore/bridge/qt/qt_runtime.cpp
@@ -1230,7 +1230,7 @@ static JSClassRef prototypeForSignalsAndSlots()
     return cls;
 }
 
-QtRuntimeMethod::QtRuntimeMethod(JSContextRef ctx, QObject* object, const QByteArray& identifier, int index, int flags, QtInstance* instance)
+QtRuntimeMethod::QtRuntimeMethod(QObject* object, const QByteArray& identifier, int index, int flags, QtInstance* instance)
     : m_object(object)
     , m_identifier(identifier)
     , m_index(index)
diff --git a/Source/WebCore/bridge/qt/qt_runtime.h b/Source/WebCore/bridge/qt/qt_runtime.h
index 34a97244a168..c9d675c3fa27 100644
--- a/Source/WebCore/bridge/qt/qt_runtime.h
+++ b/Source/WebCore/bridge/qt/qt_runtime.h
@@ -84,7 +84,7 @@ class QtRuntimeMethod {
         AllowPrivate = 2
     };
 
-    QtRuntimeMethod(JSContextRef, QObject*, const QByteArray& identifier, int signalIndex, int flags, QtInstance*);
+    QtRuntimeMethod(QObject*, const QByteArray& identifier, int signalIndex, int flags, QtInstance*);
     ~QtRuntimeMethod();
 
     static JSValueRef call(JSContextRef ctx, JSObjectRef function, JSObjectRef thisObject, size_t argumentCount, const JSValueRef arguments[], JSValueRef* exception);
diff --git a/Source/WebCore/platform/graphics/opengl/TemporaryOpenGLSetting.cpp b/Source/WebCore/platform/graphics/opengl/TemporaryOpenGLSetting.cpp
index c502a0c3b95a..8ae96b94ce89 100644
--- a/Source/WebCore/platform/graphics/opengl/TemporaryOpenGLSetting.cpp
+++ b/Source/WebCore/platform/graphics/opengl/TemporaryOpenGLSetting.cpp
@@ -29,7 +29,11 @@
 #if ENABLE(GRAPHICS_CONTEXT_3D)
 #include "TemporaryOpenGLSetting.h"
 
-#if USE(OPENGL_ES_2)
+#if PLATFORM(QT)
+#define FUNCTIONS m_functions
+#include "OpenGLShimsQt.h"
+#define glIsEnabled(...) m_functions->glIsEnabled(__VA_ARGS__)
+#elif USE(OPENGL_ES_2)
 #include <GLES2/gl2.h>
 #include "OpenGLESShims.h"
 #elif PLATFORM(IOS)
@@ -38,10 +42,6 @@
 #include <OpenGL/gl.h>
 #elif PLATFORM(GTK) || PLATFORM(EFL) || PLATFORM(WIN)
 #include "OpenGLShims.h"
-#elif PLATFORM(QT)
-#define FUNCTIONS m_functions
-#include "OpenGLShimsQt.h"
-#define glIsEnabled(...) m_functions->glIsEnabled(__VA_ARGS__)
 #endif
 
 namespace WebCore {
diff --git a/Source/WebCore/platform/graphics/qt/FontCacheQt.cpp b/Source/WebCore/platform/graphics/qt/FontCacheQt.cpp
index 1222196dd7c2..7be647748b81 100644
--- a/Source/WebCore/platform/graphics/qt/FontCacheQt.cpp
+++ b/Source/WebCore/platform/graphics/qt/FontCacheQt.cpp
@@ -29,7 +29,6 @@
 #include "FontDescription.h"
 #include "FontPlatformData.h"
 #include <utility>
-#include <wtf/ListHashSet.h>
 #include <wtf/StdLibExtras.h>
 #include <wtf/text/StringHash.h>
 #include <wtf/text/WTFString.h>
diff --git a/Source/WebCore/platform/graphics/qt/FontCascadeQt.cpp b/Source/WebCore/platform/graphics/qt/FontCascadeQt.cpp
index 1ead333cea82..47bcd8df6bce 100644
--- a/Source/WebCore/platform/graphics/qt/FontCascadeQt.cpp
+++ b/Source/WebCore/platform/graphics/qt/FontCascadeQt.cpp
@@ -24,9 +24,7 @@
 
 #include "Font.h"
 
-#include "AffineTransform.h"
 #include "FontDescription.h"
-#include "FontSelector.h"
 #include "GlyphBuffer.h"
 #include "Gradient.h"
 #include "GraphicsContext.h"
@@ -264,8 +262,13 @@ void FontCascade::initFormatForTextLayout(QTextLayout* layout, const TextRun& ru
     if (isSmallCaps())
         range.format.setFontCapitalization(QFont::SmallCaps);
 
-    if (range.format.propertyCount() && range.length)
+    if (range.format.propertyCount() && range.length) {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 6, 0)
+        layout->setFormats(QVector<QTextLayout::FormatRange>() << range);
+#else
         layout->setAdditionalFormats(QList<QTextLayout::FormatRange>() << range);
+#endif
+    }
 }
 
 bool FontCascade::canReturnFallbackFontsForComplexText()
diff --git a/Source/WebCore/platform/graphics/qt/FontCustomPlatformData.h b/Source/WebCore/platform/graphics/qt/FontCustomPlatformData.h
index 31d169f62fae..c2d0c9fa2195 100644
--- a/Source/WebCore/platform/graphics/qt/FontCustomPlatformData.h
+++ b/Source/WebCore/platform/graphics/qt/FontCustomPlatformData.h
@@ -22,7 +22,6 @@
 #ifndef FontCustomPlatformData_h
 #define FontCustomPlatformData_h
 
-#include "TextFlags.h"
 #include <QRawFont>
 #include <wtf/FastMalloc.h>
 #include <wtf/Forward.h>
diff --git a/Source/WebCore/platform/graphics/qt/FontCustomPlatformDataQt.cpp b/Source/WebCore/platform/graphics/qt/FontCustomPlatformDataQt.cpp
index bc65c0511ffd..908d881f1218 100644
--- a/Source/WebCore/platform/graphics/qt/FontCustomPlatformDataQt.cpp
+++ b/Source/WebCore/platform/graphics/qt/FontCustomPlatformDataQt.cpp
@@ -24,7 +24,6 @@
 
 #include "FontPlatformData.h"
 #include "SharedBuffer.h"
-#include "WOFFFileFormat.h"
 #include <QStringList>
 
 namespace WebCore {
diff --git a/Source/WebCore/platform/graphics/qt/FontPlatformData.h b/Source/WebCore/platform/graphics/qt/FontPlatformData.h
index c8375ebcd464..8c1327e134dd 100644
--- a/Source/WebCore/platform/graphics/qt/FontPlatformData.h
+++ b/Source/WebCore/platform/graphics/qt/FontPlatformData.h
@@ -29,7 +29,6 @@
 #include <QFont>
 #include <QHash>
 #include <QRawFont>
-#include <wtf/Forward.h>
 #include <wtf/RefCounted.h>
 
 namespace WebCore {
diff --git a/Source/WebCore/platform/graphics/qt/GradientQt.cpp b/Source/WebCore/platform/graphics/qt/GradientQt.cpp
index 72bb0093844e..3412cfadd3f5 100644
--- a/Source/WebCore/platform/graphics/qt/GradientQt.cpp
+++ b/Source/WebCore/platform/graphics/qt/GradientQt.cpp
@@ -27,7 +27,6 @@
 #include "config.h"
 #include "Gradient.h"
 
-#include "CSSParser.h"
 #include "GraphicsContext.h"
 
 #include <QGradient>
diff --git a/Source/WebCore/platform/graphics/qt/GraphicsContext3DQt.cpp b/Source/WebCore/platform/graphics/qt/GraphicsContext3DQt.cpp
index 7f2f07b60deb..fe63ff7bbebb 100644
--- a/Source/WebCore/platform/graphics/qt/GraphicsContext3DQt.cpp
+++ b/Source/WebCore/platform/graphics/qt/GraphicsContext3DQt.cpp
@@ -24,16 +24,13 @@
 #include "GraphicsSurface.h"
 #include "HostWindow.h"
 #include "ImageBuffer.h"
-#include "ImageData.h"
 #include "NativeImageQt.h"
-#include "NotImplemented.h"
 #include "QWebPageClient.h"
 #include "SharedBuffer.h"
 #include "TextureMapperPlatformLayer.h"
 #include <QOffscreenSurface>
 #include <private/qopenglextensions_p.h>
 #include <qpa/qplatformpixmap.h>
-#include <wtf/text/CString.h>
 
 #if USE(TEXTURE_MAPPER_GL)
 #include <texmap/TextureMapperGL.h>
diff --git a/Source/WebCore/platform/graphics/qt/GraphicsContextQt.cpp b/Source/WebCore/platform/graphics/qt/GraphicsContextQt.cpp
index 59519398e737..260081946eb0 100644
--- a/Source/WebCore/platform/graphics/qt/GraphicsContextQt.cpp
+++ b/Source/WebCore/platform/graphics/qt/GraphicsContextQt.cpp
@@ -47,10 +47,8 @@
 #include "Color.h"
 #include "DisplayListRecorder.h"
 #include "FloatConversion.h"
-#include "Font.h"
 #include "ImageBuffer.h"
 #include "ImageBufferDataQt.h"
-#include "NotImplemented.h"
 #include "Path.h"
 #include "Pattern.h"
 #include "ShadowBlur.h"
diff --git a/Source/WebCore/platform/graphics/qt/IconQt.cpp b/Source/WebCore/platform/graphics/qt/IconQt.cpp
index 24f13067d596..9bd3d5323863 100644
--- a/Source/WebCore/platform/graphics/qt/IconQt.cpp
+++ b/Source/WebCore/platform/graphics/qt/IconQt.cpp
@@ -23,7 +23,6 @@
 
 #include "GraphicsContext.h"
 #include "IntRect.h"
-#include "NotImplemented.h"
 #include <QMimeDatabase>
 #include <wtf/text/WTFString.h>
 
diff --git a/Source/WebCore/platform/graphics/qt/ImageBufferDataQt.cpp b/Source/WebCore/platform/graphics/qt/ImageBufferDataQt.cpp
index e76572134b2e..9037ae6acd3f 100644
--- a/Source/WebCore/platform/graphics/qt/ImageBufferDataQt.cpp
+++ b/Source/WebCore/platform/graphics/qt/ImageBufferDataQt.cpp
@@ -32,7 +32,6 @@
 
 #include "GraphicsContext.h"
 #include "GraphicsSurface.h"
-#include "ImageData.h"
 #include "IntRect.h"
 #include "StillImageQt.h"
 
diff --git a/Source/WebCore/platform/graphics/qt/ImageBufferQt.cpp b/Source/WebCore/platform/graphics/qt/ImageBufferQt.cpp
index 380d22bb5cda..2295362aa69c 100644
--- a/Source/WebCore/platform/graphics/qt/ImageBufferQt.cpp
+++ b/Source/WebCore/platform/graphics/qt/ImageBufferQt.cpp
@@ -31,14 +31,12 @@
 #include "ImageBuffer.h"
 
 #include "GraphicsContext.h"
-#include "ImageData.h"
 #include "IntRect.h"
 #include "MIMETypeRegistry.h"
 #include "StillImageQt.h"
 #include "TransparencyLayer.h"
 #include <runtime/JSCInlines.h>
 #include <runtime/TypedArrayInlines.h>
-#include <wtf/text/CString.h>
 #include <wtf/text/WTFString.h>
 
 #include <QBuffer>
diff --git a/Source/WebCore/platform/graphics/qt/MediaPlayerPrivateQt.cpp b/Source/WebCore/platform/graphics/qt/MediaPlayerPrivateQt.cpp
index 95548dff3749..9091fdc72605 100644
--- a/Source/WebCore/platform/graphics/qt/MediaPlayerPrivateQt.cpp
+++ b/Source/WebCore/platform/graphics/qt/MediaPlayerPrivateQt.cpp
@@ -25,13 +25,10 @@
 #include "GraphicsContext.h"
 #include "GraphicsLayer.h"
 #include "HTMLMediaElement.h"
-#include "HTMLVideoElement.h"
 #include "Logging.h"
 #include "NetworkingContext.h"
 #include "NotImplemented.h"
 #include "RenderVideo.h"
-#include "TimeRanges.h"
-#include "Widget.h"
 
 #include <QMediaPlayerControl>
 #include <QMediaService>
diff --git a/Source/WebCore/platform/graphics/qt/PathQt.cpp b/Source/WebCore/platform/graphics/qt/PathQt.cpp
index ecafcdb0e94c..f3d7481eaf09 100644
--- a/Source/WebCore/platform/graphics/qt/PathQt.cpp
+++ b/Source/WebCore/platform/graphics/qt/PathQt.cpp
@@ -34,7 +34,6 @@
 #include "AffineTransform.h"
 #include "FloatRect.h"
 #include "GraphicsContext.h"
-#include "ImageBuffer.h"
 #include "NativeImageQt.h"
 #include "StrokeStyleApplier.h"
 #include <QPainterPath>
diff --git a/Source/WebCore/platform/graphics/qt/PatternQt.cpp b/Source/WebCore/platform/graphics/qt/PatternQt.cpp
index 7aae62599019..8795f35473d1 100644
--- a/Source/WebCore/platform/graphics/qt/PatternQt.cpp
+++ b/Source/WebCore/platform/graphics/qt/PatternQt.cpp
@@ -26,8 +26,7 @@
 #include "config.h"
 #include "Pattern.h"
 
-#include "AffineTransform.h"
-#include "GraphicsContext.h"
+#include "Image.h"
 
 namespace WebCore {
 
diff --git a/Source/WebCore/platform/graphics/qt/StillImageQt.cpp b/Source/WebCore/platform/graphics/qt/StillImageQt.cpp
index 5569474f08f7..a2fc59e9fbaf 100644
--- a/Source/WebCore/platform/graphics/qt/StillImageQt.cpp
+++ b/Source/WebCore/platform/graphics/qt/StillImageQt.cpp
@@ -29,7 +29,6 @@
 #include "StillImageQt.h"
 
 #include "GraphicsContext.h"
-#include "IntSize.h"
 #include "ShadowBlur.h"
 
 #include <QPainter>
diff --git a/Source/WebCore/platform/graphics/qt/TransformationMatrixQt.cpp b/Source/WebCore/platform/graphics/qt/TransformationMatrixQt.cpp
index 73a0e414fa58..bf3e8c6c54df 100644
--- a/Source/WebCore/platform/graphics/qt/TransformationMatrixQt.cpp
+++ b/Source/WebCore/platform/graphics/qt/TransformationMatrixQt.cpp
@@ -27,8 +27,6 @@
 #include "AffineTransform.h"
 #include "TransformationMatrix.h"
 
-#include "FloatRect.h"
-#include "IntRect.h"
 
 namespace WebCore {
 
diff --git a/Source/WebCore/platform/network/qt/BlobUrlConversion.cpp b/Source/WebCore/platform/network/qt/BlobUrlConversion.cpp
new file mode 100644
index 000000000000..8f61eaeb98a6
--- /dev/null
+++ b/Source/WebCore/platform/network/qt/BlobUrlConversion.cpp
@@ -0,0 +1,98 @@
+/*
+    Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies)
+    Copyright (C) 2017 Konstantin Tokarev <annulen@yandex.ru>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Library General Public
+    License as published by the Free Software Foundation; either
+    version 2 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Library General Public License for more details.
+
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to
+    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+    Boston, MA 02110-1301, USA.
+*/
+
+#include "config.h"
+#include "BlobUrlConversion.h"
+
+#include "BlobData.h"
+#include "BlobRegistryImpl.h"
+
+#include <QUrl>
+#include <wtf/text/Base64.h>
+
+namespace WebCore {
+
+static bool appendBlobResolved(Vector<char>& out, const URL& url, QString* contentType = 0)
+{
+    RefPtr<BlobData> blobData = static_cast<BlobRegistryImpl&>(blobRegistry()).getBlobDataFromURL(url);
+    if (!blobData)
+        return false;
+
+    if (contentType)
+        *contentType = blobData->contentType();
+
+    BlobDataItemList::const_iterator it = blobData->items().begin();
+    const BlobDataItemList::const_iterator itend = blobData->items().end();
+    for (; it != itend; ++it) {
+        const BlobDataItem& blobItem = *it;
+        if (blobItem.type() == BlobDataItem::Type::Data) {
+            if (!out.tryAppend(reinterpret_cast<const char*>(blobItem.data().data()->data()) + blobItem.offset(), blobItem.length()))
+                return false;
+        } else if (blobItem.type() == BlobDataItem::Type::File) {
+            // File types are not allowed here, so just ignore it.
+            RELEASE_ASSERT_WITH_MESSAGE(false, "File types are not allowed here");
+        } else
+            ASSERT_NOT_REACHED();
+    }
+    return true;
+}
+
+static QUrl resolveBlobUrl(const URL& url)
+{
+    RefPtr<BlobData> blobData = static_cast<BlobRegistryImpl&>(blobRegistry()).getBlobDataFromURL(url);
+    if (!blobData)
+        return QUrl();
+
+    Vector<char> data;
+    QString contentType;
+    if (!appendBlobResolved(data, url, &contentType)) {
+        qWarning("Failed to convert blob data to base64: cannot allocate memory for continuous blob data");
+        return QUrl();
+    }
+
+    // QByteArray::{from,to}Base64 are prone to integer overflow, this is the maximum size that can be safe
+    size_t maxBase64Size = std::numeric_limits<int>::max() / 3 - 1;
+
+    Vector<char> base64;
+    WTF::base64Encode(data, base64, WTF::Base64URLPolicy);
+    if (base64.isEmpty() || base64.size() > maxBase64Size) {
+        qWarning("Failed to convert blob data to base64: data is too large");
+        return QUrl();
+    }
+
+    QString dataUri(QStringLiteral("data:"));
+    dataUri.append(contentType);
+    dataUri.append(QStringLiteral(";base64,"));
+    dataUri.reserve(dataUri.size() + base64.size());
+    dataUri.append(QLatin1String(base64.data(), base64.size()));
+    return QUrl(dataUri);
+}
+
+QUrl convertBlobToDataUrl(const QUrl& url)
+{
+    QT_TRY {
+        return resolveBlobUrl(url);
+    } QT_CATCH(const std::bad_alloc &) {
+        qWarning("Failed to convert blob data to base64: not enough memory");
+    }
+    return QUrl();
+}
+
+} // namespace WebCore
diff --git a/Source/WebCore/platform/network/qt/BlobUrlConversion.h b/Source/WebCore/platform/network/qt/BlobUrlConversion.h
new file mode 100644
index 000000000000..2dbd0a680105
--- /dev/null
+++ b/Source/WebCore/platform/network/qt/BlobUrlConversion.h
@@ -0,0 +1,29 @@
+/*
+    Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies)
+    Copyright (C) 2017 Konstantin Tokarev <annulen@yandex.ru>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Library General Public
+    License as published by the Free Software Foundation; either
+    version 2 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Library General Public License for more details.
+
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to
+    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+    Boston, MA 02110-1301, USA.
+*/
+
+QT_BEGIN_NAMESPACE
+class QUrl;
+QT_END_NAMESPACE
+
+namespace WebCore {
+
+QUrl convertBlobToDataUrl(const QUrl&);
+
+}
diff --git a/Source/WebCore/platform/network/qt/CookieJarQt.cpp b/Source/WebCore/platform/network/qt/CookieJarQt.cpp
index 3b08c06cd125..d1cf87fdd0f8 100644
--- a/Source/WebCore/platform/network/qt/CookieJarQt.cpp
+++ b/Source/WebCore/platform/network/qt/CookieJarQt.cpp
@@ -42,12 +42,21 @@
 #include <QNetworkCookie>
 #include <QStringList>
 #include <QVariant>
+#include <wtf/text/StringBuilder.h>
 #include <wtf/text/WTFString.h>
 
 namespace WebCore {
 
 static SharedCookieJarQt* s_sharedCookieJarQt = 0;
 
+static void appendCookie(StringBuilder& builder, const QNetworkCookie& cookie)
+{
+    if (!builder.isEmpty())
+        builder.append("; ");
+    QByteArray rawData = cookie.toRawForm(QNetworkCookie::NameAndValueOnly);
+    builder.append(rawData.constData(), rawData.length());
+}
+
 void setCookiesFromDOM(const NetworkStorageSession& session, const URL& firstParty, const URL& url, const String& value)
 {
     QNetworkCookieJar* jar = session.context() ? session.context()->networkAccessManager()->cookieJar() : SharedCookieJarQt::shared();
@@ -59,7 +68,8 @@ void setCookiesFromDOM(const NetworkStorageSession& session, const URL& firstPar
     if (!thirdPartyCookiePolicyPermits(session.context(), urlForCookies, firstPartyUrl))
         return;
 
-    QList<QNetworkCookie> cookies = QNetworkCookie::parseCookies(QString(value).toLatin1());
+    CString cookieString = value.latin1();
+    QList<QNetworkCookie> cookies = QNetworkCookie::parseCookies(QByteArray::fromRawData(cookieString.data(), cookieString.length()));
     QList<QNetworkCookie>::Iterator it = cookies.begin();
     while (it != cookies.end()) {
         if (it->isHttpOnly())
@@ -86,14 +96,13 @@ String cookiesForDOM(const NetworkStorageSession& session, const URL& firstParty
     if (cookies.isEmpty())
         return String();
 
-    QStringList resultCookies;
-    foreach (const QNetworkCookie& networkCookie, cookies) {
-        if (networkCookie.isHttpOnly())
+    StringBuilder builder;
+    for (const auto& cookie : cookies) {
+        if (cookie.isHttpOnly())
             continue;
-        resultCookies.append(QString::fromLatin1(networkCookie.toRawForm(QNetworkCookie::NameAndValueOnly).constData()));
+        appendCookie(builder, cookie);
     }
-
-    return resultCookies.join(QLatin1String("; "));
+    return builder.toString();
 }
 
 String cookieRequestHeaderFieldValue(const NetworkStorageSession& session, const URL& /*firstParty*/, const URL& url)
@@ -106,11 +115,10 @@ String cookieRequestHeaderFieldValue(const NetworkStorageSession& session, const
     if (cookies.isEmpty())
         return String();
 
-    QStringList resultCookies;
-    foreach (QNetworkCookie networkCookie, cookies)
-        resultCookies.append(QString::fromLatin1(networkCookie.toRawForm(QNetworkCookie::NameAndValueOnly).constData()));
-
-    return resultCookies.join(QLatin1String("; "));
+    StringBuilder builder;
+    for (const auto& cookie : cookies)
+        appendCookie(builder, cookie);
+    return builder.toString();
 }
 
 bool cookiesEnabled(const NetworkStorageSession& session, const URL& /*firstParty*/, const URL& /*url*/)
diff --git a/Source/WebCore/platform/network/qt/QNetworkReplyHandler.cpp b/Source/WebCore/platform/network/qt/QNetworkReplyHandler.cpp
index cd096bfe7f04..1b60c5131757 100644
--- a/Source/WebCore/platform/network/qt/QNetworkReplyHandler.cpp
+++ b/Source/WebCore/platform/network/qt/QNetworkReplyHandler.cpp
@@ -647,7 +647,10 @@ void QNetworkReplyHandler::redirect(ResourceResponse& response, const QUrl& redi
 {
     ASSERT(!m_queue.deferSignals());
 
-    QUrl newUrl = m_replyWrapper->reply()->url().resolved(redirection);
+    QUrl currentUrl = m_replyWrapper->reply()->url();
+    QUrl newUrl = currentUrl.resolved(redirection);
+    if (currentUrl.hasFragment())
+        newUrl.setFragment(currentUrl.fragment());
 
     ResourceHandleClient* client = m_resourceHandle->client();
     ASSERT(client);
diff --git a/Source/WebCore/platform/network/qt/ResourceHandleQt.cpp b/Source/WebCore/platform/network/qt/ResourceHandleQt.cpp
index b850e2327592..8b69383ff8ec 100644
--- a/Source/WebCore/platform/network/qt/ResourceHandleQt.cpp
+++ b/Source/WebCore/platform/network/qt/ResourceHandleQt.cpp
@@ -30,10 +30,6 @@
 #include "config.h"
 #include "ResourceHandle.h"
 
-#include "CachedResourceLoader.h"
-#include "Frame.h"
-#include "FrameNetworkingContext.h"
-#include "NotImplemented.h"
 #include "Page.h"
 #include "QNetworkReplyHandler.h"
 #include "ResourceHandleClient.h"
diff --git a/Source/WebCore/platform/network/qt/ResourceRequestQt.cpp b/Source/WebCore/platform/network/qt/ResourceRequestQt.cpp
index d74073ec53d7..b7f9447bcb0f 100644
--- a/Source/WebCore/platform/network/qt/ResourceRequestQt.cpp
+++ b/Source/WebCore/platform/network/qt/ResourceRequestQt.cpp
@@ -18,14 +18,11 @@
 */
 
 #include "config.h"
-#include "NetworkingContext.h"
 #include "ResourceRequest.h"
-#include "ThirdPartyCookiesQt.h"
-
-#include "BlobData.h"
-#include "BlobRegistryImpl.h"
 
-#include <qglobal.h>
+#include "BlobUrlConversion.h"
+#include "NetworkingContext.h"
+#include "ThirdPartyCookiesQt.h"
 
 #include <QNetworkRequest>
 #include <QUrl>
@@ -43,44 +40,11 @@ unsigned initializeMaximumHTTPConnectionCountPerHost()
     return 6 * (1 + 3 + 2);
 }
 
-static void appendBlobResolved(QByteArray& data, const QUrl& url, QString* contentType = 0)
-{
-    RefPtr<BlobData> blobData = static_cast<BlobRegistryImpl&>(blobRegistry()).getBlobDataFromURL(url);
-    if (!blobData)
-        return;
-
-    if (contentType)
-        *contentType = blobData->contentType();
-
-    BlobDataItemList::const_iterator it = blobData->items().begin();
-    const BlobDataItemList::const_iterator itend = blobData->items().end();
-    for (; it != itend; ++it) {
-        const BlobDataItem& blobItem = *it;
-        if (blobItem.type() == BlobDataItem::Type::Data)
-            data.append(reinterpret_cast<const char*>(blobItem.data().data()->data()) + static_cast<int>(blobItem.offset()), static_cast<int>(blobItem.length()));
-        else if (blobItem.type() == BlobDataItem::Type::File) {
-            // File types are not allowed here, so just ignore it.
-            RELEASE_ASSERT_WITH_MESSAGE(false, "File types are not allowed here");
-        } else
-            ASSERT_NOT_REACHED();
-    }
-}
-
-static void resolveBlobUrl(const QUrl& url, QUrl& resolvedUrl)
+static QUrl toQUrl(const URL& url)
 {
-    RefPtr<BlobData> blobData = static_cast<BlobRegistryImpl&>(blobRegistry()).getBlobDataFromURL(url);
-    if (!blobData)
-        return;
-
-    QByteArray data;
-    QString contentType;
-    appendBlobResolved(data, url, &contentType);
-
-    QString dataUri(QStringLiteral("data:"));
-    dataUri.append(contentType);
-    dataUri.append(QStringLiteral(";base64,"));
-    dataUri.append(QString::fromLatin1(data.toBase64()));
-    resolvedUrl = QUrl(dataUri);
+    if (url.protocolIsBlob())
+        return convertBlobToDataUrl(url);
+    return url;
 }
 
 static inline QByteArray stringToByteArray(const String& string)
@@ -93,14 +57,16 @@ static inline QByteArray stringToByteArray(const String& string)
 QNetworkRequest ResourceRequest::toNetworkRequest(NetworkingContext *context) const
 {
     QNetworkRequest request;
-    QUrl newurl = url();
-
-    if (newurl.scheme() == QLatin1String("blob"))
-        resolveBlobUrl(url(), newurl);
-
+    QUrl newurl = toQUrl(url());
     request.setUrl(newurl);
     request.setOriginatingObject(context ? context->originatingObject() : 0);
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 8, 0)
+    // HTTP2AllowedAttribute enforces HTTP/2 instead of negotiating, see QTBUG-61397
+    if (newurl.scheme().toLower() == QLatin1String("https"))
+        request.setAttribute(QNetworkRequest::HTTP2AllowedAttribute, true);
+#endif
+
     const HTTPHeaderMap &headers = httpHeaderFields();
     for (HTTPHeaderMap::const_iterator it = headers.begin(), end = headers.end();
          it != end; ++it) {
diff --git a/Source/WebCore/platform/qt/DeviceMotionClientQt.cpp b/Source/WebCore/platform/qt/DeviceMotionClientQt.cpp
index 88fb5c1c6ddc..5c01f29f5c19 100644
--- a/Source/WebCore/platform/qt/DeviceMotionClientQt.cpp
+++ b/Source/WebCore/platform/qt/DeviceMotionClientQt.cpp
@@ -23,7 +23,6 @@
 
 #include "DeviceMotionProviderQt.h"
 
-#include <wtf/RefPtr.h>
 
 namespace WebCore {
 
diff --git a/Source/WebCore/platform/qt/GamepadsQt.cpp b/Source/WebCore/platform/qt/GamepadsQt.cpp
index 6fff52f9aab7..70b4305def54 100644
--- a/Source/WebCore/platform/qt/GamepadsQt.cpp
+++ b/Source/WebCore/platform/qt/GamepadsQt.cpp
@@ -37,7 +37,6 @@
 #include <unistd.h>
 #include <wtf/HashMap.h>
 #include <wtf/NeverDestroyed.h>
-#include <wtf/text/CString.h>
 #include <wtf/text/StringHash.h>
 
 // Forward declarations for libudev, they are all used opaque so we don't need the definitions.
diff --git a/Source/WebCore/platform/qt/MIMETypeRegistryQt.cpp b/Source/WebCore/platform/qt/MIMETypeRegistryQt.cpp
index 3e3f879ed0e8..ab34c8333d07 100644
--- a/Source/WebCore/platform/qt/MIMETypeRegistryQt.cpp
+++ b/Source/WebCore/platform/qt/MIMETypeRegistryQt.cpp
@@ -31,7 +31,6 @@
 
 #include <QMimeDatabase>
 #include <wtf/Assertions.h>
-#include <wtf/MainThread.h>
 
 namespace WebCore {
 
diff --git a/Source/WebCore/platform/qt/MainThreadSharedTimerQt.cpp b/Source/WebCore/platform/qt/MainThreadSharedTimerQt.cpp
index 7aae3f1de49c..0f0864106202 100644
--- a/Source/WebCore/platform/qt/MainThreadSharedTimerQt.cpp
+++ b/Source/WebCore/platform/qt/MainThreadSharedTimerQt.cpp
@@ -34,7 +34,6 @@
 #include <QBasicTimer>
 #include <QCoreApplication>
 #include <QPointer>
-#include <wtf/CurrentTime.h>
 
 namespace WebCore {
 
diff --git a/Source/WebCore/platform/qt/PlatformGestureEvent.h b/Source/WebCore/platform/qt/PlatformGestureEvent.h
index 1beac6a68ab7..1a0006842378 100644
--- a/Source/WebCore/platform/qt/PlatformGestureEvent.h
+++ b/Source/WebCore/platform/qt/PlatformGestureEvent.h
@@ -28,7 +28,6 @@
 
 #if ENABLE(QT_GESTURE_EVENTS)
 
-#include "FloatPoint.h"
 #include "IntPoint.h"
 #include "IntSize.h"
 #include "PlatformEvent.h"
diff --git a/Source/WebCore/platform/qt/PlatformScreenQt.cpp b/Source/WebCore/platform/qt/PlatformScreenQt.cpp
index 91ff0ab43822..2790a0d9cf57 100644
--- a/Source/WebCore/platform/qt/PlatformScreenQt.cpp
+++ b/Source/WebCore/platform/qt/PlatformScreenQt.cpp
@@ -32,7 +32,6 @@
 #include "PlatformScreen.h"
 
 #include "FloatRect.h"
-#include "Frame.h"
 #include "FrameView.h"
 #include "HostWindow.h"
 #include "NotImplemented.h"
diff --git a/Source/WebCore/platform/qt/RenderThemeQStyle.cpp b/Source/WebCore/platform/qt/RenderThemeQStyle.cpp
index 7373acca7b4e..706570399a58 100644
--- a/Source/WebCore/platform/qt/RenderThemeQStyle.cpp
+++ b/Source/WebCore/platform/qt/RenderThemeQStyle.cpp
@@ -34,23 +34,17 @@
 #include "CSSValueKeywords.h"
 #include "Chrome.h"
 #include "ChromeClient.h"
-#include "Color.h"
 #include "Document.h"
-#include "Font.h"
-#include "FontSelector.h"
 #include "GraphicsContext.h"
 #include "HTMLInputElement.h"
 #include "HTMLNames.h"
-#include "LocalizedStrings.h"
 #include "NotImplemented.h"
 #include "Page.h"
 #include "PaintInfo.h"
 #include "QWebPageClient.h"
 #include "RenderBox.h"
 #include "RenderProgress.h"
-#include "RenderSlider.h"
 #include "ScrollbarThemeQStyle.h"
-#include "SliderThumbElement.h"
 #include "StyleResolver.h"
 #include "UserAgentStyleSheets.h"
 
diff --git a/Source/WebCore/platform/qt/RenderThemeQt.cpp b/Source/WebCore/platform/qt/RenderThemeQt.cpp
index 2cd35700ae3f..01968deba567 100644
--- a/Source/WebCore/platform/qt/RenderThemeQt.cpp
+++ b/Source/WebCore/platform/qt/RenderThemeQt.cpp
@@ -31,21 +31,15 @@
 #include "RenderThemeQt.h"
 
 #include "CSSValueKeywords.h"
-#include "Chrome.h"
 #include "ChromeClient.h"
 #include "Color.h"
 #include "ExceptionCodePlaceholder.h"
 #include "FileList.h"
-#include "Font.h"
-#include "FontSelector.h"
 #include "GraphicsContext.h"
 #include "HTMLInputElement.h"
 #include "HTMLMediaElement.h"
 #include "HTMLNames.h"
 #include "LocalizedStrings.h"
-#if ENABLE(VIDEO)
-#include "MediaControlElements.h"
-#endif
 #include "NotImplemented.h"
 #include "Page.h"
 #include "PaintInfo.h"
@@ -56,9 +50,6 @@
 #include "ScrollbarTheme.h"
 #include "StyleResolver.h"
 #include "TimeRanges.h"
-#if ENABLE(VIDEO)
-#include "UserAgentScripts.h"
-#endif
 #include "UserAgentStyleSheets.h"
 #include <wtf/text/StringBuilder.h>
 
@@ -69,6 +60,10 @@
 
 #include <QStyleHints>
 
+#if ENABLE(VIDEO)
+#include "UserAgentScripts.h"
+#endif
+
 namespace WebCore {
 
 using namespace HTMLNames;
@@ -542,7 +537,7 @@ bool RenderThemeQt::supportsFocus(ControlPart appearance) const
 #if ENABLE(VIDEO)
 String RenderThemeQt::mediaControlsStyleSheet()
 {
-    return ASCIILiteral(mediaControlsBaseUserAgentStyleSheet);
+    return String(mediaControlsBaseUserAgentStyleSheet, sizeof(mediaControlsBaseUserAgentStyleSheet));
 }
 
 String RenderThemeQt::mediaControlsScript()
diff --git a/Source/WebCore/platform/qt/RenderThemeQtMobile.cpp b/Source/WebCore/platform/qt/RenderThemeQtMobile.cpp
index e4a34de295f4..cf5f6491b935 100644
--- a/Source/WebCore/platform/qt/RenderThemeQtMobile.cpp
+++ b/Source/WebCore/platform/qt/RenderThemeQtMobile.cpp
@@ -30,11 +30,8 @@
 #include "HTMLInputElement.h"
 #include "HTMLNames.h"
 #include "HTMLSelectElement.h"
-#include "LocalizedStrings.h"
-#include "NotImplemented.h"
 #include "Page.h"
 #include "PaintInfo.h"
-#include "QWebPageClient.h"
 #include "RenderBox.h"
 #include "RenderProgress.h"
 #include "StyleResolver.h"
diff --git a/Source/WebCore/platform/qt/TemporaryLinkStubsQt.cpp b/Source/WebCore/platform/qt/TemporaryLinkStubsQt.cpp
index fb33526758e8..1ccc38a67a8b 100644
--- a/Source/WebCore/platform/qt/TemporaryLinkStubsQt.cpp
+++ b/Source/WebCore/platform/qt/TemporaryLinkStubsQt.cpp
@@ -32,42 +32,17 @@
 
 #include "config.h"
 
-#include "AXObjectCache.h"
-#include "CachedResource.h"
-#include "CookieJar.h"
 #include "CookieStorage.h"
-#include "Cursor.h"
-#include "DNS.h"
-#include "FTPDirectoryDocument.h"
-#include "FileSystem.h"
-#include "Font.h"
-#include "Frame.h"
-#include "FrameLoader.h"
-#include "FrameView.h"
-#include "GraphicsContext.h"
-#include "IconLoader.h"
-#include "IntPoint.h"
-#include "URL.h"
-#include "Language.h"
-#include "LocalizedStrings.h"
-#include "Node.h"
 #include "NotImplemented.h"
-#include "Path.h"
-#include "PlatformMouseEvent.h"
-#include "RenderTheme.h"
-#include "SharedBuffer.h"
-#include "TextBoundaries.h"
-#include "Widget.h"
-
-#include <float.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include <wtf/text/CString.h>
+#include <wtf/Vector.h>
+#include <wtf/text/WTFString.h>
 
 using namespace WebCore;
 
 namespace WebCore {
 
+class URL;
+
 void getSupportedKeySizes(Vector<String>&)
 {
     notImplemented();
diff --git a/Source/WebCore/platform/qt/ThirdPartyCookiesQt.cpp b/Source/WebCore/platform/qt/ThirdPartyCookiesQt.cpp
index 3f2f572ad32e..4bfb7244f2d5 100644
--- a/Source/WebCore/platform/qt/ThirdPartyCookiesQt.cpp
+++ b/Source/WebCore/platform/qt/ThirdPartyCookiesQt.cpp
@@ -20,8 +20,6 @@
 #include "config.h"
 #include "ThirdPartyCookiesQt.h"
 
-#include "Cookie.h"
-#include "CookieJar.h"
 #include "Document.h"
 #include "NetworkingContext.h"
 
diff --git a/Source/WebCore/platform/qt/URLQt.cpp b/Source/WebCore/platform/qt/URLQt.cpp
index 7b588fa5bd65..00ab8e7ab993 100644
--- a/Source/WebCore/platform/qt/URLQt.cpp
+++ b/Source/WebCore/platform/qt/URLQt.cpp
@@ -20,10 +20,8 @@
 #include "config.h"
 #include "URL.h"
 
-#include "NotImplemented.h"
 #include "TextEncoding.h"
 #include "qurl.h"
-#include <wtf/text/CString.h>
 
 namespace WebCore {
 
diff --git a/Source/WebCore/platform/qt/UserAgentQt.cpp b/Source/WebCore/platform/qt/UserAgentQt.cpp
index 4b8876220bff..fc5eab7a88a7 100644
--- a/Source/WebCore/platform/qt/UserAgentQt.cpp
+++ b/Source/WebCore/platform/qt/UserAgentQt.cpp
@@ -37,7 +37,7 @@ namespace WebCore {
 
     This implementation returns the following value:
 
-    "Mozilla/5.0 (%Platform%%Security%%Subplatform%) AppleWebKit/%WebKitVersion% (KHTML, like Gecko) %AppVersion Version/9.0 Safari/%WebKitVersion%"
+    "Mozilla/5.0 (%Platform%%Security%%Subplatform%) AppleWebKit/%WebKitVersion% (KHTML, like Gecko) %AppVersion Version/10.0 Safari/%WebKitVersion%"
 
     In this string the following values are replaced the first time the function is called:
     \list
@@ -58,7 +58,7 @@ String UserAgentQt::standardUserAgent(const String &applicationNameForUserAgent,
 
     if (ua.isNull()) {
 
-        ua = QStringLiteral("Mozilla/5.0 (%1%2%3) AppleWebKit/%4 (KHTML, like Gecko) %99 Version/9.0 Safari/%5");
+        ua = QStringLiteral("Mozilla/5.0 (%1%2%3) AppleWebKit/%4 (KHTML, like Gecko) %99 Version/10.0 Safari/%5");
 
         // Platform.
         ua = ua.arg(
diff --git a/Source/WebCore/platform/qt/WidgetQt.cpp b/Source/WebCore/platform/qt/WidgetQt.cpp
index 0d16699411e3..715ed09ea6f8 100644
--- a/Source/WebCore/platform/qt/WidgetQt.cpp
+++ b/Source/WebCore/platform/qt/WidgetQt.cpp
@@ -33,7 +33,6 @@
 #include "Widget.h"
 
 #include "Cursor.h"
-#include "Font.h"
 #include "GraphicsContext.h"
 #include "HostWindow.h"
 #include "IntRect.h"
diff --git a/Source/WebKit/CMakeLists.txt b/Source/WebKit/CMakeLists.txt
index edc22fee9df7..82dc1e662a57 100644
--- a/Source/WebKit/CMakeLists.txt
+++ b/Source/WebKit/CMakeLists.txt
@@ -60,7 +60,7 @@ if (${PORT} STREQUAL "Qt")
             DESTINATION "${LIB_INSTALL_DIR}"
             RUNTIME DESTINATION "${BIN_INSTALL_DIR}"
     )
-    if (MSVC)
+    if (MSVC AND NOT QT_STATIC_BUILD)
         install(FILES $<TARGET_PDB_FILE:WebKit> DESTINATION "${BIN_INSTALL_DIR}" OPTIONAL)
     endif ()
 
diff --git a/Source/WebKit/PlatformQt.cmake b/Source/WebKit/PlatformQt.cmake
index da199aeafbf0..f0e4acf8a5a6 100644
--- a/Source/WebKit/PlatformQt.cmake
+++ b/Source/WebKit/PlatformQt.cmake
@@ -16,10 +16,22 @@ macro(generate_version_header _file _var _prefix)
     set_source_files_properties(${_file} PROPERTIES GENERATED TRUE)
 endmacro()
 
+macro(append_lib_names_to_list _lib_names_list)
+    foreach (_lib_filename ${ARGN})
+        get_filename_component(_lib_name_we ${_lib_filename} NAME_WE)
+        if (NOT MSVC)
+            string(REGEX REPLACE "^lib" "" _lib_name_we ${_lib_name_we})
+        endif ()
+        list(APPEND ${_lib_names_list} ${_lib_name_we})
+    endforeach ()
+endmacro()
+
 if (${JavaScriptCore_LIBRARY_TYPE} MATCHES STATIC)
     add_definitions(-DSTATICALLY_LINKED_WITH_WTF -DSTATICALLY_LINKED_WITH_JavaScriptCore)
 endif ()
 
+QTWEBKIT_SKIP_AUTOMOC(WebKit)
+
 list(APPEND WebKit_INCLUDE_DIRECTORIES
     "${WEBCORE_DIR}"
     "${DERIVED_SOURCES_DIR}"
@@ -406,7 +418,7 @@ install(
     COMPONENT Data
 )
 
-file(GLOB WebKit_PRIVATE_HEADERS qt/Api/*_p.h)
+file(GLOB WebKit_PRIVATE_HEADERS qt/Api/*_p.h ../WebKit2/UIProcess/API/qt/*_p.h)
 install(
     FILES
         ${WebKit_PRIVATE_HEADERS}
@@ -432,6 +444,13 @@ endif ()
 if (ENABLE_DEVICE_ORIENTATION)
     set(WEBKIT_PRI_RUNTIME_DEPS "sensors ${WEBKIT_PRI_RUNTIME_DEPS}")
 endif ()
+if (USE_MEDIA_FOUNDATION)
+    set(WEBKIT_PRI_EXTRA_LIBS "-lmfuuid -lstrmiids ${WEBKIT_PRI_EXTRA_LIBS}")
+endif ()
+if (USE_QT_MULTIMEDIA)
+    set(WEBKIT_PKGCONGIG_DEPS "${WEBKIT_PKGCONGIG_DEPS} Qt5Multimedia")
+    set(WEBKIT_PRI_RUNTIME_DEPS "multimedia ${WEBKIT_PRI_RUNTIME_DEPS}")
+endif ()
 
 set(WEBKITWIDGETS_PKGCONGIG_DEPS "${WEBKIT_PKGCONGIG_DEPS} Qt5Widgets Qt5WebKit")
 set(WEBKITWIDGETS_PRI_DEPS "${WEBKIT_PRI_DEPS} widgets webkit")
@@ -445,24 +464,27 @@ if (ENABLE_PRINT_SUPPORT)
     set(WEBKITWIDGETS_PRI_RUNTIME_DEPS "${WEBKITWIDGETS_PRI_RUNTIME_DEPS} printsupport")
 endif ()
 
+if (USE_QT_MULTIMEDIA)
+    set(WEBKITWIDGETS_PKGCONGIG_DEPS "${WEBKITWIDGETS_PKGCONGIG_DEPS} Qt5MultimediaWidgets")
+    set(WEBKITWIDGETS_PRI_RUNTIME_DEPS "${WEBKITWIDGETS_PRI_RUNTIME_DEPS} multimediawidgets")
+endif ()
+
 if (QT_STATIC_BUILD)
-    if (MSVC)
-        set(LIB_PREFIX "lib")
-    endif ()
     set(WEBKITWIDGETS_PKGCONGIG_DEPS "${WEBKITWIDGETS_PKGCONGIG_DEPS} Qt5PrintSupport")
     set(WEBKITWIDGETS_PRI_DEPS "${WEBKITWIDGETS_PRI_DEPS} printsupport")
-    set(EXTRA_LIBS_NAMES WebCore JavaScriptCore WTF xml2)
+    set(EXTRA_LIBS_NAMES WebCore JavaScriptCore WTF)
+    append_lib_names_to_list(EXTRA_LIBS_NAMES ${LIBXML2_LIBRARIES} ${SQLITE_LIBRARIES} ${ZLIB_LIBRARIES})
     if (NOT USE_SYSTEM_MALLOC)
         list(APPEND EXTRA_LIBS_NAMES bmalloc)
     endif ()
     if (ENABLE_XSLT)
-        list(APPEND EXTRA_LIBS_NAMES xslt)
+        append_lib_names_to_list(EXTRA_LIBS_NAMES ${LIBXSLT_LIBRARIES})
     endif ()
     if (USE_LIBHYPHEN)
-        list(APPEND EXTRA_LIBS_NAMES hyphen)
+        append_lib_names_to_list(EXTRA_LIBS_NAMES ${HYPHEN_LIBRARIES})
     endif ()
     if (USE_WEBP)
-        list(APPEND EXTRA_LIBS_NAMES webp)
+        append_lib_names_to_list(EXTRA_LIBS_NAMES ${WEBP_LIBRARIES})
     endif ()
     if (USE_WOFF2)
         list(APPEND EXTRA_LIBS_NAMES woff2 brotli)
@@ -470,6 +492,7 @@ if (QT_STATIC_BUILD)
     if (APPLE)
         list(APPEND EXTRA_LIBS_NAMES icucore)
     endif ()
+    list(REMOVE_DUPLICATES EXTRA_LIBS_NAMES)
     foreach (LIB_NAME ${EXTRA_LIBS_NAMES})
         set(WEBKIT_PKGCONGIG_DEPS "${WEBKIT_PKGCONGIG_DEPS} ${LIB_PREFIX}${LIB_NAME}")
         set(WEBKIT_PRI_EXTRA_LIBS "${WEBKIT_PRI_EXTRA_LIBS} -l${LIB_PREFIX}${LIB_NAME}")
@@ -496,11 +519,19 @@ if (KDE_INSTALL_USE_QT_SYS_PATHS)
             INCLUDE_INSTALL_DIR "$$QT_MODULE_LIB_BASE/QtWebKit.framework/Headers"
             MODULE_CONFIG "lib_bundle"
         )
+        list(APPEND WebKit_Private_PRI_ARGUMENTS
+            INCLUDE_INSTALL_DIR "$$QT_MODULE_LIB_BASE/QtWebKit.framework/Headers/${PROJECT_VERSION}"
+            INCLUDE_INSTALL_DIR2 "$$QT_MODULE_LIB_BASE/QtWebKit.framework/Headers/${PROJECT_VERSION}/QtWebKit"
+        )
     else ()
         list(APPEND WebKit_PRI_ARGUMENTS
             INCLUDE_INSTALL_DIR "$$QT_MODULE_INCLUDE_BASE"
             INCLUDE_INSTALL_DIR2 "$$QT_MODULE_INCLUDE_BASE/QtWebKit"
         )
+        list(APPEND WebKit_Private_PRI_ARGUMENTS
+            INCLUDE_INSTALL_DIR "$$QT_MODULE_INCLUDE_BASE/QtWebKit/${PROJECT_VERSION}"
+            INCLUDE_INSTALL_DIR2 "$$QT_MODULE_INCLUDE_BASE/QtWebKit/${PROJECT_VERSION}/QtWebKit"
+        )
     endif ()
 else ()
     set(WebKit_PRI_ARGUMENTS
@@ -511,14 +542,24 @@ else ()
             INCLUDE_INSTALL_DIR "${LIB_INSTALL_DIR}/QtWebKit.framework/Headers"
             MODULE_CONFIG "lib_bundle"
         )
+        list(APPEND WebKit_Private_PRI_ARGUMENTS
+            INCLUDE_INSTALL_DIR "${LIB_INSTALL_DIR}/QtWebKit.framework/Headers/${PROJECT_VERSION}"
+            INCLUDE_INSTALL_DIR2 "${LIB_INSTALL_DIR}/QtWebKit.framework/Headers/${PROJECT_VERSION}/QtWebKit"
+        )
     else ()
         list(APPEND WebKit_PRI_ARGUMENTS
             INCLUDE_INSTALL_DIR ${KDE_INSTALL_INCLUDEDIR}
             INCLUDE_INSTALL_DIR2 "${KDE_INSTALL_INCLUDEDIR}/QtWebKit"
         )
+        list(APPEND WebKit_Private_PRI_ARGUMENTS
+            INCLUDE_INSTALL_DIR "${KDE_INSTALL_INCLUDEDIR}/QtWebKit/${PROJECT_VERSION}"
+            INCLUDE_INSTALL_DIR2 "${KDE_INSTALL_INCLUDEDIR}/QtWebKit/${PROJECT_VERSION}/QtWebKit"
+        )
     endif ()
 endif ()
 
+list(APPEND WebKit_Private_PRI_ARGUMENTS MODULE_CONFIG "internal_module no_link")
+
 if (MACOS_BUILD_FRAMEWORKS)
     set(WebKit_OUTPUT_NAME QtWebKit)
 else ()
@@ -538,7 +579,23 @@ ecm_generate_pri_file(
     FILENAME_VAR WebKit_PRI_FILENAME
     ${WebKit_PRI_ARGUMENTS}
 )
-install(FILES ${WebKit_PRI_FILENAME} DESTINATION ${ECM_MKSPECS_INSTALL_DIR} COMPONENT Data)
+ecm_generate_pri_file(
+    BASE_NAME webkit_private
+    NAME "QtWebKit"
+    LIB_NAME " "
+    DEPS "webkit"
+    RUNTIME_DEPS " "
+    DEFINES " "
+    QT_MODULES webkit
+    EXTRA_LIBS " "
+    FILENAME_VAR WebKit_Private_PRI_FILENAME
+    ${WebKit_Private_PRI_ARGUMENTS}
+)
+install(
+    FILES ${WebKit_PRI_FILENAME} ${WebKit_Private_PRI_FILENAME}
+    DESTINATION ${ECM_MKSPECS_INSTALL_DIR}
+    COMPONENT Data
+)
 
 if (QT_STATIC_BUILD)
     set(WebKit_LIBRARY_TYPE STATIC)
@@ -685,11 +742,19 @@ if (KDE_INSTALL_USE_QT_SYS_PATHS)
             INCLUDE_INSTALL_DIR "$$QT_MODULE_LIB_BASE/QtWebKitWidgets.framework/Headers"
             MODULE_CONFIG "lib_bundle"
         )
+        list(APPEND WebKitWidgets_Private_PRI_ARGUMENTS
+            INCLUDE_INSTALL_DIR "$$QT_MODULE_LIB_BASE/QtWebKitWidgets.framework/Headers/${PROJECT_VERSION}"
+            INCLUDE_INSTALL_DIR2 "$$QT_MODULE_LIB_BASE/QtWebKitWidgets.framework/Headers/${PROJECT_VERSION}/QtWebKitWidgets"
+        )
     else ()
         list(APPEND WebKitWidgets_PRI_ARGUMENTS
             INCLUDE_INSTALL_DIR "$$QT_MODULE_INCLUDE_BASE"
             INCLUDE_INSTALL_DIR2 "$$QT_MODULE_INCLUDE_BASE/QtWebKitWidgets"
         )
+        list(APPEND WebKitWidgets_Private_PRI_ARGUMENTS
+            INCLUDE_INSTALL_DIR "$$QT_MODULE_INCLUDE_BASE/QtWebKitWidgets/${PROJECT_VERSION}"
+            INCLUDE_INSTALL_DIR2 "$$QT_MODULE_INCLUDE_BASE/QtWebKitWidgets/${PROJECT_VERSION}/QtWebKitWidgets"
+        )
     endif ()
 else ()
     set(WebKitWidgets_PRI_ARGUMENTS
@@ -700,14 +765,24 @@ else ()
             INCLUDE_INSTALL_DIR "${LIB_INSTALL_DIR}/QtWebKitWidgets.framework/Headers"
             MODULE_CONFIG "lib_bundle"
         )
+        list(APPEND WebKitWidgets_Private_PRI_ARGUMENTS
+            INCLUDE_INSTALL_DIR "${LIB_INSTALL_DIR}/QtWebKitWidgets.framework/Headers/${PROJECT_VERSION}"
+            INCLUDE_INSTALL_DIR2 "${LIB_INSTALL_DIR}/QtWebKitWidgets.framework/Headers/${PROJECT_VERSION}/QtWebKitWidgets"
+        )
     else ()
         list(APPEND WebKitWidgets_PRI_ARGUMENTS
             INCLUDE_INSTALL_DIR ${KDE_INSTALL_INCLUDEDIR}
             INCLUDE_INSTALL_DIR2 "${KDE_INSTALL_INCLUDEDIR}/QtWebKitWidgets"
         )
+        list(APPEND WebKitWidgets_Private_PRI_ARGUMENTS
+            INCLUDE_INSTALL_DIR "${KDE_INSTALL_INCLUDEDIR}/QtWebKitWidgets/${PROJECT_VERSION}"
+            INCLUDE_INSTALL_DIR2 "${KDE_INSTALL_INCLUDEDIR}/QtWebKitWidgets/${PROJECT_VERSION}/QtWebKitWidgets"
+        )
     endif ()
 endif ()
 
+list(APPEND WebKitWidgets_Private_PRI_ARGUMENTS MODULE_CONFIG "internal_module no_link")
+
 if (MACOS_BUILD_FRAMEWORKS)
     set(WebKitWidgets_OUTPUT_NAME QtWebKitWidgets)
 else ()
@@ -726,7 +801,23 @@ ecm_generate_pri_file(
     FILENAME_VAR WebKitWidgets_PRI_FILENAME
     ${WebKitWidgets_PRI_ARGUMENTS}
 )
-install(FILES ${WebKitWidgets_PRI_FILENAME} DESTINATION ${ECM_MKSPECS_INSTALL_DIR} COMPONENT Data)
+ecm_generate_pri_file(
+    BASE_NAME webkitwidgets_private
+    NAME "QtWebKitWidgets"
+    LIB_NAME " "
+    DEPS "webkitwidgets"
+    RUNTIME_DEPS " "
+    DEFINES " "
+    QT_MODULES webkitwidgets
+    EXTRA_LIBS " "
+    FILENAME_VAR WebKitWidgets_Private_PRI_FILENAME
+    ${WebKitWidgets_Private_PRI_ARGUMENTS}
+)
+install(
+    FILES ${WebKitWidgets_PRI_FILENAME}  ${WebKitWidgets_Private_PRI_FILENAME}
+    DESTINATION ${ECM_MKSPECS_INSTALL_DIR}
+    COMPONENT Data
+)
 
 if (MSVC)
     if (CMAKE_SIZEOF_VOID_P EQUAL 8)
@@ -758,7 +849,7 @@ install(TARGETS WebKitWidgets EXPORT Qt5WebKitWidgetsTargets
         DESTINATION "${LIB_INSTALL_DIR}"
         RUNTIME DESTINATION "${BIN_INSTALL_DIR}"
 )
-if (MSVC)
+if (MSVC AND NOT QT_STATIC_BUILD)
     install(FILES $<TARGET_PDB_FILE:WebKitWidgets> DESTINATION "${BIN_INSTALL_DIR}" OPTIONAL)
 endif ()
 
@@ -786,6 +877,7 @@ if (COMPILER_IS_GCC_OR_CLANG)
     set_source_files_properties(
         qt/Api/qwebdatabase.cpp
         qt/Api/qwebelement.cpp
+        qt/Api/qwebfullscreenrequest.cpp
         qt/Api/qwebhistory.cpp
         qt/Api/qwebhistoryinterface.cpp
         qt/Api/qwebpluginfactory.cpp
@@ -795,7 +887,6 @@ if (COMPILER_IS_GCC_OR_CLANG)
 
         qt/WidgetApi/qgraphicswebview.cpp
         qt/WidgetApi/qwebframe.cpp
-        qt/WidgetApi/qwebfullscreenrequest.cpp
         qt/WidgetApi/qwebinspector.cpp
         qt/WidgetApi/qwebpage.cpp
         qt/WidgetApi/qwebview.cpp
diff --git a/Source/WebKit/qt/Api/qwebsettings.cpp b/Source/WebKit/qt/Api/qwebsettings.cpp
index e6b32f52a7da..d552cec172fd 100644
--- a/Source/WebKit/qt/Api/qwebsettings.cpp
+++ b/Source/WebKit/qt/Api/qwebsettings.cpp
@@ -173,10 +173,6 @@ void QWebSettingsPrivate::apply()
                                  global->attributes.value(QWebSettings::WebGLEnabled));
 
         settings->setWebGLEnabled(value);
-#if ENABLE(CSS_SHADERS)
-        // For now, enable CSS shaders when WebGL is enabled.
-        settings->setCSSCustomFilterEnabled(value);
-#endif
 #endif
 #if ENABLE(WEB_AUDIO)
         value = attributes.value(QWebSettings::WebAudioEnabled, global->attributes.value(QWebSettings::WebAudioEnabled));
diff --git a/Source/WebKit/qt/WebCoreSupport/FrameLoaderClientQt.cpp b/Source/WebKit/qt/WebCoreSupport/FrameLoaderClientQt.cpp
index 50f91e2033a9..b3209a572a85 100644
--- a/Source/WebKit/qt/WebCoreSupport/FrameLoaderClientQt.cpp
+++ b/Source/WebKit/qt/WebCoreSupport/FrameLoaderClientQt.cpp
@@ -929,10 +929,12 @@ void FrameLoaderClientQt::convertMainResourceLoadToDownload(DocumentLoader* docu
 
     QNetworkReply* reply = handler->release();
     if (reply) {
-        if (m_webFrame->pageAdapter->forwardUnsupportedContent)
+        if (m_webFrame->pageAdapter->forwardUnsupportedContent) {
             emit unsupportedContent(reply);
-        else
+        } else {
             reply->abort();
+            reply->deleteLater();
+        }
     }
 }
 
@@ -1233,7 +1235,9 @@ void FrameLoaderClientQt::startDownload(const WebCore::ResourceRequest& request,
     if (!m_webFrame)
         return;
 
-    m_webFrame->pageAdapter->emitDownloadRequested(request.toNetworkRequest(m_frame->loader().networkingContext()));
+    QNetworkRequest r = request.toNetworkRequest(m_frame->loader().networkingContext());
+    if (r.url().isValid())
+        m_webFrame->pageAdapter->emitDownloadRequested(r);
 }
 
 RefPtr<Frame> FrameLoaderClientQt::createFrame(const URL& url, const String& name, HTMLFrameOwnerElement* ownerElement, const String& referrer, bool allowsScrolling, int marginWidth, int marginHeight)
@@ -1515,12 +1519,6 @@ String FrameLoaderClientQt::overrideMediaType() const
     return String();
 }
 
-QString FrameLoaderClientQt::chooseFile(const QString& oldFile)
-{
-    QStringList result = m_webFrame->pageAdapter->chooseFiles(m_webFrame, /*allowMulti*/ false, (QStringList() << oldFile));
-    return result.isEmpty() ? QString() : result.first();
-}
-
 PassRefPtr<FrameNetworkingContext> FrameLoaderClientQt::createNetworkingContext()
 {
     QVariant value = m_webFrame->pageAdapter->handle()->property("_q_MIMESniffingDisabled");
diff --git a/Source/WebKit/qt/WebCoreSupport/FrameLoaderClientQt.h b/Source/WebKit/qt/WebCoreSupport/FrameLoaderClientQt.h
index a00bf6702e89..a20364f76522 100644
--- a/Source/WebKit/qt/WebCoreSupport/FrameLoaderClientQt.h
+++ b/Source/WebKit/qt/WebCoreSupport/FrameLoaderClientQt.h
@@ -214,8 +214,6 @@ class FrameLoaderClientQt : public QObject, public FrameLoaderClient {
     void updateCachedDocumentLoader(DocumentLoader &) override;
     void prefetchDNS(const WTF::String &) override;
 
-    QString chooseFile(const QString& oldFile);
-
     PassRefPtr<FrameNetworkingContext> createNetworkingContext() override;
 
     const URL& lastRequestedUrl() const { return m_lastRequestedUrl; }
diff --git a/Source/WebKit/qt/WebCoreSupport/InspectorServerQt.cpp b/Source/WebKit/qt/WebCoreSupport/InspectorServerQt.cpp
index 79dfb906f1d3..72563a1f92dc 100644
--- a/Source/WebKit/qt/WebCoreSupport/InspectorServerQt.cpp
+++ b/Source/WebKit/qt/WebCoreSupport/InspectorServerQt.cpp
@@ -357,7 +357,7 @@ void InspectorServerRequestHandlerQt::webSocketReadyRead()
         
         if (m_inspectorClient) {
             InspectorController& inspectorController = m_inspectorClient->m_inspectedWebPage->page->inspectorController();
-            inspectorController.dispatchMessageFromFrontend(QString::fromUtf8(payload));
+            inspectorController.dispatchMessageFromFrontend(String::fromUTF8(payload.data(), payload.size()));
         }
     }
 }
diff --git a/Source/WebKit/qt/WebCoreSupport/QWebFrameAdapter.cpp b/Source/WebKit/qt/WebCoreSupport/QWebFrameAdapter.cpp
index e6145b6ffb82..df28e9f21f2c 100644
--- a/Source/WebKit/qt/WebCoreSupport/QWebFrameAdapter.cpp
+++ b/Source/WebKit/qt/WebCoreSupport/QWebFrameAdapter.cpp
@@ -961,6 +961,8 @@ void QWebFrameAdapter::setViewportSize(const QSize& size)
     FrameView* view = frame->view();
     ASSERT(view);
     view->resize(size);
+    if (view->needsLayout())
+        view->layout();
     view->adjustViewSize();
 }
 
diff --git a/Source/WebKit/qt/WebCoreSupport/QWebPageAdapter.cpp b/Source/WebKit/qt/WebCoreSupport/QWebPageAdapter.cpp
index ab9fb13821e1..89e872fb2082 100644
--- a/Source/WebKit/qt/WebCoreSupport/QWebPageAdapter.cpp
+++ b/Source/WebKit/qt/WebCoreSupport/QWebPageAdapter.cpp
@@ -434,6 +434,9 @@ bool QWebPageAdapter::findText(const QString& subString, FindFlag options)
     if (options & FindBeginsInSelection)
         webCoreFindOptions |= WebCore::StartInSelection;
 
+    if (options & FindAtWordEndingsOnly)
+        webCoreFindOptions |= WebCore::AtWordEnds;
+
     if (options & HighlightAllOccurrences) {
         if (subString.isEmpty()) {
             page->unmarkAllTextMatches();
diff --git a/Source/WebKit/qt/WebCoreSupport/QWebPageAdapter.h b/Source/WebKit/qt/WebCoreSupport/QWebPageAdapter.h
index 969ce8700ce3..1b7199a9c3e8 100644
--- a/Source/WebKit/qt/WebCoreSupport/QWebPageAdapter.h
+++ b/Source/WebKit/qt/WebCoreSupport/QWebPageAdapter.h
@@ -122,7 +122,8 @@ class QWEBKIT_EXPORT QWebPageAdapter {
         HighlightAllOccurrences = 8,
         FindAtWordBeginningsOnly = 16,
         TreatMedialCapitalAsWordBeginning = 32,
-        FindBeginsInSelection = 64
+        FindBeginsInSelection = 64,
+        FindAtWordEndingsOnly = 128
     };
 
     // valid values matching those from ScrollTypes.h
diff --git a/Source/WebKit/qt/WidgetApi/qwebpage.cpp b/Source/WebKit/qt/WidgetApi/qwebpage.cpp
index be8bd3edbe40..f8d8c0abc239 100644
--- a/Source/WebKit/qt/WidgetApi/qwebpage.cpp
+++ b/Source/WebKit/qt/WidgetApi/qwebpage.cpp
@@ -3161,6 +3161,50 @@ bool QWebPage::extension(Extension extension, const ExtensionOption *option, Ext
     }
 #endif
 
+    if (extension == ErrorPageExtension) {
+        auto* errorOption = static_cast<const ErrorPageExtensionOption*>(option);
+
+        QString errorCode;
+        switch (errorOption->domain) {
+        case QWebPage::Http:
+            errorCode = tr("HTTP Error %0").arg(errorOption->error);
+            break;
+        case QWebPage::QtNetwork:
+            errorCode = tr("QtNetwork Error %0").arg(errorOption->error);
+            break;
+        case QWebPage::WebKit:
+            errorCode = tr("WebKit Error %0").arg(errorOption->error);
+            break;
+        }
+
+        QString pageHeader = errorOption->errorString;
+        if (pageHeader.isEmpty())
+            pageHeader = errorCode;
+        else if (pageHeader.endsWith(QLatin1Char('.')))
+            pageHeader.chop(1);
+
+        auto* pageOutput = static_cast<ErrorPageExtensionReturn*>(output);
+        pageOutput->baseUrl = errorOption->url;
+        QString escapedUrl = errorOption->url.toDisplayString().toHtmlEscaped();
+        pageOutput->content = QStringLiteral("<html><head>"
+            "<meta charset=\"utf-8\">"
+            "<title>%0</title>"
+            "<style>"
+            "html{font-family:sans;background:#EEE;color:#000;}"
+            "body{max-width:600px;margin:150px auto 0;padding:10px;}"
+            "pre{text-align:right;color:#999;}"
+            "</style>"
+            "</head><body>"
+            "<h1>%0</h1><hr>"
+            "<p>%1</p><pre>%2</pre>"
+            "</body></html>").arg(
+                pageHeader.toHtmlEscaped(),
+                tr("Failed to load URL %0.").toHtmlEscaped().arg(QLatin1String("<a href=\"") + escapedUrl + QLatin1String("\">") + escapedUrl + QLatin1String("</a>")),
+                errorCode.toHtmlEscaped()).toUtf8();
+
+        return true;
+    }
+
     return false;
 }
 
@@ -3172,11 +3216,10 @@ bool QWebPage::extension(Extension extension, const ExtensionOption *option, Ext
 bool QWebPage::supportsExtension(Extension extension) const
 {
 #ifndef QT_NO_FILEDIALOG
-    return extension == ChooseMultipleFilesExtension;
-#else
-    Q_UNUSED(extension);
-    return false;
+    if (extension == ChooseMultipleFilesExtension)
+        return true;
 #endif
+    return extension == ErrorPageExtension;
 }
 
 /*!
diff --git a/Source/WebKit/qt/WidgetApi/qwebpage.h b/Source/WebKit/qt/WidgetApi/qwebpage.h
index bff0852d725c..c3e4691022b3 100644
--- a/Source/WebKit/qt/WidgetApi/qwebpage.h
+++ b/Source/WebKit/qt/WidgetApi/qwebpage.h
@@ -207,7 +207,9 @@ class QWEBKITWIDGETS_EXPORT QWebPage : public QObject {
         HighlightAllOccurrences = 8,
         FindAtWordBeginningsOnly = 16,
         TreatMedialCapitalAsWordBeginning = 32,
-        FindBeginsInSelection = 64
+        FindBeginsInSelection = 64,
+        FindAtWordEndingsOnly = 128,
+        FindExactMatchOnly = (FindAtWordBeginningsOnly | FindAtWordEndingsOnly)
     };
     Q_DECLARE_FLAGS(FindFlags, FindFlag)
 
diff --git a/Source/WebKit/qt/WidgetSupport/InitWebKitQt.cpp b/Source/WebKit/qt/WidgetSupport/InitWebKitQt.cpp
index d4afa40e7cce..8263aa17fd4c 100644
--- a/Source/WebKit/qt/WidgetSupport/InitWebKitQt.cpp
+++ b/Source/WebKit/qt/WidgetSupport/InitWebKitQt.cpp
@@ -36,8 +36,10 @@ QWEBKITWIDGETS_EXPORT void initializeWebKitWidgets()
     if (initialized)
         return;
 
-    setWebKitWidgetsInitCallback(QStyleFacadeImp::create);
-    initializeWebKitQt();
+    if (qgetenv("QT_WEBKIT_THEME_NAME") != "mobile") {
+        setWebKitWidgetsInitCallback(QStyleFacadeImp::create);
+        initializeWebKitQt();
+    }
 
     // QWebSettings::SearchCancelButtonGraphic
     setImagePlatformResource("searchCancelButton", QApplication::style()->standardPixmap(QStyle::SP_DialogCloseButton));
diff --git a/Source/WebKit2/NetworkProcess/qt/NetworkProcessQt.cpp b/Source/WebKit2/NetworkProcess/qt/NetworkProcessQt.cpp
index f822b3d20947..2fc32f30284c 100644
--- a/Source/WebKit2/NetworkProcess/qt/NetworkProcessQt.cpp
+++ b/Source/WebKit2/NetworkProcess/qt/NetworkProcessQt.cpp
@@ -27,7 +27,6 @@
 #include "NetworkProcess.h"
 
 #include "NetworkProcessCreationParameters.h"
-#include "QtNetworkAccessManager.h"
 
 #include <QNetworkDiskCache>
 #include <WebCore/CertificateInfo.h>
diff --git a/Source/WebKit2/NetworkProcess/qt/RemoteNetworkingContextQt.cpp b/Source/WebKit2/NetworkProcess/qt/RemoteNetworkingContextQt.cpp
index 96da15886f40..bffc350742df 100644
--- a/Source/WebKit2/NetworkProcess/qt/RemoteNetworkingContextQt.cpp
+++ b/Source/WebKit2/NetworkProcess/qt/RemoteNetworkingContextQt.cpp
@@ -32,7 +32,6 @@
 #include <WebCore/NetworkStorageSession.h>
 #include <WebCore/NotImplemented.h>
 #include <WebCore/ResourceHandle.h>
-#include <wtf/NeverDestroyed.h>
 
 using namespace WebCore;
 
diff --git a/Source/WebKit2/Platform/IPC/win/ConnectionWin.cpp b/Source/WebKit2/Platform/IPC/win/ConnectionWin.cpp
index 7ea5ba0f5980..c5a8ccfa9d97 100644
--- a/Source/WebKit2/Platform/IPC/win/ConnectionWin.cpp
+++ b/Source/WebKit2/Platform/IPC/win/ConnectionWin.cpp
@@ -29,6 +29,7 @@
 #include "DataReference.h"
 #include <wtf/RandomNumber.h>
 #include <wtf/text/WTFString.h>
+#include <wtf/text/win/WCharStringExtras.h>
 #include <wtf/threads/BinarySemaphore.h>
 
 using namespace std;
@@ -46,7 +47,7 @@ bool Connection::createServerAndClientIdentifiers(HANDLE& serverIdentifier, HAND
         unsigned uniqueID = randomNumber() * std::numeric_limits<unsigned>::max();
         pipeName = String::format("\\\\.\\pipe\\com.apple.WebKit.%x", uniqueID);
 
-        serverIdentifier = ::CreateNamedPipe(pipeName.charactersWithNullTermination().data(),
+        serverIdentifier = ::CreateNamedPipe(stringToNullTerminatedWChar(pipeName).data(),
             PIPE_ACCESS_DUPLEX | FILE_FLAG_FIRST_PIPE_INSTANCE | FILE_FLAG_OVERLAPPED,
             PIPE_TYPE_MESSAGE | PIPE_READMODE_MESSAGE, 1, inlineMessageMaxSize, inlineMessageMaxSize,
             0, 0);
@@ -61,7 +62,7 @@ bool Connection::createServerAndClientIdentifiers(HANDLE& serverIdentifier, HAND
     if (!serverIdentifier)
         return false;
 
-    clientIdentifier = ::CreateFileW(pipeName.charactersWithNullTermination().data(), GENERIC_READ | GENERIC_WRITE, 0, 0, OPEN_EXISTING, FILE_FLAG_OVERLAPPED, 0);
+    clientIdentifier = ::CreateFileW(stringToNullTerminatedWChar(pipeName).data(), GENERIC_READ | GENERIC_WRITE, 0, 0, OPEN_EXISTING, FILE_FLAG_OVERLAPPED, 0);
     if (!clientIdentifier) {
         ::CloseHandle(serverIdentifier);
         return false;
diff --git a/Source/WebKit2/PlatformQt.cmake b/Source/WebKit2/PlatformQt.cmake
index 5243ef2d8120..6bd0627f055f 100644
--- a/Source/WebKit2/PlatformQt.cmake
+++ b/Source/WebKit2/PlatformQt.cmake
@@ -17,6 +17,8 @@ if (${JavaScriptCore_LIBRARY_TYPE} MATCHES STATIC)
     add_definitions(-DSTATICALLY_LINKED_WITH_WTF -DSTATICALLY_LINKED_WITH_JavaScriptCore)
 endif ()
 
+QTWEBKIT_SKIP_AUTOMOC(WebKit2)
+
 #set(WebKit2_USE_PREFIX_HEADER ON)
 
 list(APPEND WebKit2_INCLUDE_DIRECTORIES
@@ -280,25 +282,27 @@ list(APPEND WebProcess_SOURCES
     qt/MainQt.cpp
 )
 
+if (NOT SHARED_CORE)
+    set(WebProcess_LIBRARIES
+        WebKit
+    )
+    set(NetworkProcess_LIBRARIES
+        WebKit
+    )
+    set(DatabaseProcess_LIBRARIES
+        WebKit
+    )
+    set(PluginProcess_LIBRARIES
+        WebKit
+    )
+endif ()
+
 # FIXME: Allow building without widgets
-set(WebProcess_LIBRARIES
-    WebKit
+list(APPEND WebProcess_LIBRARIES
     Qt5::Widgets
     WebKitWidgets
 )
 
-set(NetworkProcess_LIBRARIES
-    WebKit
-)
-
-set(DatabaseProcess_LIBRARIES
-    WebKit
-)
-
-set(PluginProcess_LIBRARIES
-    WebKit
-)
-
 list(APPEND NetworkProcess_SOURCES
     NetworkProcess/EntryPoint/qt/NetworkProcessMain.cpp
 )
diff --git a/Source/WebKit2/PluginProcess/qt/PluginControllerProxyQt.cpp b/Source/WebKit2/PluginProcess/qt/PluginControllerProxyQt.cpp
index 743adfaa4d04..75a7544e5cfd 100644
--- a/Source/WebKit2/PluginProcess/qt/PluginControllerProxyQt.cpp
+++ b/Source/WebKit2/PluginProcess/qt/PluginControllerProxyQt.cpp
@@ -28,7 +28,6 @@
 
 #if ENABLE(PLUGIN_PROCESS)
 
-#include "PluginProcess.h"
 #include <WebCore/NotImplemented.h>
 
 using namespace WebCore;
diff --git a/Source/WebKit2/PluginProcess/qt/PluginProcessQt.cpp b/Source/WebKit2/PluginProcess/qt/PluginProcessQt.cpp
index b584f73c0668..93e16e090a49 100644
--- a/Source/WebKit2/PluginProcess/qt/PluginProcessQt.cpp
+++ b/Source/WebKit2/PluginProcess/qt/PluginProcessQt.cpp
@@ -28,7 +28,6 @@
 
 #if ENABLE(PLUGIN_PROCESS)
 
-#include "NetscapePlugin.h"
 #include "PluginProcessCreationParameters.h"
 #include <WebCore/NotImplemented.h>
 
diff --git a/Source/WebKit2/Shared/qt/ArgumentCodersQt.cpp b/Source/WebKit2/Shared/qt/ArgumentCodersQt.cpp
index 766568519121..511c4eacaf3a 100644
--- a/Source/WebKit2/Shared/qt/ArgumentCodersQt.cpp
+++ b/Source/WebKit2/Shared/qt/ArgumentCodersQt.cpp
@@ -20,7 +20,6 @@
 #include "config.h"
 #include "ArgumentCodersQt.h"
 
-#include "ArgumentCoders.h"
 #include "WebCoreArgumentCoders.h"
 #include <QMimeData>
 #include <QStringList>
diff --git a/Source/WebKit2/Shared/qt/WebEventFactoryQt.cpp b/Source/WebKit2/Shared/qt/WebEventFactoryQt.cpp
index 876208b9998e..50fcb5ccdc20 100644
--- a/Source/WebKit2/Shared/qt/WebEventFactoryQt.cpp
+++ b/Source/WebKit2/Shared/qt/WebEventFactoryQt.cpp
@@ -34,7 +34,6 @@
 #include <WebCore/FloatSize.h>
 #include <WebCore/IntPoint.h>
 #include <WebCore/PlatformKeyboardEvent.h>
-#include <wtf/ASCIICType.h>
 #include <wtf/CurrentTime.h>
 
 using namespace WebCore;
diff --git a/Source/WebKit2/UIProcess/API/cpp/qt/WKStringQt.cpp b/Source/WebKit2/UIProcess/API/cpp/qt/WKStringQt.cpp
index 6fad021f6c33..8532cae3e185 100644
--- a/Source/WebKit2/UIProcess/API/cpp/qt/WKStringQt.cpp
+++ b/Source/WebKit2/UIProcess/API/cpp/qt/WKStringQt.cpp
@@ -24,7 +24,6 @@
 #include "WKAPICast.h"
 #include "WKRetainPtr.h"
 #include <QString>
-#include <wtf/RefPtr.h>
 #include <wtf/text/WTFString.h>
 
 using namespace WebKit;
diff --git a/Source/WebKit2/UIProcess/API/cpp/qt/WKURLQt.cpp b/Source/WebKit2/UIProcess/API/cpp/qt/WKURLQt.cpp
index f9177fd595db..3f5396a4b578 100644
--- a/Source/WebKit2/UIProcess/API/cpp/qt/WKURLQt.cpp
+++ b/Source/WebKit2/UIProcess/API/cpp/qt/WKURLQt.cpp
@@ -21,10 +21,9 @@
 #include "config.h"
 #include "WKURLQt.h"
 
-#include "WKAPICast.h"
 #include "WKRetainPtr.h"
+#include "WKSharedAPICast.h"
 #include <QString>
-#include <wtf/RefPtr.h>
 #include <wtf/text/WTFString.h>
 
 using namespace WebKit;
diff --git a/Source/WebKit2/UIProcess/API/qt/qquicknetworkreply_p.h b/Source/WebKit2/UIProcess/API/qt/qquicknetworkreply_p.h
index 453e766b024a..0ea65b9d7694 100644
--- a/Source/WebKit2/UIProcess/API/qt/qquicknetworkreply_p.h
+++ b/Source/WebKit2/UIProcess/API/qt/qquicknetworkreply_p.h
@@ -23,7 +23,6 @@
 
 #include "QtNetworkReplyData.h"
 #include "QtNetworkRequestData.h"
-#include "SharedMemory.h"
 #include "qquickwebview_p.h"
 #include "qwebkitglobal.h"
 #include <QNetworkAccessManager>
diff --git a/Source/WebKit2/UIProcess/API/qt/qquickwebpage.cpp b/Source/WebKit2/UIProcess/API/qt/qquickwebpage.cpp
index f6717a405d01..f2c2cb5a78f7 100644
--- a/Source/WebKit2/UIProcess/API/qt/qquickwebpage.cpp
+++ b/Source/WebKit2/UIProcess/API/qt/qquickwebpage.cpp
@@ -22,9 +22,7 @@
 #include "qquickwebpage_p.h"
 
 #include "CoordinatedGraphicsScene.h"
-#include "QtWebPageEventHandler.h"
 #include "QtWebPageSGNode.h"
-#include "TransformationMatrix.h"
 #include "qquickwebpage_p_p.h"
 #include "qquickwebview_p.h"
 #include "qquickwebview_p_p.h"
diff --git a/Source/WebKit2/UIProcess/API/qt/qquickwebview.cpp b/Source/WebKit2/UIProcess/API/qt/qquickwebview.cpp
index cf8ac19d9a1f..3b84c6dbad16 100644
--- a/Source/WebKit2/UIProcess/API/qt/qquickwebview.cpp
+++ b/Source/WebKit2/UIProcess/API/qt/qquickwebview.cpp
@@ -38,7 +38,6 @@
 #include "QtWebPageEventHandler.h"
 #include "QtWebPagePolicyClient.h"
 #include "WebBackForwardList.h"
-#include "WebFindOptions.h"
 #if ENABLE(INSPECTOR_SERVER)
 #include "WebInspectorProxy.h"
 #include "WebInspectorServer.h"
@@ -75,7 +74,6 @@
 #include <WKOpenPanelResultListener.h>
 #include <WKPageConfigurationRef.h>
 #include <WKPageGroup.h>
-#include <WKPreferencesRef.h>
 #include <WKSerializedScriptValue.h>
 #include <WKString.h>
 #include <WKStringQt.h>
diff --git a/Source/WebKit2/UIProcess/API/qt/qquickwebview_p_p.h b/Source/WebKit2/UIProcess/API/qt/qquickwebview_p_p.h
index fe40823eafaa..cca489582c76 100644
--- a/Source/WebKit2/UIProcess/API/qt/qquickwebview_p_p.h
+++ b/Source/WebKit2/UIProcess/API/qt/qquickwebview_p_p.h
@@ -23,7 +23,6 @@
 
 #include "DefaultUndoController.h"
 #include "PageViewportController.h"
-#include "PageViewportControllerClient.h"
 #include "QtPageClient.h"
 #include "QtWebPageUIClient.h"
 
diff --git a/Source/WebKit2/UIProcess/API/qt/qwebchannelwebkittransport.cpp b/Source/WebKit2/UIProcess/API/qt/qwebchannelwebkittransport.cpp
index c6f96f094366..14c4db5a36de 100644
--- a/Source/WebKit2/UIProcess/API/qt/qwebchannelwebkittransport.cpp
+++ b/Source/WebKit2/UIProcess/API/qt/qwebchannelwebkittransport.cpp
@@ -40,10 +40,11 @@
 ****************************************************************************/
 
 #include "config.h"
-#include "qwebchannelwebkittransport_p.h"
 
 #if ENABLE(QT_WEBCHANNEL)
 
+#include "qwebchannelwebkittransport_p.h"
+
 #include "qquickwebview_p.h"
 
 #include <QJsonDocument>
diff --git a/Source/WebKit2/UIProcess/API/qt/qwebnavigationhistory.cpp b/Source/WebKit2/UIProcess/API/qt/qwebnavigationhistory.cpp
index fa8982c4f3d7..f12d2b105585 100644
--- a/Source/WebKit2/UIProcess/API/qt/qwebnavigationhistory.cpp
+++ b/Source/WebKit2/UIProcess/API/qt/qwebnavigationhistory.cpp
@@ -28,7 +28,6 @@
 
 #include "WKBackForwardListRef.h"
 #include "WKStringQt.h"
-#include "WKURL.h"
 #include "WKURLQt.h"
 
 #include "qwebnavigationhistory_p_p.h"
diff --git a/Source/WebKit2/UIProcess/API/qt/qwebnavigationhistory_p_p.h b/Source/WebKit2/UIProcess/API/qt/qwebnavigationhistory_p_p.h
index 527aa465837d..e3fd6ca927b1 100644
--- a/Source/WebKit2/UIProcess/API/qt/qwebnavigationhistory_p_p.h
+++ b/Source/WebKit2/UIProcess/API/qt/qwebnavigationhistory_p_p.h
@@ -31,7 +31,6 @@
 #include <QObject>
 #include <WebKit/WKBase.h>
 #include <WebKit/WKRetainPtr.h>
-#include <wtf/PassRefPtr.h>
 
 namespace WebKit {
 class WebBackForwardList;
diff --git a/Source/WebKit2/UIProcess/API/qt/qwebpreferences.cpp b/Source/WebKit2/UIProcess/API/qt/qwebpreferences.cpp
index cead3f7c25d9..c781a97ca9cb 100644
--- a/Source/WebKit2/UIProcess/API/qt/qwebpreferences.cpp
+++ b/Source/WebKit2/UIProcess/API/qt/qwebpreferences.cpp
@@ -23,8 +23,6 @@
 #include "WebPageGroup.h"
 #include "qquickwebview_p_p.h"
 #include "qwebpreferences_p_p.h"
-#include <WKPageConfigurationRef.h>
-#include <WKPageGroup.h>
 #include <WKPreferencesRef.h>
 #include <WKRetainPtr.h>
 #include <WKStringQt.h>
@@ -68,10 +66,6 @@ bool QWebPreferencesPrivate::testAttribute(QWebPreferencesPrivate::WebAttribute
 #if ENABLE(WEBGL)
     case WebGLEnabled:
         return WKPreferencesGetWebGLEnabled(preferencesRef);
-#if ENABLE(CSS_SHADERS)
-    case CSSCustomFilterEnabled:
-        return WKPreferencesGetCSSCustomFilterEnabled(preferencesRef);
-#endif
 #endif
 #if ENABLE(WEB_AUDIO)
     case WebAudioEnabled:
@@ -137,11 +131,6 @@ void QWebPreferencesPrivate::setAttribute(QWebPreferencesPrivate::WebAttribute a
     case WebGLEnabled:
         WKPreferencesSetWebGLEnabled(preferencesRef, enable);
         break;
-#if ENABLE(CSS_SHADERS)
-    case CSSCustomFilterEnabled:
-        WKPreferencesSetCSSCustomFilterEnabled(preferencesRef, enable);
-        break;
-#endif
 #endif
 #if ENABLE(WEB_AUDIO)
     case WebAudioEnabled:
diff --git a/Source/WebKit2/UIProcess/API/qt/qwebpreferences_p_p.h b/Source/WebKit2/UIProcess/API/qt/qwebpreferences_p_p.h
index f978a5bd2ac3..2b4c804ff179 100644
--- a/Source/WebKit2/UIProcess/API/qt/qwebpreferences_p_p.h
+++ b/Source/WebKit2/UIProcess/API/qt/qwebpreferences_p_p.h
@@ -38,7 +38,6 @@ class QWebPreferencesPrivate {
         DnsPrefetchEnabled,
         DeveloperExtrasEnabled,
         WebGLEnabled,
-        CSSCustomFilterEnabled,
         WebAudioEnabled,
         CaretBrowsingEnabled,
         NotificationsEnabled,
diff --git a/Source/WebKit2/UIProcess/API/qt/tests/CMakeLists.txt b/Source/WebKit2/UIProcess/API/qt/tests/CMakeLists.txt
index 899a9e038af0..210342ef5bdc 100644
--- a/Source/WebKit2/UIProcess/API/qt/tests/CMakeLists.txt
+++ b/Source/WebKit2/UIProcess/API/qt/tests/CMakeLists.txt
@@ -84,6 +84,12 @@ set(qmltests_LIBRARIES
     ${Qt5Test_LIBRARIES}
 )
 
+if (SHARED_CORE)
+    list(APPEND qmltests_LIBRARIES
+        WebKit2
+    )
+endif ()
+
 add_executable(tst_qmltests_WebView ${qmltests_SOURCES})
 target_compile_definitions(tst_qmltests_WebView PRIVATE ${tst_qmltests_WebView_DEFINITIONS})
 target_link_libraries(tst_qmltests_WebView ${qmltests_LIBRARIES})
diff --git a/Source/WebKit2/UIProcess/Launcher/qt/ProcessLauncherQt.cpp b/Source/WebKit2/UIProcess/Launcher/qt/ProcessLauncherQt.cpp
index 6b6bcf5c6646..53913fa560d8 100644
--- a/Source/WebKit2/UIProcess/Launcher/qt/ProcessLauncherQt.cpp
+++ b/Source/WebKit2/UIProcess/Launcher/qt/ProcessLauncherQt.cpp
@@ -36,16 +36,12 @@
 #include <QProcess>
 #include <QString>
 #include <QtCore/qglobal.h>
-#include <wtf/HashSet.h>
-#include <wtf/PassRefPtr.h>
 #include <wtf/RunLoop.h>
-#include <wtf/Threading.h>
 #include <wtf/text/WTFString.h>
 
 #if defined(Q_OS_UNIX)
 #include <errno.h>
 #include <fcntl.h>
-#include <runtime/InitializeThreading.h>
 #include <string>
 #include <sys/resource.h>
 #include <sys/socket.h>
diff --git a/Source/WebKit2/UIProcess/qt/PageViewportControllerClientQt.cpp b/Source/WebKit2/UIProcess/qt/PageViewportControllerClientQt.cpp
index adac7bb80b81..fe301c9ab37a 100644
--- a/Source/WebKit2/UIProcess/qt/PageViewportControllerClientQt.cpp
+++ b/Source/WebKit2/UIProcess/qt/PageViewportControllerClientQt.cpp
@@ -30,7 +30,6 @@
 #include <QPointF>
 #include <QTransform>
 #include <QtQuick/qquickitem.h>
-#include <WKAPICast.h>
 #include <WebCore/FloatRect.h>
 #include <WebCore/FloatSize.h>
 
diff --git a/Source/WebKit2/UIProcess/qt/QtPageClient.cpp b/Source/WebKit2/UIProcess/qt/QtPageClient.cpp
index 5f62dc600762..53faa7647bdb 100644
--- a/Source/WebKit2/UIProcess/qt/QtPageClient.cpp
+++ b/Source/WebKit2/UIProcess/qt/QtPageClient.cpp
@@ -288,12 +288,21 @@ bool QtPageClient::isFullScreen()
 
 void QtPageClient::enterFullScreen()
 {
-    notImplemented();
+    if (!m_webView)
+        return;
+
+    WebFullScreenManagerProxy* manager = m_eventHandler->webPageProxy()->fullScreenManager();
+    manager->willEnterFullScreen();
+    emit m_webView->experimental()->enterFullScreenRequested();
+    manager->didEnterFullScreen();
 }
 
 void QtPageClient::exitFullScreen()
 {
-    notImplemented();
+    WebFullScreenManagerProxy* manager = m_eventHandler->webPageProxy()->fullScreenManager();
+    manager->willExitFullScreen();
+    emit m_webView->experimental()->exitFullScreenRequested();
+    manager->didExitFullScreen();
 }
 
 void QtPageClient::beganEnterFullScreen(const IntRect& initialFrame, const IntRect& finalFrame)
diff --git a/Source/WebKit2/UIProcess/qt/QtWebContext.cpp b/Source/WebKit2/UIProcess/qt/QtWebContext.cpp
index 7030e13d950d..7f4d46de2755 100644
--- a/Source/WebKit2/UIProcess/qt/QtWebContext.cpp
+++ b/Source/WebKit2/UIProcess/qt/QtWebContext.cpp
@@ -28,7 +28,6 @@
 #include <QDir>
 #include <QStandardPaths>
 #include <QStringBuilder>
-#include <WKAPICast.h>
 #include <WKArray.h>
 #include <WKContextPrivate.h>
 #include <WKData.h>
diff --git a/Source/WebKit2/UIProcess/qt/QtWebContext.h b/Source/WebKit2/UIProcess/qt/QtWebContext.h
index 972e388a469c..93540c078538 100644
--- a/Source/WebKit2/UIProcess/qt/QtWebContext.h
+++ b/Source/WebKit2/UIProcess/qt/QtWebContext.h
@@ -23,7 +23,6 @@
 
 #include <QScopedPointer>
 #include <QtGlobal>
-#include <WKContext.h>
 #include <WKRetainPtr.h>
 
 namespace WebKit {
diff --git a/Source/WebKit2/UIProcess/qt/QtWebError.cpp b/Source/WebKit2/UIProcess/qt/QtWebError.cpp
index 940e2a5107a0..357b5e1f866f 100644
--- a/Source/WebKit2/UIProcess/qt/QtWebError.cpp
+++ b/Source/WebKit2/UIProcess/qt/QtWebError.cpp
@@ -25,10 +25,7 @@
 
 #include <QtCore/QUrl>
 #include <WKSharedAPICast.h>
-#include <WKString.h>
 #include <WKStringQt.h>
-#include <WKType.h>
-#include <WKURL.h>
 #include <WKURLQt.h>
 
 namespace WebKit {
diff --git a/Source/WebKit2/UIProcess/qt/QtWebPageEventHandler.h b/Source/WebKit2/UIProcess/qt/QtWebPageEventHandler.h
index 2fe82e8e0999..32c7f3f0ddba 100644
--- a/Source/WebKit2/UIProcess/qt/QtWebPageEventHandler.h
+++ b/Source/WebKit2/UIProcess/qt/QtWebPageEventHandler.h
@@ -93,6 +93,7 @@ class QtWebPageEventHandler final : public QObject {
     void resetGestureRecognizers();
 
     PageViewportControllerClientQt* viewportController() { return m_viewportController; }
+    WebPageProxy* webPageProxy() { return m_webPageProxy; }
 
     void startDrag(const WebCore::DragData&, PassRefPtr<ShareableBitmap> dragImage);
 
diff --git a/Source/WebKit2/UIProcess/qt/QtWebPagePolicyClient.cpp b/Source/WebKit2/UIProcess/qt/QtWebPagePolicyClient.cpp
index 90e74fd9c653..e32d784a5eb1 100644
--- a/Source/WebKit2/UIProcess/qt/QtWebPagePolicyClient.cpp
+++ b/Source/WebKit2/UIProcess/qt/QtWebPagePolicyClient.cpp
@@ -22,13 +22,15 @@
 #include "QtWebPagePolicyClient.h"
 
 #include "WKFrame.h"
+#include "WKPagePolicyClient.h"
+#include "WKSharedAPICast.h"
 #include "WKURLQt.h"
-#include "qquickwebview_p_p.h"
 #include "qwebnavigationrequest_p.h"
 #include <QtCore/QObject>
 #include <WKFramePolicyListener.h>
 #include <WKRetainPtr.h>
 #include <WKURLRequest.h>
+#include <wtf/text/WTFString.h>
 
 namespace WebKit {
 
diff --git a/Source/WebKit2/UIProcess/qt/QtWebPageUIClient.cpp b/Source/WebKit2/UIProcess/qt/QtWebPageUIClient.cpp
index c58f200656e0..7573063ac261 100644
--- a/Source/WebKit2/UIProcess/qt/QtWebPageUIClient.cpp
+++ b/Source/WebKit2/UIProcess/qt/QtWebPageUIClient.cpp
@@ -29,7 +29,6 @@
 #include <WKArray.h>
 #include <WKHitTestResult.h>
 #include <WKOpenPanelParameters.h>
-#include <WKOpenPanelResultListener.h>
 #include <WKRetainPtr.h>
 
 namespace WebKit {
diff --git a/Source/WebKit2/UIProcess/qt/QtWebPageUIClient.h b/Source/WebKit2/UIProcess/qt/QtWebPageUIClient.h
index b608d5880bc0..4696825919a2 100644
--- a/Source/WebKit2/UIProcess/qt/QtWebPageUIClient.h
+++ b/Source/WebKit2/UIProcess/qt/QtWebPageUIClient.h
@@ -24,9 +24,7 @@
 #include <QtCore/QString>
 #include <QtCore/QUrl>
 #include <WKFrame.h>
-#include <WKGeolocationPermissionRequest.h>
 #include <WKPage.h>
-#include <WKSecurityOriginRef.h>
 
 class QQuickWebView;
 class QWebPermissionRequest;
diff --git a/Source/WebKit2/UIProcess/qt/WebFullScreenManagerProxyQt.cpp b/Source/WebKit2/UIProcess/qt/WebFullScreenManagerProxyQt.cpp
deleted file mode 100644
index 7d19da5d2880..000000000000
--- a/Source/WebKit2/UIProcess/qt/WebFullScreenManagerProxyQt.cpp
+++ /dev/null
@@ -1,87 +0,0 @@
-/*
- * Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies)
- *
- *  This library is free software; you can redistribute it and/or
- *  modify it under the terms of the GNU Library General Public
- *  License as published by the Free Software Foundation; either
- *  version 2 of the License, or (at your option) any later version.
- *
- *  This library is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- *  Library General Public License for more details.
- *
- *  You should have received a copy of the GNU Library General Public License
- *  along with this library; see the file COPYING.LIB.  If not, write to
- *  the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
- *  Boston, MA 02110-1301, USA.
- */
-
-#include "config.h"
-#include "WebFullScreenManagerProxy.h"
-
-#if ENABLE(FULLSCREEN_API)
-
-#include "WebContext.h"
-#include "WebFullScreenManagerMessages.h"
-#include "WebFullScreenManagerProxyMessages.h"
-#include "WebProcess.h"
-#include <WebCore/NotImplemented.h>
-
-#if HAVE(QTQUICK)
-#include "qquickwebview_p.h"
-#endif
-
-using namespace WebCore;
-
-namespace WebKit {
-
-void WebFullScreenManagerProxy::invalidate()
-{
-#if HAVE(QTQUICK)
-    m_webView = 0;
-#endif
-}
-
-void WebFullScreenManagerProxy::close()
-{
-    notImplemented();
-}
-
-bool WebFullScreenManagerProxy::isFullScreen()
-{
-    notImplemented();
-    return false;
-}
-
-void WebFullScreenManagerProxy::enterFullScreen()
-{
-    willEnterFullScreen();
-#if HAVE(QTQUICK)
-    emit m_webView->experimental()->enterFullScreenRequested();
-#endif
-    didEnterFullScreen();
-}
-
-void WebFullScreenManagerProxy::exitFullScreen()
-{
-    willExitFullScreen();
-#if HAVE(QTQUICK)
-    emit m_webView->experimental()->exitFullScreenRequested();
-#endif
-    didExitFullScreen();
-}
-
-void WebFullScreenManagerProxy::beganEnterFullScreen(const IntRect& initialFrame, const IntRect& finalFrame)
-{
-    notImplemented();
-}
-
-void WebFullScreenManagerProxy::beganExitFullScreen(const IntRect& initialFrame, const IntRect& finalFrame)
-{
-    notImplemented();
-}
-
-} // namespace WebKit
-
-#endif // ENABLE(FULLSCREEN_API)
diff --git a/Source/WebKit2/UIProcess/qt/WebProcessPoolQt.cpp b/Source/WebKit2/UIProcess/qt/WebProcessPoolQt.cpp
index e2662a7d70f1..520ea73d927e 100644
--- a/Source/WebKit2/UIProcess/qt/WebProcessPoolQt.cpp
+++ b/Source/WebKit2/UIProcess/qt/WebProcessPoolQt.cpp
@@ -30,7 +30,6 @@
 #include "NetworkProcessCreationParameters.h"
 #include "QtWebContext.h"
 #include "WKSharedAPICast.h"
-#include "WebCookieManagerProxy.h"
 #include "WebProcessCreationParameters.h"
 #include <QProcess>
 #include <WebCore/ApplicationCacheStorage.h>
diff --git a/Source/WebKit2/WebProcess/WebCoreSupport/qt/WebDragClientQt.cpp b/Source/WebKit2/WebProcess/WebCoreSupport/qt/WebDragClientQt.cpp
index 8b93b2903919..27ad4e30a495 100644
--- a/Source/WebKit2/WebProcess/WebCoreSupport/qt/WebDragClientQt.cpp
+++ b/Source/WebKit2/WebProcess/WebCoreSupport/qt/WebDragClientQt.cpp
@@ -33,7 +33,6 @@
 #include "GraphicsContext.h"
 #include "Pasteboard.h"
 #include "ShareableBitmap.h"
-#include "WebCoreArgumentCoders.h"
 #include "WebPage.h"
 #include "WebPageProxyMessages.h"
 
diff --git a/Source/WebKit2/WebProcess/WebPage/qt/WebPageQt.cpp b/Source/WebKit2/WebProcess/WebPage/qt/WebPageQt.cpp
index 899d09a517a9..5dd083c7cc89 100644
--- a/Source/WebKit2/WebProcess/WebPage/qt/WebPageQt.cpp
+++ b/Source/WebKit2/WebProcess/WebPage/qt/WebPageQt.cpp
@@ -29,11 +29,9 @@
 
 #include "NotImplemented.h"
 #include "PopupMenuClient.h"
-#include "WebEditorClient.h"
 #include "WebEvent.h"
 #include "WebPageProxyMessages.h"
 #include "WebPopupMenu.h"
-#include "WebProcess.h"
 #include <QClipboard>
 #include <QGuiApplication>
 #include <WebCore/EventHandler.h>
diff --git a/Source/WebKit2/WebProcess/qt/QtBuiltinBundle.cpp b/Source/WebKit2/WebProcess/qt/QtBuiltinBundle.cpp
index ae2c96fbb8bc..2ab8adf4671c 100644
--- a/Source/WebKit2/WebProcess/qt/QtBuiltinBundle.cpp
+++ b/Source/WebKit2/WebProcess/qt/QtBuiltinBundle.cpp
@@ -28,11 +28,9 @@
 #include "QtBuiltinBundle.h"
 
 #include "QtBuiltinBundlePage.h"
-#include "WKBundlePage.h"
 #include "WKData.h"
 #include "WKNumber.h"
 #include "WKString.h"
-#include "WKStringQt.h"
 #include "WKType.h"
 
 namespace WebKit {
diff --git a/Source/WebKit2/WebProcess/qt/QtBuiltinBundle.h b/Source/WebKit2/WebProcess/qt/QtBuiltinBundle.h
index bf4b6c45ae3b..b79ad418b298 100644
--- a/Source/WebKit2/WebProcess/qt/QtBuiltinBundle.h
+++ b/Source/WebKit2/WebProcess/qt/QtBuiltinBundle.h
@@ -28,7 +28,6 @@
 #define QtBuiltinBundle_h
 
 #include "WKBundle.h"
-#include "WKBundlePage.h"
 #include <wtf/HashMap.h>
 
 namespace WebKit {
diff --git a/Source/WebKit2/WebProcess/qt/QtBuiltinBundlePage.cpp b/Source/WebKit2/WebProcess/qt/QtBuiltinBundlePage.cpp
index fa368a962575..92a034e89d10 100644
--- a/Source/WebKit2/WebProcess/qt/QtBuiltinBundlePage.cpp
+++ b/Source/WebKit2/WebProcess/qt/QtBuiltinBundlePage.cpp
@@ -35,8 +35,6 @@
 #include "WKRetainPtr.h"
 #include "WKString.h"
 #include "WKStringPrivate.h"
-#include "WKStringQt.h"
-#include <JavaScript.h>
 #include <JavaScriptCore/APICast.h>
 #include <JavaScriptCore/JSRetainPtr.h>
 #include <QDebug>
diff --git a/Source/cmake/ECMEnableSanitizers.cmake b/Source/cmake/ECMEnableSanitizers.cmake
new file mode 100644
index 000000000000..06cc0b66d864
--- /dev/null
+++ b/Source/cmake/ECMEnableSanitizers.cmake
@@ -0,0 +1,173 @@
+#.rst:
+# ECMEnableSanitizers
+# -------------------
+#
+# Enable compiler sanitizer flags.
+#
+# The following sanitizers are supported:
+#
+# - Address Sanitizer
+# - Memory Sanitizer
+# - Thread Sanitizer
+# - Leak Sanitizer
+# - Undefined Behaviour Sanitizer
+#
+# All of them are implemented in Clang, depending on your version, and
+# there is an work in progress in GCC, where some of them are currently
+# implemented.
+#
+# This module will check your current compiler version to see if it
+# supports the sanitizers that you want to enable
+#
+# Usage
+# =====
+#
+# Simply add::
+#
+#    include(ECMEnableSanitizers)
+#
+# to your ``CMakeLists.txt``. Note that this module is included in
+# KDECompilerSettings, so projects using that module do not need to also
+# include this one.
+#
+# The sanitizers are not enabled by default. Instead, you must set
+# ``ECM_ENABLE_SANITIZERS`` (either in your ``CMakeLists.txt`` or on the
+# command line) to a semicolon-separated list of sanitizers you wish to enable.
+# The options are:
+#
+# - address
+# - memory
+# - thread
+# - leak
+# - undefined
+#
+# The sanitizers "address", "memory" and "thread" are mutually exclusive.  You
+# cannot enable two of them in the same build.
+#
+# "leak" requires the  "address" sanitizer.
+#
+# .. note::
+#
+#   To reduce the overhead induced by the instrumentation of the sanitizers, it
+#   is advised to enable compiler optimizations (``-O1`` or higher).
+#
+# Example
+# =======
+#
+# This is an example of usage::
+#
+#   mkdir build
+#   cd build
+#   cmake -DECM_ENABLE_SANITIZERS='address;leak;undefined' ..
+#
+# .. note::
+#
+#   Most of the sanitizers will require Clang. To enable it, use::
+#
+#     -DCMAKE_CXX_COMPILER=clang++
+#
+# Since 1.3.0.
+
+#=============================================================================
+# Copyright 2014 Mathieu Tarral <mathieu.tarral@gmail.com>
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+#
+# 1. Redistributions of source code must retain the copyright
+#    notice, this list of conditions and the following disclaimer.
+# 2. Redistributions in binary form must reproduce the copyright
+#    notice, this list of conditions and the following disclaimer in the
+#    documentation and/or other materials provided with the distribution.
+# 3. The name of the author may not be used to endorse or promote products
+#    derived from this software without specific prior written permission.
+#
+# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
+# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
+# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
+# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+# MACRO check_compiler_version
+#-----------------------------
+macro (check_compiler_version gcc_required_version clang_required_version)
+    if (
+        (
+            CMAKE_CXX_COMPILER_ID MATCHES "GNU"
+            AND
+            CMAKE_CXX_COMPILER_VERSION VERSION_LESS ${gcc_required_version}
+        )
+        OR
+        (
+            CMAKE_CXX_COMPILER_ID MATCHES "Clang"
+            AND
+            CMAKE_CXX_COMPILER_VERSION VERSION_LESS ${clang_required_version}
+        )
+    )
+        # error !
+        message(FATAL_ERROR "You ask to enable the sanitizer ${CUR_SANITIZER},
+        but your compiler ${CMAKE_CXX_COMPILER_ID} version ${CMAKE_CXX_COMPILER_VERSION}
+        does not support it !
+        You should use at least GCC ${gcc_required_version} or Clang ${clang_required_version}
+        (99.99 means not implemented yet)")
+    endif ()
+endmacro ()
+
+# MACRO check_compiler_support
+#------------------------------
+macro (enable_sanitizer_flags sanitize_option)
+    if (${sanitize_option} MATCHES "address")
+        check_compiler_version("4.8" "3.1")
+        set(XSAN_COMPILE_FLAGS "-fsanitize=address -fno-omit-frame-pointer -fno-optimize-sibling-calls")
+        set(XSAN_LINKER_FLAGS "asan")
+    elseif (${sanitize_option} MATCHES "thread")
+        check_compiler_version("4.8" "3.1")
+        set(XSAN_COMPILE_FLAGS "-fsanitize=thread")
+        set(XSAN_LINKER_FLAGS "tsan")
+    elseif (${sanitize_option} MATCHES "memory")
+        check_compiler_version("99.99" "3.1")
+        set(XSAN_COMPILE_FLAGS "-fsanitize=memory")
+    elseif (${sanitize_option} MATCHES "leak")
+        check_compiler_version("4.9" "3.4")
+        set(XSAN_COMPILE_FLAGS "-fsanitize=leak")
+        set(XSAN_LINKER_FLAGS "lsan")
+    elseif (${sanitize_option} MATCHES "undefined")
+        check_compiler_version("4.9" "3.1")
+        set(XSAN_COMPILE_FLAGS "-fsanitize=undefined -fno-omit-frame-pointer -fno-optimize-sibling-calls")
+    else ()
+        message(FATAL_ERROR "Compiler sanitizer option \"${sanitize_option}\" not supported.")
+    endif ()
+endmacro ()
+
+if (ECM_ENABLE_SANITIZERS)
+    if (CMAKE_CXX_COMPILER_ID MATCHES "GNU" OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
+        # for each element of the ECM_ENABLE_SANITIZERS list
+        foreach ( CUR_SANITIZER ${ECM_ENABLE_SANITIZERS} )
+            # lowercase filter
+            string(TOLOWER ${CUR_SANITIZER} CUR_SANITIZER)
+            # check option and enable appropriate flags
+            enable_sanitizer_flags ( ${CUR_SANITIZER} )
+            # TODO: GCC will not link pthread library if enabled ASan
+            if(CMAKE_C_COMPILER_ID MATCHES "Clang")
+              set( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${XSAN_COMPILE_FLAGS}" )
+            endif()
+            set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${XSAN_COMPILE_FLAGS}" )
+            if(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
+              link_libraries(${XSAN_LINKER_FLAGS})
+            endif()
+            if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
+                string(REPLACE "-Wl,--no-undefined" "" CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS}")
+                string(REPLACE "-Wl,--no-undefined" "" CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS}")
+            endif ()
+        endforeach()
+    else()
+        message(STATUS "Tried to enable sanitizers (-DECM_ENABLE_SANITIZERS=${ECM_ENABLE_SANITIZERS}), \
+but compiler (${CMAKE_CXX_COMPILER_ID}) does not have sanitizer support")
+    endif()
+endif()
diff --git a/Source/cmake/OptionsQt.cmake b/Source/cmake/OptionsQt.cmake
index 1930027d1072..b00a31a3df0d 100644
--- a/Source/cmake/OptionsQt.cmake
+++ b/Source/cmake/OptionsQt.cmake
@@ -1,4 +1,5 @@
 include(FeatureSummary)
+include(ECMEnableSanitizers)
 include(ECMPackageConfigHelpers)
 
 set(ECM_MODULE_DIR ${CMAKE_MODULE_PATH})
@@ -59,7 +60,16 @@ macro(QT_ADD_EXTRA_WEBKIT_TARGET_EXPORT target)
     endif ()
 endmacro()
 
-macro(QTWEBKIT_GENERATE_MOC_FILES_CPP)
+macro(QTWEBKIT_SKIP_AUTOMOC _target)
+    foreach (_src ${${_target}_SOURCES})
+        set_property(SOURCE ${_src} PROPERTY SKIP_AUTOMOC ON)
+    endforeach ()
+endmacro()
+
+macro(QTWEBKIT_GENERATE_MOC_FILES_CPP _target)
+    if (${ARGC} LESS 2)
+        message(FATAL_ERROR "QTWEBKIT_GENERATE_MOC_FILES_CPP must be called with at least 2 arguments")
+    endif ()
     foreach (_file ${ARGN})
         get_filename_component(_ext ${_file} EXT)
         if (NOT _ext STREQUAL ".cpp")
@@ -67,12 +77,12 @@ macro(QTWEBKIT_GENERATE_MOC_FILES_CPP)
         endif ()
         get_filename_component(_name_we ${_file} NAME_WE)
         set(_moc_name "${CMAKE_CURRENT_BINARY_DIR}/${_name_we}.moc")
-        qt5_generate_moc(${_file} ${_moc_name})
+        qt5_generate_moc(${_file} ${_moc_name} TARGET ${_target})
         ADD_SOURCE_DEPENDENCIES(${_file} ${_moc_name})
     endforeach ()
 endmacro()
 
-macro(QTWEBKIT_GENERATE_MOC_FILE_H _header _source)
+macro(QTWEBKIT_GENERATE_MOC_FILE_H _target _header _source)
     get_filename_component(_header_ext ${_header} EXT)
     get_filename_component(_source_ext ${_source} EXT)
     if ((NOT _header_ext STREQUAL ".h") OR (NOT _source_ext STREQUAL ".cpp"))
@@ -80,16 +90,19 @@ macro(QTWEBKIT_GENERATE_MOC_FILE_H _header _source)
     endif ()
     get_filename_component(_name_we ${_header} NAME_WE)
     set(_moc_name "${CMAKE_CURRENT_BINARY_DIR}/moc_${_name_we}.cpp")
-    qt5_generate_moc(${_header} ${_moc_name})
+    qt5_generate_moc(${_header} ${_moc_name} TARGET ${_target})
     ADD_SOURCE_DEPENDENCIES(${_source} ${_moc_name})
 endmacro()
 
-macro(QTWEBKIT_GENERATE_MOC_FILES_H)
+macro(QTWEBKIT_GENERATE_MOC_FILES_H _target)
+    if (${ARGC} LESS 2)
+        message(FATAL_ERROR "QTWEBKIT_GENERATE_MOC_FILES_H must be called with at least 2 arguments")
+    endif ()
     foreach (_header ${ARGN})
         get_filename_component(_header_dir ${_header} DIRECTORY)
         get_filename_component(_name_we ${_header} NAME_WE)
         set(_source "${_header_dir}/${_name_we}.cpp")
-        QTWEBKIT_GENERATE_MOC_FILE_H(${_header} ${_source})
+        QTWEBKIT_GENERATE_MOC_FILE_H(${_target} ${_header} ${_source})
     endforeach ()
 endmacro()
 
@@ -152,7 +165,21 @@ else ()
 endif ()
 
 # FIXME: Move Qt handling here
-find_package(Qt5Gui QUIET)
+set(REQUIRED_QT_VERSION 5.2.0)
+find_package(Qt5 ${REQUIRED_QT_VERSION} REQUIRED COMPONENTS Core Gui QUIET)
+
+get_target_property(QT_CORE_TYPE Qt5::Core TYPE)
+if (QT_CORE_TYPE MATCHES STATIC)
+    set(QT_STATIC_BUILD ON)
+    set(SHARED_CORE OFF)
+    set(MACOS_BUILD_FRAMEWORKS OFF)
+endif ()
+
+if (QT_STATIC_BUILD)
+    set(ENABLE_WEBKIT2_DEFAULT OFF)
+else ()
+    set(ENABLE_WEBKIT2_DEFAULT ON)
+endif ()
 
 if (UNIX AND TARGET Qt5::QXcbIntegrationPlugin AND NOT APPLE)
     set(ENABLE_X11_TARGET_DEFAULT ON)
@@ -179,7 +206,7 @@ WEBKIT_OPTION_DEFINE(ENABLE_OPENGL "Whether to use OpenGL." PUBLIC ON)
 WEBKIT_OPTION_DEFINE(ENABLE_PRINT_SUPPORT "Enable support for printing web pages" PUBLIC ON)
 WEBKIT_OPTION_DEFINE(ENABLE_QT_GESTURE_EVENTS "Enable support for gesture events (required for mouse in WK2)" PUBLIC ON)
 WEBKIT_OPTION_DEFINE(ENABLE_QT_WEBCHANNEL "Enable support for Qt WebChannel" PUBLIC ON)
-WEBKIT_OPTION_DEFINE(ENABLE_WEBKIT2 "Enable WebKit2 (QML API)" PUBLIC ON)
+WEBKIT_OPTION_DEFINE(ENABLE_WEBKIT2 "Enable WebKit2 (QML API)" PUBLIC ${ENABLE_WEBKIT2_DEFAULT})
 WEBKIT_OPTION_DEFINE(ENABLE_X11_TARGET "Whether to enable support for the X11 windowing target." PUBLIC ${ENABLE_X11_TARGET_DEFAULT})
 
 option(GENERATE_DOCUMENTATION "Generate HTML and QCH documentation" OFF)
@@ -249,11 +276,17 @@ if (MINGW AND CMAKE_SIZEOF_VOID_P EQUAL 8)
 endif ()
 
 WEBKIT_OPTION_CONFLICT(USE_GSTREAMER USE_QT_MULTIMEDIA)
+WEBKIT_OPTION_CONFLICT(USE_GSTREAMER USE_MEDIA_FOUNDATION)
+WEBKIT_OPTION_CONFLICT(USE_QT_MULTIMEDIA USE_MEDIA_FOUNDATION)
 
 WEBKIT_OPTION_DEPEND(ENABLE_3D_TRANSFORMS ENABLE_OPENGL)
 WEBKIT_OPTION_DEPEND(ENABLE_ACCELERATED_2D_CANVAS ENABLE_OPENGL)
 WEBKIT_OPTION_DEPEND(ENABLE_WEBGL ENABLE_OPENGL)
 
+# Building video without these options is not supported
+WEBKIT_OPTION_DEPEND(ENABLE_VIDEO ENABLE_VIDEO_TRACK)
+WEBKIT_OPTION_DEPEND(ENABLE_VIDEO ENABLE_MEDIA_CONTROLS_SCRIPT)
+
 # WebAudio and MediaSource are supported with GStreamer only
 WEBKIT_OPTION_DEPEND(ENABLE_WEB_AUDIO USE_GSTREAMER)
 WEBKIT_OPTION_DEPEND(ENABLE_LEGACY_WEB_AUDIO USE_GSTREAMER)
@@ -271,9 +304,9 @@ WEBKIT_OPTION_END()
 # FTL JIT and IndexedDB support require GCC 4.9
 # TODO: Patch code to avoid variadic lambdas
 if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
-    if (ENABLE_FTL_JIT OR ENABLE_INDEXED_DATABASE)
+    if (ENABLE_FTL_JIT OR ENABLE_INDEXED_DATABASE OR (ENABLE_WEBKIT2 AND ENABLE_DATABASE_PROCESS))
         if (CMAKE_CXX_COMPILER_VERSION VERSION_LESS "4.9.0")
-            message(FATAL_ERROR "GCC 4.9.0 is required to build QtWebKit with FTL JIT and Indexed Database, use a newer GCC version or clang, or disable these features")
+            message(FATAL_ERROR "GCC 4.9.0 is required to build QtWebKit with FTL JIT, Indexed Database, and Database Process (WebKit 2). Use a newer GCC version or clang, or disable these features")
         endif ()
     else ()
         if (CMAKE_CXX_COMPILER_VERSION VERSION_LESS "4.8.0")
@@ -291,13 +324,6 @@ endif ()
 set(ENABLE_WEBKIT ON)
 set(WTF_USE_UDIS86 1)
 
-get_target_property(QT_CORE_TYPE Qt5::Core TYPE)
-if (QT_CORE_TYPE MATCHES STATIC)
-    set(QT_STATIC_BUILD ON)
-    set(SHARED_CORE OFF)
-    set(MACOS_BUILD_FRAMEWORKS OFF)
-endif ()
-
 if (SHARED_CORE)
     set(WebCoreTestSupport_LIBRARY_TYPE SHARED)
 else ()
@@ -431,7 +457,6 @@ if (WEBP_FOUND)
     SET_AND_EXPOSE_TO_BUILD(USE_WEBP 1)
 endif ()
 
-set(REQUIRED_QT_VERSION 5.2.0)
 set(QT_REQUIRED_COMPONENTS Core Gui Network)
 
 # FIXME: Allow building w/o these components
@@ -602,17 +627,13 @@ if (ENABLE_OPENGL)
     SET_AND_EXPOSE_TO_BUILD(ENABLE_GRAPHICS_CONTEXT_3D TRUE)
 
     # TODO: Add proper support of DynamicGL detection to Qt and use it
-    if (WIN32)
-        if  (QT_USES_GLES2_ONLY)
-            # FIXME: Fix build with ANGLE-only Qt
-            message(FATAL_ERROR "Only dynamic GL is supported on Windows at the moment")
-        else ()
-            set(Qt5Gui_OPENGL_IMPLEMENTATION GL)
-        endif ()
+    if (WIN32 AND NOT QT_USES_GLES2_ONLY)
+        set(Qt5Gui_OPENGL_IMPLEMENTATION GL)
     endif ()
 endif ()
 
 if (NOT ENABLE_VIDEO)
+    set(USE_MEDIA_FOUNDATION OFF)
     set(USE_QT_MULTIMEDIA OFF)
 
     if (NOT ENABLE_WEB_AUDIO)
diff --git a/Source/cmake/WebKitMacros.cmake b/Source/cmake/WebKitMacros.cmake
index 858e2e47d8d5..4c54c1c5de1e 100644
--- a/Source/cmake/WebKitMacros.cmake
+++ b/Source/cmake/WebKitMacros.cmake
@@ -265,8 +265,6 @@ macro(WEBKIT_FRAMEWORK _target)
         ${${_target}_HEADERS}
         ${${_target}_SOURCES}
         ${${_target}_DERIVED_SOURCES}
-        ${${_target}_PRIVATE_HEADERS}
-        ${${_target}_PUBLIC_HEADERS}
     )
     target_link_libraries(${_target} ${${_target}_LIBRARIES})
     set_target_properties(${_target} PROPERTIES COMPILE_DEFINITIONS "BUILDING_${_target}")
diff --git a/Tools/DumpRenderTree/CMakeLists.txt b/Tools/DumpRenderTree/CMakeLists.txt
index db6ef43045b8..4a726ccaf718 100644
--- a/Tools/DumpRenderTree/CMakeLists.txt
+++ b/Tools/DumpRenderTree/CMakeLists.txt
@@ -1,3 +1,5 @@
+QTWEBKIT_SKIP_AUTOMOC(DumpRenderTree)
+
 set(DumpRenderTree_SOURCES
     AccessibilityController.cpp
     AccessibilityTextMarker.cpp
@@ -130,4 +132,7 @@ endif ()
 
 if (${PORT} STREQUAL "Qt")
     set_target_properties(DumpRenderTree PROPERTIES AUTOMOC ON)
+    if (ENABLE_NETSCAPE_PLUGIN_API)
+        target_compile_definitions(TestNetscapePlugin PRIVATE QT_NO_VERSION_TAGGING)
+    endif ()
 endif ()
diff --git a/Tools/MiniBrowser/qt/CMakeLists.txt b/Tools/MiniBrowser/qt/CMakeLists.txt
index e77d3bd54519..68dd13c8b703 100644
--- a/Tools/MiniBrowser/qt/CMakeLists.txt
+++ b/Tools/MiniBrowser/qt/CMakeLists.txt
@@ -53,6 +53,12 @@ set(MiniBrowser_LIBRARIES
     ${Qt5Quick_LIBRARIES}
 )
 
+if (SHARED_CORE)
+    list(APPEND MiniBrowser_LIBRARIES
+        WebKit2
+    )
+endif ()
+
 if (ENABLE_TEST_SUPPORT)
     add_definitions(-DHAVE_QTTESTSUPPORT)
 endif ()
diff --git a/Tools/MiniBrowser/qt/icons/find.png b/Tools/MiniBrowser/qt/icons/find.png
index b76afa398b92..eb5a0ad9714b 100644
Binary files a/Tools/MiniBrowser/qt/icons/find.png and b/Tools/MiniBrowser/qt/icons/find.png differ
diff --git a/Tools/MiniBrowser/qt/icons/plus.png b/Tools/MiniBrowser/qt/icons/plus.png
index f6dfbd02d002..671a23d3886a 100644
Binary files a/Tools/MiniBrowser/qt/icons/plus.png and b/Tools/MiniBrowser/qt/icons/plus.png differ
diff --git a/Tools/MiniBrowser/qt/icons/touch.png b/Tools/MiniBrowser/qt/icons/touch.png
index 182ae0fe8fec..4d956c5b6de8 100644
Binary files a/Tools/MiniBrowser/qt/icons/touch.png and b/Tools/MiniBrowser/qt/icons/touch.png differ
diff --git a/Tools/PlatformQt.cmake b/Tools/PlatformQt.cmake
index 9c5548aa3e23..41db83119446 100644
--- a/Tools/PlatformQt.cmake
+++ b/Tools/PlatformQt.cmake
@@ -2,10 +2,6 @@ remove_definitions(-DQT_ASCII_CAST_WARNINGS)
 
 add_subdirectory(QtTestBrowser)
 
-if (ENABLE_API_TESTS AND NOT ENABLE_WEBKIT2)
-    add_subdirectory(TestWebKitAPI)
-endif ()
-
 if (ENABLE_TEST_SUPPORT)
     add_subdirectory(DumpRenderTree)
     add_subdirectory(ImageDiff)
@@ -17,3 +13,7 @@ endif ()
 
 # FIXME: Remove when WK2 Tools patches are merged
 set(ENABLE_WEBKIT2 0)
+
+if (ENABLE_API_TESTS AND NOT ENABLE_WEBKIT2)
+    add_subdirectory(TestWebKitAPI)
+endif ()
diff --git a/Tools/QtTestBrowser/CMakeLists.txt b/Tools/QtTestBrowser/CMakeLists.txt
index a091c9541677..ccd8e0ff2d67 100644
--- a/Tools/QtTestBrowser/CMakeLists.txt
+++ b/Tools/QtTestBrowser/CMakeLists.txt
@@ -55,7 +55,6 @@ if (Qt5OpenGL_FOUND)
     list(APPEND QtTestBrowser_LIBRARIES
         ${Qt5OpenGL_LIBRARIES}
     )
-    add_definitions(-DQT_CONFIGURED_WITH_OPENGL)
 endif ()
 
 if (ENABLE_TEST_SUPPORT)
diff --git a/Tools/QtTestBrowser/launcherwindow.cpp b/Tools/QtTestBrowser/launcherwindow.cpp
index 0fd64654ef09..716a6e3e8f15 100644
--- a/Tools/QtTestBrowser/launcherwindow.cpp
+++ b/Tools/QtTestBrowser/launcherwindow.cpp
@@ -168,9 +168,9 @@ void LauncherWindow::initializeView()
     } else {
         WebViewGraphicsBased* view = new WebViewGraphicsBased(splitter);
         m_view = view;
-#ifndef QT_NO_OPENGL
         if (!m_windowOptions.useQOpenGLWidgetViewport)
             toggleQGLWidgetViewport(m_windowOptions.useQGLWidgetViewport);
+#ifdef QT_OPENGL_LIB
         if (!m_windowOptions.useQGLWidgetViewport)
             toggleQOpenGLWidgetViewport(m_windowOptions.useQOpenGLWidgetViewport);
 #endif
@@ -345,6 +345,9 @@ void LauncherWindow::createChrome()
     spatialNavigationAction->setCheckable(true);
     spatialNavigationAction->setShortcut(QKeySequence(Qt::CTRL | Qt::SHIFT | Qt::Key_S));
 
+    QAction* caretBrowsingAction = toolsMenu->addAction("Toggle Caret Browsing", this, SLOT(toggleCaretBrowsing(bool)));
+    caretBrowsingAction->setCheckable(true);
+
     QAction* toggleFrameFlattening = toolsMenu->addAction("Toggle Frame Flattening", this, SLOT(toggleFrameFlattening(bool)));
     toggleFrameFlattening->setCheckable(true);
     toggleFrameFlattening->setChecked(settings->testAttribute(QWebSettings::FrameFlatteningEnabled));
@@ -972,6 +975,11 @@ void LauncherWindow::toggleSpatialNavigation(bool enable)
     page()->settings()->setAttribute(QWebSettings::SpatialNavigationEnabled, enable);
 }
 
+void LauncherWindow::toggleCaretBrowsing(bool enable)
+{
+    page()->settings()->setAttribute(QWebSettings::CaretBrowsingEnabled, enable);
+}
+
 void LauncherWindow::toggleFullScreenMode(bool enable)
 {
     bool alreadyEnabled = windowState() & Qt::WindowFullScreen;
@@ -1164,9 +1172,13 @@ void LauncherWindow::downloadRequest(const QNetworkRequest &request)
 
 void LauncherWindow::fileDownloadFinished()
 {
-    QFileInfo fileInf(m_reply->request().url().toString());
-    QString requestFileName = QDir::homePath() + "/" + fileInf.fileName();
-    QString fileName = QFileDialog::getSaveFileName(this, "Save as...", requestFileName, "All Files (*)");
+    QString suggestedFileName;
+    if (m_reply->request().url().scheme().toLower() != QLatin1String("data")) {
+        QFileInfo fileInf(m_reply->request().url().toString());
+        suggestedFileName = QDir::homePath() + "/" + fileInf.fileName();
+    } else
+        suggestedFileName = QStringLiteral("data");
+    QString fileName = QFileDialog::getSaveFileName(this, "Save as...", suggestedFileName, "All Files (*)");
 
     if (fileName.isEmpty())
         return;
diff --git a/Tools/QtTestBrowser/launcherwindow.h b/Tools/QtTestBrowser/launcherwindow.h
index a05a6cd562e4..e475a8022cdb 100644
--- a/Tools/QtTestBrowser/launcherwindow.h
+++ b/Tools/QtTestBrowser/launcherwindow.h
@@ -137,6 +137,7 @@ protected Q_SLOTS:
     void toggleWebAudio(bool toggle);
     void toggleMediaSource(bool toggle);
     void toggleSpatialNavigation(bool enable);
+    void toggleCaretBrowsing(bool enable);
     void toggleFullScreenMode(bool enable);
     void toggleFrameFlattening(bool toggle);
     void toggleJavaScriptEnabled(bool enable);
diff --git a/Tools/QtTestBrowser/qttestbrowser.cpp b/Tools/QtTestBrowser/qttestbrowser.cpp
index 24ca97a7af13..52d9066b0a7b 100644
--- a/Tools/QtTestBrowser/qttestbrowser.cpp
+++ b/Tools/QtTestBrowser/qttestbrowser.cpp
@@ -135,7 +135,7 @@ void LauncherApplication::handleUserOptions()
         qDebug() << "Usage:" << programName.toLatin1().data()
              << "[-graphicsbased]"
              << "[-no-compositing]"
-#if defined(QT_CONFIGURED_WITH_OPENGL)
+#ifdef QT_OPENGL_LIB
              << "[-gl-viewport]"
 #endif
              << "[-opengl-viewport]"
@@ -240,7 +240,7 @@ void LauncherApplication::handleUserOptions()
 
         windowOptions.viewportUpdateMode = static_cast<QGraphicsView::ViewportUpdateMode>(idx);
     }
-#ifdef QT_CONFIGURED_WITH_OPENGL
+#ifdef QT_OPENGL_LIB
     if (args.contains("-gl-viewport") || defaultForAnimations) {
         requiresGraphicsView("-gl-viewport");
         windowOptions.useQGLWidgetViewport = true;
diff --git a/Tools/TestWebKitAPI/Tests/WTF/StringOperators.cpp b/Tools/TestWebKitAPI/Tests/WTF/StringOperators.cpp
index 7a1d9297f6cd..fd8836fd1681 100644
--- a/Tools/TestWebKitAPI/Tests/WTF/StringOperators.cpp
+++ b/Tools/TestWebKitAPI/Tests/WTF/StringOperators.cpp
@@ -148,7 +148,8 @@ TEST(WTF, StringOperators)
     EXPECT_N_WTF_STRING_COPIES(2, atomicString + (literal + string + literal));
     EXPECT_N_WTF_STRING_COPIES(2, (atomicString + literal) + (string + literal));
 
-#if COMPILER(MSVC)
+// FIXME: Fix compatibility with ICU >= 58.1
+#if COMPILER(MSVC) && !PLATFORM(QT)
     EXPECT_N_WTF_STRING_COPIES(1, L"wide string" + string);
     EXPECT_N_WTF_STRING_COPIES(1, string + L"wide string");
     EXPECT_N_WTF_STRING_COPIES(1, L"wide string" + atomicString);
diff --git a/Tools/qmake/mkspecs/features/functions.prf b/Tools/qmake/mkspecs/features/functions.prf
index 3e0d406109bc..3699d6b71794 100644
--- a/Tools/qmake/mkspecs/features/functions.prf
+++ b/Tools/qmake/mkspecs/features/functions.prf
@@ -66,9 +66,6 @@ defineTest(isPlatformSupported) {
     }
 
     win32 {
-        qtConfig(opengles2):!qtConfig(dynamicgl) {
-            skipBuild("QtWebKit supports only dynamic GL Qt builds on Windows at the moment.")
-        }
         winrt {
             skipBuild("WinRT is not supported.")
         }
diff --git a/Tools/qmake/projects/run_cmake.pro b/Tools/qmake/projects/run_cmake.pro
index 5603ed72e2e7..b15bd9266f2f 100644
--- a/Tools/qmake/projects/run_cmake.pro
+++ b/Tools/qmake/projects/run_cmake.pro
@@ -12,6 +12,8 @@ CONFIG(debug, debug|release) {
     configuration = Release
 }
 
+programExistsInPath(ninja): use_ninja = 1
+
 cmake_build_dir = $$system_quote($$system_path($$ROOT_BUILD_DIR/$$lower($$configuration)))
 toolchain_file = $$system_quote($$system_path($$ROOT_BUILD_DIR/qmake_toolchain.cmake))
 
@@ -49,9 +51,11 @@ build_pass|!debug_and_release {
     }
 
     !qtConfig(system-zlib):exists($$QTBASE_DIR) {
-        CMAKE_CONFIG += \
-            QT_BUNDLED_ZLIB=1 \
-            ZLIB_INCLUDE_DIRS=$$QTBASE_DIR/src/3rdparty/zlib
+        CMAKE_CONFIG += QT_BUNDLED_ZLIB=1
+
+        exists($$QTBASE_DIR/src/3rdparty/zlib/src/zlib.h): \
+            CMAKE_CONFIG += ZLIB_INCLUDE_DIRS=$$QTBASE_DIR/src/3rdparty/zlib/src
+        else: CMAKE_CONFIG += ZLIB_INCLUDE_DIRS=$$QTBASE_DIR/src/3rdparty/zlib
     }
 
     qtConfig(opengles2):!qtConfig(dynamicgl) {
@@ -82,6 +86,8 @@ build_pass|!debug_and_release {
         }
     }
 
+    !isEmpty(use_ninja): cmake_args += "-G Ninja"
+
     equals(QMAKE_HOST.os, Windows) {
         if(equals(MAKEFILE_GENERATOR, MSVC.NET)|equals(MAKEFILE_GENERATOR, MSBUILD)) {
             cmake_generator = "NMake Makefiles JOM"
@@ -93,10 +99,15 @@ build_pass|!debug_and_release {
             cmake_generator = "Unix Makefiles"
             make_command_name = make
         }
-        cmake_args += "-G \"$$cmake_generator\""
+        isEmpty(use_ninja): cmake_args += "-G \"$$cmake_generator\""
+    } else {
+        make_command_name = make
     }
 
-    !silent: make_args += "VERBOSE=1"
+    !silent {
+        make_args += "VERBOSE=1"
+        ninja_args += "-v"
+    }
 
     # Append additional platform options defined in CMAKE_CONFIG
     for (config, CMAKE_CONFIG): cmake_args += "-D$$config"
@@ -115,7 +126,12 @@ build_pass|!debug_and_release {
 
     build_pass:build_all: default_target.target = all
     else: default_target.target = first
-    default_target.commands = cd $$cmake_build_dir && $(MAKE) $$make_args
+
+    isEmpty(use_ninja) {
+        default_target.commands = cd $$cmake_build_dir && $(MAKE) $$make_args
+    } else {
+        default_target.commands = cd $$cmake_build_dir && ninja $$ninja_args
+    }
     QMAKE_EXTRA_TARGETS += default_target
 
     # When debug and release are built at the same time, don't install data files twice
@@ -129,3 +145,10 @@ build_pass|!debug_and_release {
     install_target.commands = $(MAKE) -f $(MAKEFILE) install_impl $$make_args DESTDIR=$(INSTALL_ROOT)
     QMAKE_EXTRA_TARGETS += install_target
 }
+
+!build_pass:debug_and_release:!isEmpty(use_ninja) {
+    # Special GNU make target for the meta Makefile that ensures that our
+    # debug_and_release Makefiles won't both run ninja in parallel.
+    notParallel.target = .NOTPARALLEL
+    QMAKE_EXTRA_TARGETS += notParallel
+}
