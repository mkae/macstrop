diff --git a/src/libs/core/application.cpp b/src/libs/core/application.cpp
index 26a321cfe163261e060162617aee184409d3c7f0..62e8434e1e0c3dd2875396021f681d6fa2c30ae0 100644
--- a/src/libs/core/application.cpp
+++ b/src/libs/core/application.cpp
@@ -191,9 +191,9 @@ void Application::checkForUpdates(bool quiet)
         const QJsonObject latestVersionInfo = jsonDoc.array().first().toObject();
         const Util::Version latestVersion = latestVersionInfo[QStringLiteral("version")].toString();
         if (latestVersion > Util::Version(QCoreApplication::applicationVersion()))
-            emit updateCheckDone(latestVersion.toString());
+            emit updateCheckDone(latestVersion.toString(), quiet);
         else if (!quiet)
-            emit updateCheckDone();
+            emit updateCheckDone(QString(), quiet);
     });
 }
 
diff --git a/src/libs/core/application.h b/src/libs/core/application.h
index 0b4006c74e83c36278435076d628aad8ad607701..8a8ce56a967d6a036013f0c792e6837856252379 100644
--- a/src/libs/core/application.h
+++ b/src/libs/core/application.h
@@ -72,7 +72,7 @@ signals:
     void extractionCompleted(const QString &filePath);
     void extractionError(const QString &filePath, const QString &errorString);
     void extractionProgress(const QString &filePath, qint64 extracted, qint64 total);
-    void updateCheckDone(const QString &version = QString());
+    void updateCheckDone(const QString &version = QString(), bool quiet = false);
     void updateCheckError(const QString &message);
 
 private slots:
diff --git a/src/libs/ui/mainwindow.cpp b/src/libs/ui/mainwindow.cpp
index 46600502cd9f1c316132799d707baeb6432d5a7e..3b22e23c8384d0558b3399c81245d181ad7da6d2 100644
--- a/src/libs/ui/mainwindow.cpp
+++ b/src/libs/ui/mainwindow.cpp
@@ -52,6 +52,7 @@
 #include <QTimer>
 #include <QWebHistory>
 #include <QWebSettings>
+#include <QDebug>
 
 using namespace Zeal;
 using namespace Zeal::WidgetUi;
@@ -225,24 +226,28 @@ MainWindow::MainWindow(Core::Application *app, QWidget *parent) :
         QMessageBox::warning(this, QStringLiteral("Zeal"), message);
     });
 
-    connect(m_application, &Core::Application::updateCheckDone, [this](const QString &version) {
+    connect(m_application, &Core::Application::updateCheckDone, [this](const QString &version, bool quiet) {
         if (version.isEmpty()) {
             QMessageBox::information(this, QStringLiteral("Zeal"),
-                                     tr("You are using the latest version."));
+                                     tr("You are using the latest version (%1).").arg(QCoreApplication::applicationVersion()));
             return;
         }
 
         // TODO: Remove this ugly workaround for #637.
         qApp->setQuitOnLastWindowClosed(false);
-        const int ret
+        if (quiet) {
+            qInfo() << tr("Zeal %1 is available.").arg(version);
+        } else {
+            const int ret
                 = QMessageBox::information(this, QStringLiteral("Zeal"),
                                            tr("Zeal <b>%1</b> is available. Open download page?").arg(version),
                                            QMessageBox::Yes | QMessageBox::Default,
                                            QMessageBox::No | QMessageBox::Escape);
-        qApp->setQuitOnLastWindowClosed(true);
+            qApp->setQuitOnLastWindowClosed(true);
 
-        if (ret == QMessageBox::Yes) {
-            QDesktopServices::openUrl(QUrl(QStringLiteral("https://zealdocs.org/download.html")));
+            if (ret == QMessageBox::Yes) {
+                QDesktopServices::openUrl(QUrl(QStringLiteral("https://zealdocs.org/download.html")));
+            }
         }
     });
 
