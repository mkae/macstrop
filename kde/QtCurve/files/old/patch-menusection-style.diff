diff --git gtk2/common/common.h gtk2/common/common.h
index 84cbc438bc3c7a56b97fb33110fd115c16ec5dea..ebbdbffa2dabb62a4e5e6c6f1066b41078b9050f 100644
--- gtk2/common/common.h
+++ gtk2/common/common.h
@@ -705,6 +705,7 @@ typedef struct {
     Strings          noMenuStripeApps;
     // for completeness:
     bool             onlyTicksInMenu;
+    bool             buttonStyleMenuSections;
 } Options;
 
 void qtcSetupGradient(Gradient *grad, EGradientBorder border, int numStops, ...);
diff --git gtk2/common/config_file.cpp gtk2/common/config_file.cpp
index d54c1b58ff4537affb2b4482a0d839ffae719d1a..4423ed0b3e40a664c3c89174a4bd3e2f27078acc 100644
--- gtk2/common/config_file.cpp
+++ gtk2/common/config_file.cpp
@@ -1355,6 +1355,7 @@ bool qtcReadConfig(const char *file, Options *opts, Options *defOpts)
             CFG_READ_BOOL(colorSliderMouseOver);
             CFG_READ_BOOL(menuIcons);
             CFG_READ_BOOL(onlyTicksInMenu);
+            CFG_READ_BOOL(buttonStyleMenuSections);
             CFG_READ_BOOL(forceAlternateLvCols);
             CFG_READ_BOOL(invertBotTab);
             CFG_READ_INT_BOOL(menubarHiding, HIDE_KEYBOARD);
@@ -1711,8 +1713,10 @@ void qtcDefaultSettings(Options *opts)
     opts->menuIcons=true;
 #ifdef __APPLE__
     opts->onlyTicksInMenu=true;
+    opts->buttonStyleMenuSections=false;
 #else
     opts->onlyTicksInMenu=false;
+    opts->buttonStyleMenuSections=true;
 #endif
     opts->forceAlternateLvCols=false;
     opts->invertBotTab=true;
diff --git qt4/common/common.h qt4/common/common.h
index f85951c01a6b8b0192f6467be97dbbead00cfa13..25b16275f6cc9ea643bfd5779f28a548b55d51c8 100644
--- qt4/common/common.h
+++ qt4/common/common.h
@@ -894,6 +894,7 @@ typedef struct {
     Strings          currentNonnativeMenubarApps;
 #endif
     bool             onlyTicksInMenu;
+    bool             buttonStyleMenuSections;
 } Options;
 
 void qtcSetupGradient(Gradient *grad, EGradientBorder border, int numStops, ...);
diff --git qt4/common/config_file.cpp qt4/common/config_file.cpp
index d51ad2f3f5c1ec145bd211e18df9e832e9861291..1083db06518d1d89c83be4a85939ca93cffdfb9f 100644
--- qt4/common/config_file.cpp
+++ qt4/common/config_file.cpp
@@ -1278,6 +1278,7 @@ bool qtcReadConfig(const QString &file, Options *opts, Options *defOpts, bool ch
             CFG_READ_BOOL(colorSliderMouseOver);
             CFG_READ_BOOL(menuIcons);
             CFG_READ_BOOL(onlyTicksInMenu);
+            CFG_READ_BOOL(buttonStyleMenuSections);
             CFG_READ_BOOL(forceAlternateLvCols);
             CFG_READ_BOOL(invertBotTab);
             CFG_READ_INT_BOOL(menubarHiding, HIDE_KEYBOARD);
@@ -1560,8 +1565,10 @@ void qtcDefaultSettings(Options *opts)
     opts->menuIcons=true;
 #ifdef Q_OS_MAC
     opts->onlyTicksInMenu=true;
+    opts->buttonStyleMenuSections=false;
 #else
     opts->onlyTicksInMenu=false;
+    opts->buttonStyleMenuSections=true;
 #endif
     opts->forceAlternateLvCols=false;
     opts->invertBotTab=true;
@@ -2290,6 +2297,7 @@ bool qtcWriteConfig(KConfig *cfg, const Options &opts, const Options &def, bool
         CFG_WRITE_ENTRY(colorSliderMouseOver);
         CFG_WRITE_ENTRY(menuIcons);
         CFG_WRITE_ENTRY(onlyTicksInMenu);
+        CFG_WRITE_ENTRY(buttonStyleMenuSections);
         CFG_WRITE_ENTRY(forceAlternateLvCols);
         CFG_WRITE_ENTRY_NUM(square);
         CFG_WRITE_ENTRY(invertBotTab);
diff --git qt4/config/qtcurveconfig.cpp qt4/config/qtcurveconfig.cpp
index 60b1084ad5a3522aa221140c25754f97457227c5..f04348439801e4cecb88bbee18b6de8151929cf9 100644
--- qt4/config/qtcurveconfig.cpp
+++ qt4/config/qtcurveconfig.cpp
@@ -1134,6 +1134,7 @@ QtCurveConfig::QtCurveConfig(QWidget *parent)
     connect(fadeLines, SIGNAL(toggled(bool)), SLOT(updateChanged()));
     connect(menuIcons, SIGNAL(toggled(bool)), SLOT(updateChanged()));
     connect(onlyTicksInMenu, SIGNAL(toggled(bool)), SLOT(updateChanged()));
+    connect(buttonStyleMenuSections, SIGNAL(toggled(bool)), SLOT(updateChanged()));
     connect(stdBtnSizes, SIGNAL(toggled(bool)), SLOT(updateChanged()));
     connect(forceAlternateLvCols, SIGNAL(toggled(bool)), SLOT(updateChanged()));
     connect(titlebarAlignment, SIGNAL(currentIndexChanged(int)), SLOT(updateChanged()));
@@ -3097,6 +3098,7 @@ void QtCurveConfig::setOptions(Options &opts)
     opts.fadeLines=fadeLines->isChecked();
     opts.menuIcons=menuIcons->isChecked();
     opts.onlyTicksInMenu=onlyTicksInMenu->isChecked();
+    opts.buttonStyleMenuSections=buttonStyleMenuSections->isChecked();
     opts.stdBtnSizes=stdBtnSizes->isChecked();
     opts.boldProgress=boldProgress->isChecked();
     opts.coloredTbarMo=coloredTbarMo->isChecked();
@@ -3351,6 +3353,7 @@ void QtCurveConfig::setWidgetOptions(const Options &opts)
     fadeLines->setChecked(opts.fadeLines);
     menuIcons->setChecked(opts.menuIcons);
     onlyTicksInMenu->setChecked(opts.onlyTicksInMenu);
+    buttonStyleMenuSections->setChecked(opts.buttonStyleMenuSections);
     stdBtnSizes->setChecked(opts.stdBtnSizes);
     boldProgress->setChecked(opts.boldProgress);
     boldProgress_false->setChecked(!opts.boldProgress);

diff --git qt4/config/qtcurveconfigbase.ui qt4/config/qtcurveconfigbase.ui
index f0f0bb4d2c35f455b7acf548900ba6af61615e6b..658d4a3d9380eef425921278890f9dd0086ea55a 100644
--- qt4/config/qtcurveconfigbase.ui
+++ qt4/config/qtcurveconfigbase.ui
@@ -3170,14 +3170,14 @@
          </property>
         </widget>
        </item>
-       <item row="5" column="0">
+       <item row="6" column="0">
         <widget class="QLabel" name="label_26">
          <property name="text">
           <string>Shade background by:</string>
          </property>
         </widget>
        </item>
-       <item row="5" column="1">
+       <item row="6" column="1">
         <widget class="KIntNumInput" name="lighterPopupMenuBgnd">
          <property name="toolTip">
           <string>&lt;p&gt;Defines the amount by which the popup menu background will be lightened (or darkened).</string>
@@ -3187,14 +3187,14 @@
          </property>
         </widget>
        </item>
-       <item row="6" column="0">
+       <item row="7" column="0">
         <widget class="QLabel" name="label_75">
          <property name="text">
           <string>Background appearance:</string>
          </property>
         </widget>
        </item>
-       <item row="6" column="1">
+       <item row="7" column="1">
         <layout class="QHBoxLayout" name="horizontalLayout_6">
          <item>
           <widget class="QComboBox" name="menuBgndAppearance">
@@ -3212,21 +3212,21 @@
          </item>
         </layout>
        </item>
-       <item row="7" column="1">
+       <item row="8" column="1">
         <widget class="QComboBox" name="menuBgndGrad">
          <property name="toolTip">
           <string>&lt;p&gt;Defines background gradient orientation.</string>
          </property>
         </widget>
        </item>
-       <item row="8" column="0">
+       <item row="9" column="0">
         <widget class="QLabel" name="label_xx">
          <property name="text">
           <string>Background image:</string>
          </property>
         </widget>
        </item>
-       <item row="8" column="1">
+       <item row="9" column="1">
         <layout class="QHBoxLayout" name="horizontalLayout_7">
          <item>
           <widget class="QComboBox" name="menuBgndImage">
@@ -3245,14 +3245,14 @@
          </item>
         </layout>
        </item>
-       <item row="9" column="0">
+       <item row="10" column="0">
         <widget class="QLabel" name="label_45">
          <property name="text">
           <string>Sub-menu delay:</string>
          </property>
         </widget>
        </item>
-       <item row="9" column="1">
+       <item row="10" column="1">
         <widget class="KIntNumInput" name="menuDelay">
          <property name="toolTip">
           <string>&lt;p&gt;Defines the delay before a sub-menu appears.</string>
@@ -3265,21 +3265,21 @@
          </property>
         </widget>
        </item>
-       <item row="10" column="0">
+       <item row="11" column="0">
         <widget class="QLabel" name="label_44">
          <property name="text">
           <string>Stripe:</string>
          </property>
         </widget>
        </item>
-       <item row="10" column="1">
+       <item row="11" column="1">
         <widget class="QComboBox" name="menuStripe">
          <property name="toolTip">
           <string>&lt;p&gt;Defines the coloration of the menu-stripe that will be drawn on the left of popup menus - but only if this option is not set to 'none'.</string>
          </property>
         </widget>
        </item>
-       <item row="11" column="1">
+       <item row="12" column="1">
         <widget class="KColorButton" name="customMenuStripeColor">
          <property name="enabled">
           <bool>false</bool>
@@ -3295,7 +3295,7 @@
          </property>
         </widget>
        </item>
-       <item row="12" column="1">
+       <item row="13" column="1">
         <widget class="QComboBox" name="menuStripeAppearance">
          <property name="enabled">
           <bool>false</bool>
@@ -3305,14 +3305,14 @@
          </property>
         </widget>
        </item>
-       <item row="13" column="0">
+       <item row="14" column="0">
         <widget class="QLabel" name="label_61">
          <property name="text">
           <string>Border popupmenus:</string>
          </property>
         </widget>
        </item>
-       <item row="13" column="1">
+       <item row="14" column="1">
         <widget class="QCheckBox" name="popupBorder">
          <property name="toolTip">
           <string>&lt;p&gt;If enabled, the whole popup menu will have a border, otherwise no border will be drawn. This option should be enabled unless you have also enabled shadows in your window manager.</string>
@@ -3322,20 +3322,33 @@
          </property>
         </widget>
        </item>
-       <item row="14" column="0">
+       <item row="15" column="0">
         <widget class="QLabel" name="label_97">
          <property name="text">
           <string>Use menubar colour settings:</string>
          </property>
         </widget>
        </item>
-       <item row="14" column="1">
+       <item row="15" column="1">
         <widget class="QCheckBox" name="shadePopupMenu">
          <property name="text">
           <string>Enabled</string>
          </property>
         </widget>
        </item>
+       <item row="5" column="1">
+        <widget class="QCheckBox" name="buttonStyleMenuSections">
+         <property name="toolTip">
+          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;When enabled, menu section titles look a bit like buttons.&lt;/p&gt;&lt;p&gt;When disabled, they are left-aligned under a separator line and use a bold, underlined typeface.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
+         </property>
+         <property name="text">
+          <string>Use button-like menu section headers</string>
+         </property>
+         <property name="checked">
+          <bool>true</bool>
+         </property>
+        </widget>
+       </item>
       </layout>
      </widget>
      <widget class="QWidget" name="page_22">

diff --git qt4/style/qtcurve.cpp qt4/style/qtcurve.cpp
index c675cc35537f50f72c6500fcb6a2ee6277f557fd..4493b06933abcaddaef99a8637c667c3d0bb8cac 100644
--- qt4/style/qtcurve.cpp
+++ qt4/style/qtcurve.cpp
@@ -6132,17 +6132,47 @@ void Style::drawControl(ControlElement element, const QStyleOption *option, QPai
 
                     if(!menuItem->text.isEmpty())
                     {
-                        QStyleOption opt;
-                        opt.rect = r.adjusted(2, 2, -3, -2);
-                        opt.state=State_Raised|State_Enabled|State_Horizontal;
-                        drawLightBevel(painter, opt.rect, &opt, widget, ROUNDED_ALL, getFill(&opt, use), use, true, WIDGET_NO_ETCH_BTN);
-
+                        int textAlignment;
                         QFont font(menuItem->font);
-
-                        font.setBold(true);
-                        painter->setFont(font);
-                        drawItemTextWithRole(painter, r, Qt::AlignHCenter | Qt::AlignVCenter,
-                                             palette, state&State_Enabled, menuItem->text, QPalette::Text);
+                        QRect textRect;
+                        if (opts.buttonStyleMenuSections) {
+                            QStyleOption opt;
+                            opt.rect = r.adjusted(2, 2, -3, -2);
+                            opt.state = State_Raised | State_Enabled | State_Horizontal;
+                            drawLightBevel(painter, opt.rect, &opt, widget, ROUNDED_ALL,
+                                           getFill(&opt, use), use, true,
+                                           WIDGET_NO_ETCH_BTN);
+
+                            font.setBold(true);
+                            painter->setFont(font);
+                            textAlignment = Qt::AlignHCenter | Qt::AlignVCenter;
+                            textRect = r;
+                        } else {
+                            font.setBold(true);
+                            font.setUnderline(true);
+#ifdef Q_OS_MACOS
+                            if (QGuiApplication::platformName() == QLatin1String("cocoa")) {
+                                font.setLetterSpacing(QFont::PercentageSpacing, 95);
+                            }
+#endif
+                            painter->setFont(font);
+                            QRect miRect(menuItem->rect.left() + 5 +
+                                         (!reverse && doStripe ? stripeWidth : 0),
+                                         menuItem->rect.center().y() - painter->fontMetrics().ascent() / 2 - 5,
+                                         menuItem->rect.width() -
+                                         (9 + (doStripe ? stripeWidth : 0)), 1);
+                            QColor lineCol = use[MENU_SEP_SHADE];
+                            if (miRect.y() >= rx.height() / 2) {
+                                drawFadedLine(painter, miRect, lineCol, reverse,
+                                          !reverse, true);
+                            }
+                            textAlignment = Qt::AlignLeft | Qt::AlignBottom;
+                            textRect = r.adjusted(5, 5, -5, -5);
+                        }
+                        drawItemTextWithRole(painter, textRect,
+                                             textAlignment,
+                                             palette, state & State_Enabled,
+                                             menuItem->text, QPalette::Text);
                     }
                     else
                     {
@@ -9529,7 +9559,15 @@ QSize Style::sizeFromContents(ContentsType type, const QStyleOption *option, con
                 int maxpmw = mi->maxIconWidth,
                     tabSpacing = 20;
 
-                if (mi->text.contains(QLatin1Char('\t')))
+                if (!opts.buttonStyleMenuSections && QStyleOptionMenuItem::Separator == mi->menuItemType && !mi->text.isEmpty())
+                {
+                    QFont fontBold = mi->font;
+                    fontBold.setBold(true);
+                    QFontMetrics fmBold(fontBold);
+                    // _set_ w, it will have been initialised to something inappropriately small
+                    w = fmBold.width(mi->text);
+                }
+                else if (mi->text.contains(QLatin1Char('\t')))
                     w += tabSpacing;
                 else if (mi->menuItemType == QStyleOptionMenuItem::SubMenu)
                     w += 2 * windowsArrowHMargin;
@@ -9544,8 +9582,16 @@ QSize Style::sizeFromContents(ContentsType type, const QStyleOption *option, con
                     w += fmBold.width(mi->text) - fm.width(mi->text);
                 }
 
-                int checkcol = qMax<int>(maxpmw, windowsCheckMarkWidth); // Windows always shows a check column
-                w += checkcol + windowsRightBorder + 10;
+                if (QStyleOptionMenuItem::Separator != mi->menuItemType || opts.buttonStyleMenuSections)
+                {
+                    int checkcol = qMax<int>(maxpmw, windowsCheckMarkWidth); // Windows always shows a check column
+                    w += checkcol + windowsRightBorder;
+                }
+                else
+                {
+                    w += 5;
+                }
+                w += 10;
                 newSize.setWidth(w);
                 // ....
 
diff --git qt5/style/qtcurve_api.cpp qt5/style/qtcurve_api.cpp
index 642022a35c655a10a47b4ff5747ada32c7cbe55e..ce7e41aa7cdc7ded1976c572518cf6204e5b1f11 100644
--- qt5/style/qtcurve_api.cpp
+++ qt5/style/qtcurve_api.cpp
@@ -3043,19 +3043,45 @@ Style::drawControl(ControlElement element, const QStyleOption *option,
                                       opts.menuStripeAppearance, WIDGET_OTHER);
 
                 if (!menuItem->text.isEmpty()) {
-                    QStyleOption opt;
-                    opt.rect = r.adjusted(2, 2, -3, -2);
-                    opt.state = State_Raised | State_Enabled | State_Horizontal;
-                    drawLightBevel(painter, opt.rect, &opt, widget, ROUNDED_ALL,
-                                   getFill(&opt, use), use, true,
-                                   WIDGET_NO_ETCH_BTN);
-
+                    int textAlignment;
                     QFont font(menuItem->font);
-
-                    font.setBold(true);
-                    painter->setFont(font);
-                    drawItemTextWithRole(painter, r,
-                                         Qt::AlignHCenter | Qt::AlignVCenter,
+                    QRect textRect;
+                    if (opts.buttonStyleMenuSections) {
+                        QStyleOption opt;
+                        opt.rect = r.adjusted(2, 2, -3, -2);
+                        opt.state = State_Raised | State_Enabled | State_Horizontal;
+                        drawLightBevel(painter, opt.rect, &opt, widget, ROUNDED_ALL,
+                                       getFill(&opt, use), use, true,
+                                       WIDGET_NO_ETCH_BTN);
+
+                        font.setBold(true);
+                        painter->setFont(font);
+                        textAlignment = Qt::AlignHCenter | Qt::AlignVCenter;
+                        textRect = r;
+                    } else {
+                        font.setBold(true);
+                        font.setUnderline(true);
+#ifdef Q_OS_MACOS
+                        if (QGuiApplication::platformName() == QLatin1String("cocoa")) {
+                            font.setLetterSpacing(QFont::PercentageSpacing, 95);
+                        }
+#endif
+                        painter->setFont(font);
+                        QRect miRect(menuItem->rect.left() + 5 +
+                                     (!reverse && doStripe ? stripeWidth : 0),
+                                     menuItem->rect.center().y() - painter->fontMetrics().ascent() / 2 - 5,
+                                     menuItem->rect.width() -
+                                     (9 + (doStripe ? stripeWidth : 0)), 1);
+                        QColor lineCol = use[MENU_SEP_SHADE];
+                        if (miRect.y() >= rx.height() / 2) {
+                            drawFadedLine(painter, miRect, lineCol, reverse,
+                                      !reverse, true);
+                        }
+                        textAlignment = Qt::AlignLeft | Qt::AlignBottom;
+                        textRect = r.adjusted(5, 5, -5, -5);
+                    }
+                    drawItemTextWithRole(painter, textRect,
+                                         textAlignment,
                                          palette, state & State_Enabled,
                                          menuItem->text, QPalette::Text);
                 } else {
@@ -6287,7 +6313,15 @@ QSize Style::sizeFromContents(ContentsType type, const QStyleOption *option, con
             int maxpmw = mi->maxIconWidth,
                 tabSpacing = 20;
 
-            if (mi->text.contains(QLatin1Char('\t')))
+            if (!opts.buttonStyleMenuSections && QStyleOptionMenuItem::Separator == mi->menuItemType && !mi->text.isEmpty())
+            {
+                QFont fontBold = mi->font;
+                fontBold.setBold(true);
+                QFontMetrics fmBold(fontBold);
+                // _set_ w, it will have been initialised to something inappropriately small
+                w = fmBold.width(mi->text);
+            }
+            else if (mi->text.contains(QLatin1Char('\t')))
                 w += tabSpacing;
             else if (mi->menuItemType == QStyleOptionMenuItem::SubMenu)
                 w += 2 * windowsArrowHMargin;
@@ -6302,8 +6336,16 @@ QSize Style::sizeFromContents(ContentsType type, const QStyleOption *option, con
                 w += fmBold.width(mi->text) - fm.width(mi->text);
             }
 
-            int checkcol = qMax<int>(maxpmw, windowsCheckMarkWidth); // Windows always shows a check column
-            w += checkcol + windowsRightBorder + 10;
+            if (QStyleOptionMenuItem::Separator != mi->menuItemType || opts.buttonStyleMenuSections)
+            {
+                int checkcol = qMax<int>(maxpmw, windowsCheckMarkWidth); // Windows always shows a check column
+                w += checkcol + windowsRightBorder;
+            }
+            else
+            {
+                w += 5;
+            }
+            w += 10;
             newSize.setWidth(w);
             // ....
 
diff --git qt5/config/qtcurveconfigbase.ui qt5/config/qtcurveconfigbase.ui
index fde60ba942a83ddbd2221dc6184a83571da74af3..b4b2cf495e01823204e32af0e23c240ace165ee0 100644
--- qt5/config/qtcurveconfigbase.ui
+++ qt5/config/qtcurveconfigbase.ui
@@ -3234,14 +3234,14 @@
          </property>
         </widget>
        </item>
-       <item row="5" column="0">
+       <item row="6" column="0">
         <widget class="QLabel" name="label_26">
          <property name="text">
           <string>Shade background by:</string>
          </property>
         </widget>
        </item>
-       <item row="5" column="1">
+       <item row="6" column="1">
         <widget class="QSpinBox" name="lighterPopupMenuBgnd">
          <property name="toolTip">
           <string>&lt;p&gt;Defines the amount by which the popup menu background will be lightened (or darkened).</string>
@@ -3251,14 +3251,14 @@
          </property>
         </widget>
        </item>
-       <item row="6" column="0">
+       <item row="7" column="0">
         <widget class="QLabel" name="label_75">
          <property name="text">
           <string>Background appearance:</string>
          </property>
         </widget>
        </item>
-       <item row="6" column="1">
+       <item row="7" column="1">
         <layout class="QHBoxLayout" name="horizontalLayout_6">
          <item>
           <widget class="QComboBox" name="menuBgndAppearance">
@@ -3276,21 +3276,21 @@
          </item>
         </layout>
        </item>
-       <item row="7" column="1">
+       <item row="8" column="1">
         <widget class="QComboBox" name="menuBgndGrad">
          <property name="toolTip">
           <string>&lt;p&gt;Defines background gradient orientation.</string>
          </property>
         </widget>
        </item>
-       <item row="7" column="0">
+       <item row="8" column="0">
         <widget class="QLabel" name="label_xx">
          <property name="text">
           <string>Background image:</string>
          </property>
         </widget>
        </item>
-       <item row="8" column="1">
+       <item row="9" column="1">
         <layout class="QHBoxLayout" name="horizontalLayout_7">
          <item>
           <widget class="QComboBox" name="menuBgndImage">
@@ -3309,14 +3309,14 @@
          </item>
         </layout>
        </item>
-       <item row="9" column="0">
+       <item row="10" column="0">
         <widget class="QLabel" name="label_45">
          <property name="text">
           <string>Sub-menu delay:</string>
          </property>
         </widget>
        </item>
-       <item row="9" column="1">
+       <item row="10" column="1">
         <widget class="QSpinBox" name="menuDelay">
          <property name="toolTip">
           <string>&lt;p&gt;Defines the delay before a sub-menu appears.</string>
@@ -3329,21 +3329,21 @@
          </property>
         </widget>
        </item>
-       <item row="10" column="0">
+       <item row="11" column="0">
         <widget class="QLabel" name="label_44">
          <property name="text">
           <string>Stripe:</string>
          </property>
         </widget>
        </item>
-       <item row="10" column="1">
+       <item row="11" column="1">
         <widget class="QComboBox" name="menuStripe">
          <property name="toolTip">
           <string>&lt;p&gt;Defines the coloration of the menu-stripe that will be drawn on the left of popup menus - but only if this option is not set to 'none'.</string>
          </property>
         </widget>
        </item>
-       <item row="11" column="1">
+       <item row="12" column="1">
         <widget class="KColorButton" name="customMenuStripeColor">
          <property name="enabled">
           <bool>false</bool>
@@ -3359,7 +3359,7 @@
          </property>
         </widget>
        </item>
-       <item row="12" column="1">
+       <item row="13" column="1">
         <widget class="QComboBox" name="menuStripeAppearance">
          <property name="enabled">
           <bool>false</bool>
@@ -3369,14 +3369,14 @@
          </property>
         </widget>
        </item>
-       <item row="13" column="0">
+       <item row="14" column="0">
         <widget class="QLabel" name="label_61">
          <property name="text">
           <string>Border popupmenus:</string>
          </property>
         </widget>
        </item>
-       <item row="13" column="1">
+       <item row="14" column="1">
         <widget class="QCheckBox" name="popupBorder">
          <property name="toolTip">
           <string>&lt;p&gt;If enabled, the whole popup menu will have a border, otherwise no border will be drawn. This option should be enabled unless you have also enabled shadows in your window manager.</string>
@@ -3386,20 +3386,33 @@
          </property>
         </widget>
        </item>
-       <item row="14" column="0">
+       <item row="15" column="0">
         <widget class="QLabel" name="label_97">
          <property name="text">
           <string>Use menubar colour settings:</string>
          </property>
         </widget>
        </item>
-       <item row="14" column="1">
+       <item row="15" column="1">
         <widget class="QCheckBox" name="shadePopupMenu">
          <property name="text">
           <string>Enabled</string>
          </property>
         </widget>
        </item>
+       <item row="5" column="1">
+        <widget class="QCheckBox" name="buttonStyleMenuSections">
+         <property name="toolTip">
+          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;When enabled, menu section titles look a bit like buttons.&lt;/p&gt;&lt;p&gt;When disabled, they are left-aligned under a separator line and use a bold, underlined typeface.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
+         </property>
+         <property name="text">
+          <string>Use button-like menu section headers</string>
+         </property>
+         <property name="checked">
+          <bool>true</bool>
+         </property>
+        </widget>
+       </item>
       </layout>
      </widget>
      <widget class="QWidget" name="page_22">
@@ -4487,15 +4500,15 @@
  <pixmapfunction>qPixmapFromMimeSource</pixmapfunction>
  <customwidgets>
   <customwidget>
-   <class>KColorButton</class>
-   <extends>QPushButton</extends>
-   <header>kcolorbutton.h</header>
-  </customwidget>
-  <customwidget>
    <class>KLineEdit</class>
    <extends>QLineEdit</extends>
    <header>klineedit.h</header>
   </customwidget>
+  <customwidget>
+   <class>KColorButton</class>
+   <extends>QPushButton</extends>
+   <header>kcolorbutton.h</header>
+  </customwidget>
  </customwidgets>
  <tabstops>
   <tabstop>stackList</tabstop>
diff --git qt5/common/common.h qt5/common/common.h
index d1cbd85532af750caf9ac684ccdf7d31761a208e..5fbbfac09a666389ce6645aebeda158e170eaeaf 100644
--- qt5/common/common.h
+++ qt5/common/common.h
@@ -891,6 +891,7 @@ typedef struct {
     QFont            tickFont;
     QString          menuTick;
     int              fontTickWidth;
+    bool             buttonStyleMenuSections;
 } Options;
 
 void qtcSetupGradient(Gradient *grad, EGradientBorder border, int numStops, ...);
diff --git qt5/common/config_file.cpp qt5/common/config_file.cpp
index e5c6541a52facdcd0bbee7d27e53cfdc20df9ecf..802f356992b044ec752a4dc9519fab42c2e6c17e 100644
--- qt5/common/config_file.cpp
+++ qt5/common/config_file.cpp
@@ -1284,6 +1284,7 @@ bool qtcReadConfig(const QString &file, Options *opts, Options *defOpts, bool ch
             CFG_READ_BOOL(colorSliderMouseOver);
             CFG_READ_BOOL(menuIcons);
             CFG_READ_BOOL(onlyTicksInMenu);
+            CFG_READ_BOOL(buttonStyleMenuSections);
             CFG_READ_BOOL(forceAlternateLvCols);
             CFG_READ_BOOL(invertBotTab);
             CFG_READ_INT_BOOL(menubarHiding, HIDE_KEYBOARD);
@@ -1629,8 +1628,10 @@ void qtcDefaultSettings(Options *opts)
     opts->titlebarButtonAppearance=APPEARANCE_GRADIENT;
 #ifdef Q_OS_MACOS
     opts->onlyTicksInMenu=true;
+    opts->buttonStyleMenuSections=false;
 #else
     opts->onlyTicksInMenu=false;
+    opts->buttonStyleMenuSections=true;
 #endif
 
     /* Read system config file... */
@@ -2302,6 +2303,7 @@ bool qtcWriteConfig(KConfig *cfg, const Options &opts, const Options &def, bool
         CFG_WRITE_ENTRY(colorSliderMouseOver);
         CFG_WRITE_ENTRY(menuIcons);
         CFG_WRITE_ENTRY(onlyTicksInMenu);
+        CFG_WRITE_ENTRY(buttonStyleMenuSections);
         CFG_WRITE_ENTRY(forceAlternateLvCols);
         CFG_WRITE_ENTRY_NUM(square);
         CFG_WRITE_ENTRY(invertBotTab);
diff --git qt5/config/qtcurveconfig.cpp qt5/config/qtcurveconfig.cpp
index 1afdfbfe5dfe0ad23701f24956575c55ea16ab42..fe14c26e012e1f1b8382d3dfb82be493aad66275 100644
--- qt5/config/qtcurveconfig.cpp
+++ qt5/config/qtcurveconfig.cpp
@@ -1036,7 +1036,7 @@ QtCurveConfig::QtCurveConfig(QWidget *parent)
                 dwtTextAsPerTitleBar, dwtEffectAsPerTitleBar, dwtRoundTopOnly,
                 smallRadio, gtkComboMenus, mapKdeIcons, colorMenubarMouseOver,
                 useHighlightForMenu, gbLabel_bold, gbLabel_centred, fadeLines,
-                menuIcons, onlyTicksInMenu, stdBtnSizes, forceAlternateLvCols, boldProgress,
+                menuIcons, onlyTicksInMenu, buttonStyleMenuSections, stdBtnSizes, forceAlternateLvCols, boldProgress,
                 coloredTbarMo, borderSelection, squareEntry, squareLvSelection,
                 squareScrollViews, squareFrame, squareTabFrame, squareSlider,
                 squareScrollbarSlider, squareWindows, squareTooltips,
@@ -3061,6 +3066,7 @@ void QtCurveConfig::setOptions(Options &opts)
     opts.fadeLines=fadeLines->isChecked();
     opts.menuIcons=menuIcons->isChecked();
     opts.onlyTicksInMenu=onlyTicksInMenu->isChecked();
+    opts.buttonStyleMenuSections=buttonStyleMenuSections->isChecked();
     opts.stdBtnSizes=stdBtnSizes->isChecked();
     opts.boldProgress=boldProgress->isChecked();
     opts.coloredTbarMo=coloredTbarMo->isChecked();
@@ -3318,6 +3324,7 @@ void QtCurveConfig::setWidgetOptions(const Options &opts)
     fadeLines->setChecked(opts.fadeLines);
     menuIcons->setChecked(opts.menuIcons);
     onlyTicksInMenu->setChecked(opts.onlyTicksInMenu);
+    buttonStyleMenuSections->setChecked(opts.buttonStyleMenuSections);
     stdBtnSizes->setChecked(opts.stdBtnSizes);
     boldProgress->setChecked(opts.boldProgress);
     boldProgress_false->setChecked(!opts.boldProgress);
@@ -3699,6 +3706,7 @@ bool QtCurveConfig::settingsChanged(const Options &opts)
          fadeLines->isChecked()!=opts.fadeLines ||
          menuIcons->isChecked()!=opts.menuIcons ||
          onlyTicksInMenu->isChecked()!=opts.onlyTicksInMenu ||
+         buttonStyleMenuSections->isChecked()!=opts.buttonStyleMenuSections ||
          stdBtnSizes->isChecked()!=opts.stdBtnSizes ||
          boldProgress->isChecked()!=opts.boldProgress ||
          coloredTbarMo->isChecked()!=opts.coloredTbarMo ||
