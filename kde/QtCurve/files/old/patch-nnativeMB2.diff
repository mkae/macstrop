diff --git a/qt5/common/common.h b/qt5/common/common.h
index e991810..d1cbd85 100644
--- a/qt5/common/common.h
+++ b/qt5/common/common.h
@@ -880,6 +880,12 @@ typedef struct {
                      windowDragWhiteList,
                      windowDragBlackList,
                      nonnativeMenubarApps;
+#ifdef Q_OS_MACOS
+    // list of apps that have been forced to use a non-native menubar during this process lifetime
+    // should only contain the name of the running executable.
+    // NOT saved to disk!
+    Strings          currentNonnativeMenubarApps;
+#endif
     bool             onlyTicksInMenu;
     // these are runtime constants for the user-option "onlyTicksInMenu":
     QFont            tickFont;
diff --git a/qt5/style/qtcurve.cpp b/qt5/style/qtcurve.cpp
index 7c0cb27..646679c 100644
--- a/qt5/style/qtcurve.cpp
+++ b/qt5/style/qtcurve.cpp
@@ -385,6 +384,7 @@ void Style::init(bool initial)
 #ifdef Q_OS_MACOS
             if (opts.nonnativeMenubarApps.contains("kde") || opts.nonnativeMenubarApps.contains(appName)) {
                 QCoreApplication::setAttribute(Qt::AA_DontUseNativeMenuBar);
+                opts.currentNonnativeMenubarApps << appName;
             }
 #endif
             connectDBus();
diff --git a/qt5/style/qtcurve_api.cpp b/qt5/style/qtcurve_api.cpp
index c10837e..7b8e755 100644
--- a/qt5/style/qtcurve_api.cpp
+++ b/qt5/style/qtcurve_api.cpp
@@ -1135,9 +1135,16 @@ bool Style::eventFilter(QObject *object, QEvent *event)
                         mnb->setNativeMenuBar(false);
                         mnb->setHidden(false);
                         mnb->setVisible(true);
+                        if (!opts.currentNonnativeMenubarApps.contains(appName)) {
+                            opts.currentNonnativeMenubarApps << appName;
+                        }
                     }
-                } else if (QGuiApplication::platformName().contains(QLatin1String("cocoa"))) {
+                } else if ((QGuiApplication::platformName() == QLatin1String("cocoa"))
+                        && opts.currentNonnativeMenubarApps.contains(appName)) {
+                    // only force the native menubar on applications that were forced
+                    // to use something else before!
                     static_cast<QMenuBar*>(object)->setNativeMenuBar(true);
+                    opts.currentNonnativeMenubarApps.remove(appName);
                 }
 #endif
         }
diff --git a/qt4/common/common.h b/qt4/common/common.h
index 6f1945f..f85951c 100644
--- a/qt4/common/common.h
+++ b/qt4/common/common.h
@@ -887,6 +887,12 @@ typedef struct {
                      windowDragWhiteList,
                      windowDragBlackList,
                      nonnativeMenubarApps;
+#ifdef Q_OS_MAC
+    // list of apps that have been forced to use a non-native menubar during this process lifetime
+    // should only contain the name of the running executable.
+    // NOT saved to disk!
+    Strings          currentNonnativeMenubarApps;
+#endif
     bool             onlyTicksInMenu;
 } Options;
 
