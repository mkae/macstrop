diff --git qt5/CMakeLists.txt qt5/CMakeLists.txt
index 0b0cdf69..930c9199 100644
--- qt5/CMakeLists.txt
+++ qt5/CMakeLists.txt
@@ -69,12 +69,14 @@ if(ENABLE_QT5)
       Archive
       Config
       ConfigWidgets
+      FrameworkIntegration
       I18n
       KDELibs4Support
       KIO
       GuiAddons
       IconThemes
       WidgetsAddons
+      WindowSystem
       XmlGui)
 
     add_definitions(-DQTC_QT5_ENABLE_KDE)
diff --git qt5/config/CMakeLists.txt qt5/config/CMakeLists.txt
index 2453f640..6900e4fc 100644
--- qt5/config/CMakeLists.txt
+++ qt5/config/CMakeLists.txt
@@ -56,7 +56,9 @@ target_link_libraries(kstyle_qtcurve5_config
   KF5::KDELibs4Support
   KF5::KIOWidgets
   KF5::WidgetsAddons
-  KF5::XmlGui)
+  KF5::XmlGui
+  KF5::Style
+  KF5::WindowSystem)
 target_link_libraries(kstyle_qtcurve5_config qtcurve-utils)
 
 install(TARGETS kstyle_qtcurve5_config DESTINATION ${_Qt5_PLUGIN_INSTALL_DIR})
diff --git qt5/style/CMakeLists.txt qt5/style/CMakeLists.txt
index 9529a7f2..d6dda8d8 100644
--- qt5/style/CMakeLists.txt
+++ qt5/style/CMakeLists.txt
@@ -73,6 +73,8 @@ if(QTC_QT5_ENABLE_KDE)
     KF5::GuiAddons
     KF5::IconThemes
     KF5::KDELibs4Support
+    KF5::Style
+    KF5::WindowSystem
   )
 endif()
 install(TARGETS qtcurve-qt5 LIBRARY DESTINATION ${QTCURVE_STYLE_DIR})
diff --git qt5/style/qtcurve.cpp qt5/style/qtcurve.cpp
index 993a96fd..e45af137 100644
--- qt5/style/qtcurve.cpp
+++ qt5/style/qtcurve.cpp
@@ -92,6 +92,7 @@
 #include <KDE/KAboutApplicationDialog>
 // KF5 headers
 #include <KConfigCore/KSharedConfig>
+#include <KWindowSystem/KWindowSystem>
 #endif
 
 #include <qtcurve-utils/color.h>
@@ -317,7 +318,7 @@ static void parseWindowLine(const QString &line, QList<int> &data)
 }
 #endif
 
-Style::Style(QObject *parent) :
+Style::Style() :
     m_popupMenuCols(0L),
     m_sliderCols(0L),
     m_defBtnCols(0L),
@@ -388,6 +389,9 @@ void Style::init(bool initial)
             }
 #endif
             connectDBus();
+#ifdef QTC_QT5_ENABLE_KDE
+            connect(KWindowSystem::self(), &KWindowSystem::compositingChanged, this, &Style::compositingToggled);
+#endif
         }
     }
 
@@ -663,14 +667,14 @@ void Style::connectDBus()
     auto bus = QDBusConnection::sessionBus();
     bus.connect(QString(), "/KGlobalSettings", "org.kde.KGlobalSettings",
                 "notifyChange", this, SLOT(kdeGlobalSettingsChange(int, int)));
+#ifndef QTC_QT5_ENABLE_KDE
     bus.connect("org.kde.kwin", "/KWin", "org.kde.KWin", "compositingToggled",
                 this, SLOT(compositingToggled()));
+#endif
 
     QString arg0 = qApp? qApp->arguments()[0] : QString();
     if (!qApp || (arg0 != "kwin" && arg0 != "kwin_x11" && arg0 != "kwin_wayland")) {
         bus.connect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
-                "themeChanged", this, SLOT(borderSizesChanged()));
-        bus.connect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
                     "borderSizesChanged", this, SLOT(borderSizesChanged()));
         if (opts.menubarHiding & HIDE_KWIN)
             bus.connect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
@@ -694,14 +698,14 @@ void Style::disconnectDBus()
     bus.disconnect(QString(), "/KGlobalSettings", "org.kde.KGlobalSettings",
                    "notifyChange",
                    this, SLOT(kdeGlobalSettingsChange(int, int)));
+#ifndef QTC_QT5_ENABLE_KDE
     bus.disconnect("org.kde.kwin", "/KWin", "org.kde.KWin", "compositingToggled",
                    this, SLOT(compositingToggled()));
+#endif
 
     QString arg0 = qApp? qApp->arguments()[0] : QString();
     if (!qApp || (arg0 != "kwin" && arg0 != "kwin_x11" && arg0 != "kwin_wayland")) {
         bus.disconnect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
-                "themeChanged", this, SLOT(borderSizesChanged()));
-        bus.disconnect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
                     "borderSizesChanged", this, SLOT(borderSizesChanged()));
         if (opts.menubarHiding & HIDE_KWIN)
             bus.disconnect("org.kde.kwin", "/QtCurve", "org.kde.QtCurve",
@@ -1107,7 +1111,7 @@ QIcon Style::standardIcon(StandardPixmap pix, const QStyleOption *option,
         break;
     }
     // TODO ?
-    return QCommonStyle::standardIcon(pix, option, widget);
+    return ParentStyleClass::standardIcon(pix, option, widget);
 }
 
 int Style::layoutSpacing(QSizePolicy::ControlType control1,
@@ -1128,7 +1132,7 @@ Style::drawItemTextWithRole(QPainter *painter, const QRect &rect, int flags,
                             const QString &text,
                             QPalette::ColorRole textRole) const
 {
-    QCommonStyle::drawItemText(painter, rect, flags, pal,
+    ParentStyleClass::drawItemText(painter, rect, flags, pal,
                                enabled, text, textRole);
 }
 
@@ -2888,6 +2900,18 @@ void Style::drawEntryField(QPainter *p, const QRect &rx,  const QWidget *widget,
 
 void Style::drawMenuItem(QPainter *p, const QRect &r, const QStyleOption *option, MenuItemType type, int round, const QColor *cols) const
 {
+    QColor altCols[TOTAL_SHADES+1];
+    if (theThemedApp == APP_KWIN) {
+        QWidget *w = qobject_cast<QWidget*>(option->styleObject);
+        if (w && w->palette().color(QPalette::Active, QPalette::Background)
+                != QApplication::palette().color(QPalette::Active, QPalette::Background)) {
+//             qWarning() << "drawMenuItem: widget" << w << "bgCol" << w->palette().color(QPalette::Active, QPalette::Background)
+//                 << "differs from app bgCol" << QApplication::palette().color(QPalette::Active, QPalette::Background);
+            shadeColors(w->palette().color(QPalette::Active, QPalette::Background), altCols);
+            cols = altCols;
+        }
+    }
+
     int fill=opts.useHighlightForMenu && ((MENU_BAR!=type) || m_highlightCols==cols || APP_OPENOFFICE==theThemedApp) ? ORIGINAL_SHADE : 4,
         border=opts.borderMenuitems ? 0 : fill;
 
diff --git qt5/style/qtcurve.h qt5/style/qtcurve.h
index bee23bd5..170bdd25 100644
--- qt5/style/qtcurve.h
+++ qt5/style/qtcurve.h
@@ -37,6 +37,10 @@
 #ifdef QTC_QT5_ENABLE_KDE
 #include <KConfigCore/KSharedConfig>
 #include <KConfigCore/KConfigGroup>
+#include <KStyle/KStyle>
+using ParentStyleClass = KStyle;
+#else
+using ParentStyleClass = QCommonStyle;
 #endif
 
 typedef qulonglong QtcKey;
@@ -59,7 +63,7 @@ class BlurHelper;
 class ShortcutHandler;
 class ShadowHelper;
 
-class Style: public QCommonStyle {
+class Style: public ParentStyleClass {
     Q_OBJECT
     Q_CLASSINFO("X-KDE-CustomElements", "true")
 public:
@@ -112,7 +116,7 @@ public:
         ICN_UNSHADE
     };
 
-    explicit Style(QObject *parent=0);
+    explicit Style();
     virtual ~Style();
 
     void polish(QApplication *app) override;
diff --git qt5/style/qtcurve_api.cpp qt5/style/qtcurve_api.cpp
index 53201fcc..2f9d4627 100644
--- qt5/style/qtcurve_api.cpp
+++ qt5/style/qtcurve_api.cpp
@@ -90,9 +90,9 @@ Style::polish(QApplication *app)
 {
     // appName = getFile(app->arguments()[0]);
 
-    if (appName == "kwin") {
+    if (appName == "kwin" || appName == "kwin_x11" || appName == "kwin_wayland") {
         theThemedApp = APP_KWIN;
-    } else if (appName == "systemsettings") {
+    } else if (appName == "systemsettings" || appName == "systemsettings5") {
         theThemedApp = APP_SYSTEMSETTINGS;
     } else if ("plasma" == appName || appName.startsWith("plasma-")) {
         theThemedApp = APP_PLASMA;
@@ -160,7 +160,7 @@ Style::polish(QApplication *app)
         opts.menuBgndAppearance = APPEARANCE_FLAT;
     }
 
-    QCommonStyle::polish(app);
+    ParentStyleClass::polish(app);
     if (opts.hideShortcutUnderline) {
         app->installEventFilter(m_shortcutHandler);
     }
@@ -791,7 +791,7 @@ Style::unpolish(QApplication *app)
 {
     if (opts.hideShortcutUnderline)
         app->removeEventFilter(m_shortcutHandler);
-    QCommonStyle::unpolish(app);
+    ParentStyleClass::unpolish(app);
 }
 
 void Style::unpolish(QWidget *widget)
@@ -1414,7 +1414,7 @@ bool Style::eventFilter(QObject *object, QEvent *event)
         break;
     }
 
-    return QCommonStyle::eventFilter(object, event);
+    return ParentStyleClass::eventFilter(object, event);
 }
 
 void Style::timerEvent(QTimerEvent *event)
@@ -1443,7 +1443,7 @@ Style::pixelMetric(PixelMetric metric, const QStyleOption *option,
     case PM_ToolTipLabelFrameWidth:
         if (opts.round != ROUND_NONE && !(opts.square & SQUARE_TOOLTIPS))
             return 3;
-        return QCommonStyle::pixelMetric(metric, option, widget);
+        return ParentStyleClass::pixelMetric(metric, option, widget);
     case PM_MdiSubWindowFrameWidth:
         return 3;
     case PM_DockWidgetTitleMargin:
@@ -1647,7 +1647,7 @@ Style::pixelMetric(PixelMetric metric, const QStyleOption *option,
                 ++size;
             return size;
         }
-        return QCommonStyle::pixelMetric(metric, option, widget);
+        return ParentStyleClass::pixelMetric(metric, option, widget);
     case PM_SliderLength: {
         int glowSize = (opts.buttonEffect != EFFECT_NONE &&
                         opts.coloredMouseOver == MO_GLOW ? 2 : 0);
@@ -1724,7 +1724,7 @@ Style::pixelMetric(PixelMetric metric, const QStyleOption *option,
             !styleOptCast<QStyleOptionTab>(option)) {
             return 10;
         }
-        return QCommonStyle::pixelMetric(metric, option, widget);
+        return ParentStyleClass::pixelMetric(metric, option, widget);
     case PM_TabBarBaseOverlap:
         if (qtcCheckKDEType(widget, QTabBar) &&
             !styleOptCast<QStyleOptionTab>(option)) {
@@ -1732,7 +1732,7 @@ Style::pixelMetric(PixelMetric metric, const QStyleOption *option,
         }
         // Fall through!
     default:
-        return QCommonStyle::pixelMetric(metric, option, widget);
+        return ParentStyleClass::pixelMetric(metric, option, widget);
     }
 }
 
@@ -1746,7 +1746,7 @@ Style::styleHint(StyleHint hint, const QStyleOption *option,
     case SH_Menu_Mask:
         if ((SH_ToolTip_Mask == hint && (opts.square & SQUARE_TOOLTIPS)) ||
             (SH_Menu_Mask == hint && (opts.square & SQUARE_POPUP_MENUS))) {
-            return QCommonStyle::styleHint(hint, option, widget, returnData);
+            return ParentStyleClass::styleHint(hint, option, widget, returnData);
         } else {
             if (!Utils::hasAlphaChannel(widget) &&
                 (!widget || widget->isWindow())) {
@@ -1931,13 +1931,13 @@ Style::styleHint(StyleHint hint, const QStyleOption *option,
             }
         }
 #endif
-        return QCommonStyle::styleHint(hint, option, widget, returnData);
+        return ParentStyleClass::styleHint(hint, option, widget, returnData);
     }
 }
 
 QPalette Style::standardPalette() const
 {
-    return QCommonStyle::standardPalette();
+    return ParentStyleClass::standardPalette();
 }
 
 static bool initFontTickData(Options &opts, QFont font, const QWidget *widget=0)
@@ -2094,7 +2094,7 @@ Style::drawPrimitive(PrimitiveElement element, const QStyleOption *option,
     painter->save();
     if (!drawFunc ||
         qtcUnlikely(!(this->*drawFunc)(element, option, painter, widget))) {
-        QCommonStyle::drawPrimitive(element, option, painter, widget);
+        ParentStyleClass::drawPrimitive(element, option, painter, widget);
     }
     painter->restore();
 }
@@ -4437,12 +4437,12 @@ Style::drawControl(ControlElement element, const QStyleOption *option,
                         drawBevelGradient(shade(palette.background().color(), TO_FACTOR(opts.crHighlight)), painter,
                                           highlightRect, true, false, opts.selectionAppearance, WIDGET_SELECTION);
                 }
-                QCommonStyle::drawControl(element, &copy, painter, widget);
+                ParentStyleClass::drawControl(element, &copy, painter, widget);
                 break;
             }
         // Fall through!
     default:
-        QCommonStyle::drawControl(element, option, painter, widget);
+        ParentStyleClass::drawControl(element, option, painter, widget);
     }
 }
 
@@ -6045,7 +6045,7 @@ void Style::drawComplexControl(ComplexControl control, const QStyleOptionComplex
         }
         break;
     default:
-        QCommonStyle::drawComplexControl(control, option, painter, widget);
+        ParentStyleClass::drawComplexControl(control, option, painter, widget);
         break;
     }
 }
@@ -6063,20 +6063,20 @@ Style::drawItemText(QPainter *painter, const QRect &rect, int flags,
                 p.currentColorGroup() == QPalette::Inactive) {
                 p.setCurrentColorGroup(QPalette::Active);
             }
-            QCommonStyle::drawItemText(painter, rect, flags, p, enabled,
+            ParentStyleClass::drawItemText(painter, rect, flags, p, enabled,
                                        text, QPalette::HighlightedText);
             return;
         }
     }
 
-    QCommonStyle::drawItemText(painter, rect, flags, pal,
+    ParentStyleClass::drawItemText(painter, rect, flags, pal,
                                enabled, text, textRole);
 }
 
 QSize Style::sizeFromContents(ContentsType type, const QStyleOption *option, const QSize &size, const QWidget *widget) const
 {
     prePolish(widget);
-    QSize newSize(QCommonStyle::sizeFromContents(type, option, size, widget));
+    QSize newSize(ParentStyleClass::sizeFromContents(type, option, size, widget));
 
     switch (type)
     {
@@ -6351,7 +6351,7 @@ QRect Style::subElementRect(SubElement element, const QStyleOption *option, cons
         bool verticalTitleBar = dwopt ? dwopt->verticalTitleBar : false;
         int m = pixelMetric(PM_DockWidgetTitleMargin, option, widget);
 
-        rect = QCommonStyle::subElementRect(element, option, widget);
+        rect = ParentStyleClass::subElementRect(element, option, widget);
 
         if (verticalTitleBar)
             rect.adjust(0, 0, 0, -m);
@@ -6362,9 +6362,9 @@ QRect Style::subElementRect(SubElement element, const QStyleOption *option, cons
         return rect;
     }
     case SE_TabBarTabLeftButton:
-        return QCommonStyle::subElementRect(element, option, widget).translated(-2, -1);
+        return ParentStyleClass::subElementRect(element, option, widget).translated(-2, -1);
     case SE_TabBarTabRightButton:
-        return QCommonStyle::subElementRect(element, option, widget).translated(2, -1);
+        return ParentStyleClass::subElementRect(element, option, widget).translated(2, -1);
     case SE_TabBarTabText:
         if (auto _tab = styleOptCast<QStyleOptionTab>(option)) {
             QStyleOptionTab tab(*_tab);
@@ -6455,7 +6455,7 @@ QRect Style::subElementRect(SubElement element, const QStyleOption *option, cons
         break;
     case SE_RadioButtonIndicator:
         rect = visualRect(option->direction, option->rect,
-                          QCommonStyle::subElementRect(element, option, widget)).adjusted(0, 0, 1, 1);
+                          ParentStyleClass::subElementRect(element, option, widget)).adjusted(0, 0, 1, 1);
         break;
     case SE_ProgressBarContents:
         return (opts.fillProgress ? opts.buttonEffect != EFFECT_NONE &&
@@ -6481,14 +6481,14 @@ QRect Style::subElementRect(SubElement element, const QStyleOption *option, cons
                 rect.adjust(-2, -2, 2, 2);
             }
         } else {
-            rect = QCommonStyle::subElementRect(element, option, widget);
+            rect = ParentStyleClass::subElementRect(element, option, widget);
             if (opts.buttonEffect != EFFECT_NONE) {
                 rect.adjust(1, 1, -1, -1);
             }
         }
         return rect;
     default:
-        return QCommonStyle::subElementRect(element, option, widget);
+        return ParentStyleClass::subElementRect(element, option, widget);
     }
 
     return visualRect(option->direction, option->rect, rect);
@@ -6761,7 +6761,7 @@ QRect Style::subControlRect(ComplexControl control, const QStyleOptionComplex *o
                     ret=QRect(0, sliderstart, sbextent, sliderLength);
                 break;
             default:
-                ret = QCommonStyle::subControlRect(control, option, subControl, widget);
+                ret = ParentStyleClass::subControlRect(control, option, subControl, widget);
                 break;
             }
             return visualRect(scrollBar->direction/*Qt::LeftToRight*/, scrollBar->rect, ret);
@@ -6772,7 +6772,7 @@ QRect Style::subControlRect(ComplexControl control, const QStyleOptionComplex *o
             if (SLIDER_TRIANGULAR == opts.sliderStyle) {
                 int tickSize(pixelMetric(PM_SliderTickmarkOffset, option, widget)),
                     mod=MO_GLOW==opts.coloredMouseOver && opts.buttonEffect != EFFECT_NONE ? 2 : 0;
-                QRect rect(QCommonStyle::subControlRect(control, option, subControl, widget));
+                QRect rect(ParentStyleClass::subControlRect(control, option, subControl, widget));
 
                 switch (subControl) {
                 case SC_SliderHandle:
@@ -7020,7 +7020,7 @@ QRect Style::subControlRect(ComplexControl control, const QStyleOptionComplex *o
     default:
         break;
     }
-    return QCommonStyle::subControlRect(control, option, subControl, widget);
+    return ParentStyleClass::subControlRect(control, option, subControl, widget);
 }
 
 QStyle::SubControl
@@ -7062,7 +7062,7 @@ Style::hitTestComplexControl(ComplexControl control,
     default:
         break;
     }
-    return QCommonStyle::hitTestComplexControl(control, option,  pos, widget);
+    return ParentStyleClass::hitTestComplexControl(control, option,  pos, widget);
 }
 
 }
diff --git qt5/style/qtcurve_primitive.cpp qt5/style/qtcurve_primitive.cpp
index 74e14904..2c1d3804 100644
--- qt5/style/qtcurve_primitive.cpp
+++ qt5/style/qtcurve_primitive.cpp
@@ -1043,7 +1043,7 @@ Style::drawPrimitiveFrameWindow(PrimitiveElement,
                    borderCols[option &&
                               option->version == TBAR_BORDER_VERSION_HACK ?
                               0 : QTC_STD_BORDER]);
-    bool isKWin = state & QtC_StateKWin;
+    bool isKWin = (theThemedApp == APP_KWIN || (state & QtC_StateKWin));
     bool addLight = (opts.windowBorder & WINDOW_BORDER_ADD_LIGHT_BORDER &&
                      (!isKWin || qtcGetWindowBorderSize(false).sides > 1));
     light.setAlphaF(1.0);
@@ -1125,7 +1125,7 @@ Style::drawPrimitiveButton(PrimitiveElement element, const QStyleOption *option,
     const QColor *use = buttonColors(option);
     bool isDefault = false;
     bool isFlat = false;
-    bool isKWin = state & QtC_StateKWin;
+    bool isKWin = (theThemedApp == APP_KWIN || (state & QtC_StateKWin));
     bool isDown = state & State_Sunken || state & State_On;
     bool isOnListView = (!isKWin && widget &&
                          qobject_cast<const QAbstractItemView*>(widget));
@@ -1262,11 +1264,26 @@ Style::drawPrimitiveButton(PrimitiveElement element, const QStyleOption *option,
 
 bool
 Style::drawPrimitivePanelMenu(PrimitiveElement, const QStyleOption *option,
-                              QPainter *painter, const QWidget*) const
+                              QPainter *painter, const QWidget *w) const
 {
     QRect r = option->rect;
     double radius = opts.round >= ROUND_FULL ? 5.0 : 2.5;
-    const QColor *use = popupMenuCols(option);
+
+    const QColor *use;
+    const QColor *bgCols;
+    QColor altCols[TOTAL_SHADES+1];
+    if (theThemedApp==APP_KWIN && w
+            && w->palette().color(QPalette::Active, QPalette::Background)
+                != QApplication::palette().color(QPalette::Active, QPalette::Background)) {
+//         qWarning() << "drawPrimitivePanelMenu: widget" << w << "bgCol" << w->palette().color(QPalette::Active, QPalette::Background)
+//             << "differs from app bgCol" << QApplication::palette().color(QPalette::Active, QPalette::Background);
+        shadeColors(w->palette().color(QPalette::Active, QPalette::Background), altCols);
+        bgCols = use = altCols;
+    } else {
+        use = popupMenuCols(option);
+        bgCols = popupMenuCols();
+    }
+
     painter->setClipRegion(r);
     painter->setCompositionMode(QPainter::CompositionMode_Source);
     if (!opts.popupBorder) {
@@ -1285,7 +1302,7 @@ Style::drawPrimitivePanelMenu(PrimitiveElement, const QStyleOption *option,
     if (opts.menuBgndOpacity == 100) {
         painter->fillRect(r, option->palette.brush(QPalette::Background));
     }
-    drawBackground(painter, popupMenuCols()[ORIGINAL_SHADE], r,
+    drawBackground(painter, bgCols[ORIGINAL_SHADE], r,
                    opts.menuBgndOpacity, BGND_MENU, opts.menuBgndAppearance);
     // FIXME, workaround only, the non transparent part of the image will have
     // a different overall opacity.
