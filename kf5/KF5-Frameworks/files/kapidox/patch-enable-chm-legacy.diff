--- src/kapidox/orig.argparserutils.py	2016-05-02 22:54:33.000000000 +0200
+++ src/kapidox/argparserutils.py	2016-12-16 21:28:56.000000000 +0100
@@ -43,6 +43,8 @@
             help='Generate man page documentation.')
     group.add_argument('--qhp', action='store_true',
             help='Generate Qt Compressed Help documentation.')
+    group.add_argument('--chm', action='store_true', default=False,
+            help='Generate Compressed HTML Help (chm) documentation.')
     group.add_argument('--searchengine', action='store_true',
             help="Enable Doxygen's search engine feature.")
     group.add_argument('--api-searchbox', action='store_true',
@@ -72,6 +74,8 @@
             help='(Path to) the doxygen executable.')
     group.add_argument('--qhelpgenerator', default='qhelpgenerator',
             help='(Path to) the qhelpgenerator executable.')
+    group.add_argument('--chmcompiler', default='',
+            help='(Path to) the HTML help (chm) compiler executable.')
     return group
 
 
--- src/kapidox/orig.generator.py	2016-05-02 22:54:33.000000000 +0200
+++ src/kapidox/generator.py	2016-12-16 21:30:39.000000000 +0100
@@ -99,9 +99,11 @@
         'qhp',
         'searchengine',
         'api_searchbox',
+        'chm',
         # Binaries
         'doxygen',
         'qhelpgenerator',
+        'chmcompiler',
     )
 
     def __init__(self, args, **kwargs):
@@ -114,9 +116,11 @@
         self.qhp = args.qhp
         self.searchengine = args.searchengine
         self.api_searchbox = args.api_searchbox
+        self.chm = args.chm
         # Binaries
         self.doxygen = args.doxygen
         self.qhelpgenerator = args.qhelpgenerator
+        self.chmcompiler = args.chmcompiler
 
         for key in self.__slots__:
             if not hasattr(self, key):
@@ -639,6 +643,14 @@
                 GENERATE_QHP=ctx.qhp,
                 SEARCHENGINE=ctx.searchengine)
 
+        if ctx.chmcompiler != '' and ctx.chm:
+            writer.write_entries(
+                GENERATE_HTMLHELP="YES",
+                GENERATE_CHI="NO",
+                HHC_LOCATION=ctx.chmcompiler,
+                CHM_FILE=ctx.fancyname + ".chm",
+                SEARCHENGINE="NO")
+
         if doxyfile_entries:
             writer.write_entries(**doxyfile_entries)
 
