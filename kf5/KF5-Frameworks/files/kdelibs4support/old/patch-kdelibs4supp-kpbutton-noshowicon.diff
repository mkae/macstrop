diff --git src/kdeui/kpushbutton.cpp src/kdeui/kpushbutton.cpp
index 98534fa..2781c75 100644
--- src/kdeui/kpushbutton.cpp
+++ src/kdeui/kpushbutton.cpp
@@ -253,7 +253,10 @@ void KPushButton::paintEvent(QPaintEvent *)
     if (d->delayedMenu) {
         option.features |= QStyleOptionButton::HasMenu;
     }
-
+    if (!text().isEmpty() && !style()->styleHint(QStyle::SH_DialogButtonBox_ButtonsHaveIcons, 0, this)) {
+        option.icon = QIcon();
+        option.iconSize = QSize(0,0);
+    }
     p.drawControl(QStyle::CE_PushButton, option);
 }
 
diff --git src/kdeui/kdialogbuttonbox.cpp src/kdeui/kdialogbuttonbox.cpp
index 0f6649b..b84fc72 100644
--- src/kdeui/kdialogbuttonbox.cpp
+++ src/kdeui/kdialogbuttonbox.cpp
@@ -33,10 +33,15 @@ KDialogButtonBox::~KDialogButtonBox() {}
 
 QPushButton *KDialogButtonBox::addButton(const QString &text, ButtonRole role, QObject *receiver,  const char *slot)
 {
-    QPushButton *pb = addButton(text, role);
+    // use QDialogButtonBox::addButton(role) which invokes an internal QDialogButtonBox method
+    // that respects the ButtonsHaveIcons stylehint so we don't need to query it again here.
+    QPushButton *pb = QDialogButtonBox::addButton(role);
 
-    if (pb && receiver && slot) {
-        QObject::connect(pb, SIGNAL(clicked()), receiver, slot);
+    if (pb) {
+        pb->setText(text);
+        if (receiver && slot) {
+            QObject::connect(pb, SIGNAL(clicked()), receiver, slot);
+        }
     }
 
     return pb;
@@ -44,9 +49,24 @@ QPushButton *KDialogButtonBox::addButton(const QString &text, ButtonRole role, Q
 
 KPushButton *KDialogButtonBox::addButton(const KGuiItem &guiitem, ButtonRole role, QObject *receiver,  const char *slot)
 {
-    KPushButton *pb = new KPushButton(this);
-    KGuiItem::assign(pb, guiitem);
+    QPushButton *pb = new QPushButton(guiitem.text(), this);
+    // addButton can fail when an invalid role is specified, a case which should probably be caught.
+    // Is there a point creating a button which is then not added to the QDBox? Won't that leak?
     QDialogButtonBox::addButton(pb, role);
+    if (style()->styleHint(QStyle::SH_DialogButtonBox_ButtonsHaveIcons, 0, this)) {
+        if (guiitem.hasIcon()) {
+            // button icons allowed, override the one pb may have inherited due to its role
+            pb->setIcon(guiitem.icon());
+            // copied from QAbstractButton::iconSize():
+            //int e = style()->pixelMetric(QStyle::PM_ButtonIconSize, 0, this);
+            //pb->setIconSize(QSize(e,e));
+        }
+    } else {
+        // no icons should be shown: only way to support that here is by
+        // removing the icon pb may have inherited because of its role.
+        pb->setIcon(QIcon());
+        pb->setIconSize(QSize());
+    }
 
     if (receiver && slot) {
         QObject::connect(pb, SIGNAL(clicked()), receiver, slot);
