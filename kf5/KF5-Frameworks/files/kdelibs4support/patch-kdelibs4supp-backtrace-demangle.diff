diff --git src/kdecore/kdebug.cpp src/kdecore/kdebug.cpp
index 417ef0c..44c3fc9 100644
--- src/kdecore/kdebug.cpp
+++ src/kdecore/kdebug.cpp
@@ -82,8 +82,8 @@
 #include <string.h>
 #include <kconfig.h>
 
-#ifdef Q_OS_SOLARIS
-// For the purposes of KDebug Solaris has a GNU-libc-compatible
+#if defined(Q_OS_SOLARIS) || defined(__FreeBSD__)
+// For the purposes of KDebug Solaris and FreeBSD have a GNU-libc-compatible
 // backtrace() function. This isn't detected by the CMake checks
 // normally (check_function_exists fails), but we know it's there.
 // For better results, we would use walk_context(), but that's
@@ -93,7 +93,7 @@
 
 #if HAVE_BACKTRACE
 #include <execinfo.h>
-#ifdef __GNUC__
+#if defined(__GNUC__) || defined(__clang__)
 #define HAVE_BACKTRACE_DEMANGLE
 #include <cxxabi.h>
 #endif
@@ -752,18 +752,34 @@ static QString maybeDemangledName(char *name)
 #ifdef HAVE_BACKTRACE_DEMANGLE
     const int len = strlen(name);
     QByteArray in = QByteArray::fromRawData(name, len);
-    const int mangledNameStart = in.indexOf("(_");
+#ifdef Q_OS_MACOS
+    const int mangledNameStart = in.indexOf(" _"), startOffset = 1;
+#elif defined(__FreeBSD__)
+    const int mangledNameStart = in.indexOf(" <_"), startOffset = 2;
+#elif defined(__sun) && defined(__SVR4)
+    const int mangledNameStart = in.indexOf("'"), startOffset = 0;
+#else
+    const int mangledNameStart = in.indexOf("(_"), startOffset = 1;
+#endif
     if (mangledNameStart >= 0) {
-        const int mangledNameEnd = in.indexOf('+', mangledNameStart + 2);
+        int mangledNameEnd = in.indexOf('+', mangledNameStart + 2);
+        // check for and suppress trailing whitespace:
+        if (mangledNameEnd > 1 && isspace(name[mangledNameEnd-1])) {
+            mangledNameEnd -= 1;
+            while (mangledNameEnd > 1 && isspace(name[mangledNameEnd-1])) {
+                --mangledNameEnd;
+            }
+        }
         if (mangledNameEnd >= 0) {
             int status;
             // if we forget about this line and the one that undoes its effect we don't change the
             // internal data of the QByteArray::fromRawData() ;)
+            const char endChar = name[mangledNameEnd];
             name[mangledNameEnd] = 0;
-            char *demangled = abi::__cxa_demangle(name + mangledNameStart + 1, nullptr, nullptr, &status);
-            name[mangledNameEnd] = '+';
+            char *demangled = abi::__cxa_demangle(name + mangledNameStart + startOffset, nullptr, nullptr, &status);
+            name[mangledNameEnd] = endChar;
             if (demangled) {
-                QString ret = QString::fromLatin1(name, mangledNameStart + 1) +
+                QString ret = QString::fromLatin1(name, mangledNameStart + startOffset) +
                               QString::fromLatin1(demangled) +
                               QString::fromLatin1(name + mangledNameEnd, len - mangledNameEnd);
                 free(demangled);
