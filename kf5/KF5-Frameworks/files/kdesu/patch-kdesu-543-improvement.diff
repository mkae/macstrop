commit 86954e03946369644005fb59c97793d5336fc43e
Author: Milian Wolff <mail@milianw.de>
Date:   Mon Jan 15 13:32:05 2018 +0100

    Make kdesu work when PWD is /usr/bin
    
    Summary:
    This code seems to have accumulated quite some legacy cruft. The
    two defines are never set from CMake, thus they get defined to
    "false". Now when the PWD contains a file called "false", like is
    usually the case for /usr/bin, then kdesu would suddenly stop working.
    You just get the super unhelpful "Su returned with an error" dialog
    shown...
    
    This patch removes the obsolete macros and always uses QStandardPath
    to find the executable path for the superUserCommand. This makes the
    code work for me when the PWD contains a file called "false".
    
    Reviewers: dfaure, mpyne, sitter
    
    Subscribers: #frameworks
    
    Tags: #frameworks
    
    Differential Revision: https://phabricator.kde.org/D9888

diff --git src/suprocess.cpp src/suprocess.cpp
index a92ae2b..e3f2f24 100644
--- src/suprocess.cpp
+++ src/suprocess.cpp
@@ -25,14 +25,6 @@
 #include <ksharedconfig.h>
 #include <kuser.h>
 
-#ifndef __PATH_SU
-#define __PATH_SU "false"
-#endif
-
-#ifndef __PATH_SUDO
-#define __PATH_SUDO "false"
-#endif
-
 #ifdef KDESU_USE_SUDO_DEFAULT
 #  define DEFAULT_SUPER_USER_COMMAND QStringLiteral("sudo")
 #else
@@ -127,18 +119,9 @@ int SuProcess::exec(const char *password, int check)
     args += QByteArray(CMAKE_INSTALL_FULL_LIBEXECDIR_KF5) + "/kdesu_stub";
     args += "-"; // krazy:exclude=doublequote_chars (QList, not QString)
 
-    QByteArray command;
-    if (d->superUserCommand == QLatin1String("sudo")) {
-        command = __PATH_SUDO;
-    } else {
-        command = __PATH_SU;
-    }
-
-    if (QT_ACCESS(command.constData(), X_OK) != 0) {
-        command = QFile::encodeName(QStandardPaths::findExecutable(d->superUserCommand));
-        if (command.isEmpty()) {
-            return check ? SuNotFound : -1;
-        }
+    const QByteArray command = QFile::encodeName(QStandardPaths::findExecutable(d->superUserCommand));
+    if (command.isEmpty()) {
+        return check ? SuNotFound : -1;
     }
 
     if (StubProcess::exec(command, args) < 0) {
