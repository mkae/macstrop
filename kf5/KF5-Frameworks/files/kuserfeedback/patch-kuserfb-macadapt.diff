diff --git a/CMakeLists.txt b/CMakeLists.txt
index c8899a13d6754413305f35c5e7b646208082e892..6cd5b2b8b77a7842f078ad8e6a48caea386da657 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -22,6 +22,7 @@ include(ECMSetupVersion)
 include(FeatureSummary)
 include(GenerateExportHeader)
 include(KDECompilerSettings)
+include(ECMMarkNonGuiExecutable)
 
 enable_testing()
 
diff --git a/src/cli/CMakeLists.txt b/src/cli/CMakeLists.txt
index 67a616ec1f88932029b5692f1f060dce91560fd2..104f58a9bddccf5db72ef137afa40b5507007100 100644
--- a/src/cli/CMakeLists.txt
+++ b/src/cli/CMakeLists.txt
@@ -3,6 +3,7 @@ set(uf_cli_srcs
 )
 
 add_executable(userfeedbackctl ${uf_cli_srcs})
+ecm_mark_nongui_executable(userfeedbackctl)
 target_compile_features(userfeedbackctl PRIVATE cxx_generic_lambdas)
 target_link_libraries(userfeedbackctl KUserFeedbackConsole)
 install(TARGETS userfeedbackctl ${KDE_INSTALL_TARGETS_DEFAULT_ARGS})
diff --git a/src/console/main.cpp b/src/console/main.cpp
index 2a06f73a274e19174b89d73fb98ea9605368eb69..b9e961f50fb6f65d0ba918724bad316b8b367497 100644
--- a/src/console/main.cpp
+++ b/src/console/main.cpp
@@ -19,6 +19,7 @@
 #include "mainwindow.h"
 
 #include <QApplication>
+#include <QSettings>
 
 int main(int argc, char** argv)
 {
@@ -29,6 +30,8 @@ int main(int argc, char** argv)
 
     Q_INIT_RESOURCE(schematemplates);
 
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+
     QApplication app(argc, argv);
 
     KUserFeedback::Console::MainWindow mainWindow;
diff --git a/src/console/rest/serverinfo.cpp b/src/console/rest/serverinfo.cpp
index de415eca941709cf3d120610787007515b732cae..c8fdac6bcca6806d9f14ecce9e44cd8477773bfc 100644
--- a/src/console/rest/serverinfo.cpp
+++ b/src/console/rest/serverinfo.cpp
@@ -99,7 +99,7 @@ void ServerInfo::setPassword(const QString& password)
 
 void ServerInfo::save() const
 {
-    QSettings settings(QStringLiteral("KDE"), QStringLiteral("UserFeedbackConsole.servers"));
+    QSettings settings(QSettings::IniFormat, QSettings::UserScope, QStringLiteral("KDE"), QStringLiteral("UserFeedbackConsole.servers"));
     settings.beginGroup(ServerInfoData::groupName(name()));
     settings.setValue(QStringLiteral("name"), name());
     settings.setValue(QStringLiteral("url"), url().toString());
@@ -115,7 +115,7 @@ void ServerInfo::save() const
 
 ServerInfo ServerInfo::load(const QString &name)
 {
-    QSettings settings(QStringLiteral("KDE"), QStringLiteral("UserFeedbackConsole.servers"));
+    QSettings settings(QSettings::IniFormat, QSettings::UserScope, QStringLiteral("KDE"), QStringLiteral("UserFeedbackConsole.servers"));
     settings.beginGroup(ServerInfoData::groupName(name));
 
     ServerInfo info;
@@ -128,7 +128,7 @@ ServerInfo ServerInfo::load(const QString &name)
 
 void ServerInfo::remove(const QString& name)
 {
-    QSettings settings(QStringLiteral("KDE"), QStringLiteral("UserFeedbackConsole.servers"));
+    QSettings settings(QSettings::IniFormat, QSettings::UserScope, QStringLiteral("KDE"), QStringLiteral("UserFeedbackConsole.servers"));
     settings.remove(ServerInfoData::groupName(name));
 
     auto allServers = settings.value(QStringLiteral("ServerNames")).toStringList();
@@ -138,6 +138,6 @@ void ServerInfo::remove(const QString& name)
 
 QStringList ServerInfo::allServerInfoNames()
 {
-    QSettings settings(QStringLiteral("KDE"), QStringLiteral("UserFeedbackConsole.servers"));
+    QSettings settings(QSettings::IniFormat, QSettings::UserScope, QStringLiteral("KDE"), QStringLiteral("UserFeedbackConsole.servers"));
     return settings.value(QStringLiteral("ServerNames")).toStringList();
 }
diff --git a/src/provider/core/provider.cpp b/src/provider/core/provider.cpp
index 047c5adb09e2cec98e1a7a3c379d8483856c05b3..02d554b65d2ed74337839f0dbbad2c4109a0f76e 100644
--- a/src/provider/core/provider.cpp
+++ b/src/provider/core/provider.cpp
@@ -111,7 +111,7 @@ std::unique_ptr<QSettings> ProviderPrivate::makeSettings() const
     if (org.isEmpty())
         org = QLatin1String("Unknown Organization");
 
-    std::unique_ptr<QSettings> s(new QSettings(org, QStringLiteral("UserFeedback.") + productId));
+    std::unique_ptr<QSettings> s(new QSettings(QSettings::IniFormat, QSettings::UserScope, org, QStringLiteral("UserFeedback.") + productId));
     return s;
 }
 
@@ -123,7 +123,7 @@ std::unique_ptr<QSettings> ProviderPrivate::makeGlobalSettings() const
 #else
         QStringLiteral("KDE");
 #endif
-    std::unique_ptr<QSettings> s(new QSettings(org, QStringLiteral("UserFeedback")));
+    std::unique_ptr<QSettings> s(new QSettings(QSettings::IniFormat, QSettings::UserScope, org, QStringLiteral("UserFeedback")));
     return s;
 }
 
diff --git a/tests/orwell.cpp b/tests/orwell.cpp
index 2403df9c13fd655d20c6898967fed5ae780ebf7a..1068faceacf7b3a4590faeacabe89b195d5d03b6 100644
--- a/tests/orwell.cpp
+++ b/tests/orwell.cpp
@@ -88,7 +88,7 @@ void Orwell::loadStats()
 {
     ui->version->setText(QCoreApplication::applicationVersion());
 
-    QSettings settings(QStringLiteral("KDE"), QStringLiteral("UserFeedback.org.kde.orwell"));
+    QSettings settings(QSettings::IniFormat, QSettings::UserScope, QStringLiteral("KDE"), QStringLiteral("UserFeedback.org.kde.orwell"));
     ui->startCount->setValue(settings.value(QStringLiteral("UserFeedback/ApplicationStartCount")).toInt());
     ui->runtime->setValue(settings.value(QStringLiteral("UserFeedback/ApplicationTime")).toInt());
     ui->surveys->setText(settings.value(QStringLiteral("UserFeedback/CompletedSurveys")).toStringList().join(QStringLiteral(", ")));
@@ -97,7 +97,7 @@ void Orwell::loadStats()
 
 void Orwell::writeStats()
 {
-    QSettings settings(QStringLiteral("KDE"), QStringLiteral("UserFeedback.org.kde.orwell"));
+    QSettings settings(QSettings::IniFormat, QSettings::UserScope, QStringLiteral("KDE"), QStringLiteral("UserFeedback.org.kde.orwell"));
     settings.setValue(QStringLiteral("UserFeedback/ApplicationStartCount"), ui->startCount->value());
     settings.setValue(QStringLiteral("UserFeedback/ApplicationTime"), ui->runtime->value());
     settings.setValue(QStringLiteral("UserFeedback/CompletedSurveys"), ui->surveys->text().split(QStringLiteral(", ")));
@@ -111,6 +111,8 @@ int main(int argc, char** argv)
     QCoreApplication::setOrganizationDomain(QStringLiteral("kde.org"));
     QCoreApplication::setApplicationVersion(QStringLiteral("1984"));
 
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+
     QApplication app(argc, argv);
 
     provider.reset(new KUserFeedback::Provider);
