diff --git src/runtime/kwalletd/backend/CMakeLists.txt src/runtime/kwalletd/backend/CMakeLists.txt
index 20bd4d9..9ab60e8 100644
--- src/runtime/kwalletd/backend/CMakeLists.txt
+++ src/runtime/kwalletd/backend/CMakeLists.txt
@@ -41,6 +41,9 @@ set(kwalletbackend_LIB_SRCS
    kwalletbackend.cc
    backendpersisthandler.cpp
 )
+if (APPLE)
+   set(kwalletbackend_LIB_SRCS ${kwalletbackend_LIB_SRCS} kwalletd_activate.mm)
+endif()
 
 add_library(kwalletbackend5 SHARED ${kwalletbackend_LIB_SRCS})
 generate_export_header(kwalletbackend5)
diff --git src/runtime/kwalletd/backend/backendpersisthandler.cpp src/runtime/kwalletd/backend/backendpersisthandler.cpp
index 413d4cd..2a7b572 100644
--- src/runtime/kwalletd/backend/backendpersisthandler.cpp
+++ src/runtime/kwalletd/backend/backendpersisthandler.cpp
@@ -45,6 +45,9 @@
 #include <windows.h>
 #include <wincrypt.h>
 #endif
+#ifdef Q_OS_OSX
+extern void activateNSApplication(bool);
+#endif
 
 #define KWALLET_CIPHER_BLOWFISH_ECB 0 // this was the old KWALLET_CIPHER_BLOWFISH_CBC
 #define KWALLET_CIPHER_3DES_CBC     1 // unsupported
@@ -510,6 +513,9 @@ int GpgPersistHandler::write(Backend *wb, QSaveFile &sf, QByteArray &version, WI
     GpgME::Error err = initGpgME();
     if (err) {
         qDebug() << "initGpgME returned " << err.code();
+#ifdef Q_OS_OSX
+        activateNSApplication(true);
+#endif
         KMessageBox::errorWId(w, i18n("<qt>Error when attempting to initialize OpenPGP while attempting to save the wallet <b>%1</b>. Error code is <b>%2</b>. Please fix your system configuration, then try again.</qt>", wb->_name.toHtmlEscaped(), err.code()));
         sf.cancelWriting();
         return -5;
@@ -518,6 +524,9 @@ int GpgPersistHandler::write(Backend *wb, QSaveFile &sf, QByteArray &version, WI
     boost::shared_ptr< GpgME::Context > ctx(GpgME::Context::createForProtocol(GpgME::OpenPGP));
     if (0 == ctx) {
         qDebug() << "Cannot setup OpenPGP context!";
+#ifdef Q_OS_OSX
+        activateNSApplication(true);
+#endif
         KMessageBox::errorWId(w, i18n("<qt>Error when attempting to initialize OpenPGP while attempting to save the wallet <b>%1</b>. Please fix your system configuration, then try again.</qt>"), wb->_name.toHtmlEscaped());
         return -6;
     }
@@ -569,6 +578,9 @@ int GpgPersistHandler::write(Backend *wb, QSaveFile &sf, QByteArray &version, WI
     GpgME::EncryptionResult res = ctx->encrypt(keys, decryptedData, encryptedData, GpgME::Context::None);
     if (res.error()) {
         int gpgerr = res.error().code();
+#ifdef Q_OS_OSX
+        activateNSApplication(true);
+#endif
         KMessageBox::errorWId(w, i18n("<qt>Encryption error while attempting to save the wallet <b>%1</b>. Error code is <b>%2 (%3)</b>. Please fix your system configuration, then try again. This error may occur if you are not using a full trust GPG key. Please ensure you have the secret key for the key you are using.</qt>",
                                       wb->_name.toHtmlEscaped(), gpgerr, gpgme_strerror(gpgerr)));
         qDebug() << "GpgME encryption error: " << res.error().code();
@@ -581,6 +593,9 @@ int GpgPersistHandler::write(Backend *wb, QSaveFile &sf, QByteArray &version, WI
     encryptedData.seek(0, SEEK_SET);
     while (bytes = encryptedData.read(buffer, sizeof(buffer) / sizeof(buffer[0]))) {
         if (sf.write(buffer, bytes) != bytes) {
+#ifdef Q_OS_OSX
+        activateNSApplication(true);
+#endif
             KMessageBox::errorWId(w, i18n("<qt>File handling error while attempting to save the wallet <b>%1</b>. Error was <b>%2</b>. Please fix your system configuration, then try again.</qt>", wb->_name.toHtmlEscaped(), sf.errorString()));
             sf.cancelWriting();
             return -4; // write error
@@ -599,6 +614,9 @@ int GpgPersistHandler::read(Backend *wb, QFile &sf, WId w)
 {
     GpgME::Error err = initGpgME();
     if (err) {
+#ifdef Q_OS_OSX
+        activateNSApplication(true);
+#endif
         KMessageBox::errorWId(w, i18n("<qt>Error when attempting to initialize OpenPGP while attempting to open the wallet <b>%1</b>. Error code is <b>%2</b>. Please fix your system configuration, then try again.</qt>", wb->_name.toHtmlEscaped(), err.code()));
         return -1;
     }
@@ -617,6 +635,9 @@ int GpgPersistHandler::read(Backend *wb, QFile &sf, WId w)
 retry_label:
     boost::shared_ptr< GpgME::Context > ctx(GpgME::Context::createForProtocol(GpgME::OpenPGP));
     if (0 == ctx) {
+#ifdef Q_OS_OSX
+        activateNSApplication(true);
+#endif
         KMessageBox::errorWId(w, i18n("<qt>Error when attempting to initialize OpenPGP while attempting to open the wallet <b>%1</b>. Please fix your system configuration, then try again.</qt>", wb->_name.toHtmlEscaped()));
         qDebug() << "Cannot setup OpenPGP context!";
         return -1;
@@ -628,6 +649,9 @@ retry_label:
     if (res.error()) {
         qDebug() << "Error decrypting message: " << res.error().asString() << ", code " << res.error().code() << ", source " << res.error().source();
         KGuiItem btnRetry(i18n("Retry"));
+#ifdef Q_OS_OSX
+        activateNSApplication(true);
+#endif
         // FIXME the logic here should be a little more elaborate; a dialog box should be used with "retry", "cancel", but also "troubleshoot" with options to show card status and to kill scdaemon
         int userChoice = KMessageBox::warningYesNoWId(w, i18n("<qt>Error when attempting to decrypt the wallet <b>%1</b> using GPG. If you're using a SmartCard, please ensure it's inserted then try again.<br><br>GPG error was <b>%2</b></qt>", wb->_name.toHtmlEscaped(), res.error().asString()),
                          i18n("kwalletd GPG backend"), btnRetry, KStandardGuiItem::cancel());
@@ -674,6 +698,9 @@ retry_label:
     }
     ctx->endKeyListing();
     if (wb->_gpgKey.isNull()) {
+#ifdef Q_OS_OSX
+        activateNSApplication(true);
+#endif
         KMessageBox::errorWId(w, i18n("<qt>Error when attempting to open the wallet <b>%1</b>. The wallet was encrypted using the GPG Key ID <b>%2</b> but this key was not found on your system.</qt>", wb->_name.toHtmlEscaped(), keyID));
         return -1;
     }
diff --git src/runtime/kwalletd/backend/kwalletbackend.h src/runtime/kwalletd/backend/kwalletbackend.h
index 4811a58..e9fe360 100644
--- src/runtime/kwalletd/backend/kwalletbackend.h
+++ src/runtime/kwalletd/backend/kwalletbackend.h
@@ -186,6 +186,11 @@ public:
 
     static QString getSaveLocation();
 
+#ifdef Q_OS_OSX
+    // a hack to make it possible for kwalletd to bring itself to foreground
+    static void activateNSApplication(bool force);
+#endif
+
 private:
     Q_DISABLE_COPY(Backend)
     class BackendPrivate;
diff --git src/runtime/kwalletd/backend/kwalletd_activate.mm src/runtime/kwalletd/backend/kwalletd_activate.mm
new file mode 100644
index 0000000..2695a8c
--- /dev/null
+++ src/runtime/kwalletd/backend/kwalletd_activate.mm
@@ -0,0 +1,14 @@
+#include "kwalletbackend.h"
+#include <AppKit/AppKit.h>
+
+void activateNSApplication(bool force)
+{
+    [NSApp unhide:NSApp];
+    [NSApp activateIgnoringOtherApps:force];
+}
+
+// hack: export the function via the KWallet::Backend class
+void KWallet::Backend::activateNSApplication(bool force)
+{
+    activateNSApplication(force);
+}
\ No newline at end of file
diff --git src/runtime/kwalletd/kwalletd.cpp src/runtime/kwalletd/kwalletd.cpp
index ca7d4ff..0a90304 100644
--- src/runtime/kwalletd/kwalletd.cpp
+++ src/runtime/kwalletd/kwalletd.cpp
@@ -419,6 +419,10 @@ int KWalletD::openPathAsync(const QString& path, qlonglong wId,
 void KWalletD::setupDialog(
     QWidget* dialog, WId wId, const QString& appid, bool modal)
 {
+#ifdef Q_OS_OSX
+    KWallet::Backend::activateNSApplication(true);
+    KWindowSystem::forceActiveWindow(dialog->winId(), 0);
+#else
     if (wId != 0) {
         KWindowSystem::setMainWindow(
             dialog, wId); // correct, set dialog parent
@@ -437,6 +441,7 @@ void KWalletD::setupDialog(
         // KF5 FIXME what should we use now instead of this:
         //         kapp->updateUserTimestamp();
     }
+#endif
     if (modal) {
         KWindowSystem::setState(dialog->winId(), NET::Modal);
     }
@@ -608,6 +613,9 @@ int KWalletD::internalOpen(const QString& appid, const QString& wallet,
                         delete b;
                         b = new KWallet::Backend(wallet, isPath);
                     }
+#ifdef Q_OS_OSX
+                    KWallet::Backend::activateNSApplication(true);
+#endif
                     KPasswordDialog* kpd = new KPasswordDialog();
                     if (appid.isEmpty()) {
                         kpd->setPrompt(
@@ -633,7 +641,10 @@ int KWalletD::internalOpen(const QString& appid, const QString& wallet,
                     kpd->setPixmap(
                         KIconLoader::global()->loadIcon(QStringLiteral("kwalletmanager"),
                             KIconLoader::Desktop, KIconLoader::SizeHuge));
-                    if (w != KWindowSystem::activeWindow() && w != 0L) {
+#ifndef Q_OS_OSX
+                    if (w != KWindowSystem::activeWindow() && w != 0L)
+#endif
+                    {
                         // If the dialog is modal to a minimized window it
                         // might not be visible
                         // (but still blocking the calling application).
@@ -1017,6 +1028,9 @@ void KWalletD::doTransactionChangePassword(
     if (!w) {
         handle = doTransactionOpen(appid, wallet, false, wId, false, QLatin1String(""));
         if (-1 == handle) {
+#ifdef Q_OS_OSX
+            KWallet::Backend::activateNSApplication(true);
+#endif
             KMessageBox::sorryWId((WId)wId,
                 i18n("Unable to open wallet. The wallet must be opened in "
                      "order to change the password."),
@@ -1034,6 +1048,9 @@ void KWalletD::doTransactionChangePassword(
     if (w->cipherType() == KWallet::BACKEND_CIPHER_GPG) {
         QString keyID = w->gpgKey().shortKeyID();
         assert(!keyID.isNull());
+#ifdef Q_OS_OSX
+            KWallet::Backend::activateNSApplication(true);
+#endif
         KMessageBox::errorWId(
             (WId)wId, i18n("<qt>The <b>%1</b> wallet is encrypted using GPG "
                            "key <b>%2</b>. Please use <b>GPG</b> tools (such "
@@ -1058,6 +1075,9 @@ void KWalletD::doTransactionChangePassword(
                 w->setPassword(p.toUtf8());
                 int rc = w->close(true);
                 if (rc < 0) {
+#ifdef Q_OS_OSX
+                    KWallet::Backend::activateNSApplication(true);
+#endif
                     KMessageBox::sorryWId((WId)wId,
                         i18n("Error re-encrypting the wallet. Password was "
                              "not changed."),
@@ -1067,6 +1087,9 @@ void KWalletD::doTransactionChangePassword(
                 else {
                     rc = w->open(p.toUtf8());
                     if (rc < 0) {
+#ifdef Q_OS_OSX
+                        KWallet::Backend::activateNSApplication(true);
+#endif
                         KMessageBox::sorryWId((WId)wId,
                             i18n("Error reopening the wallet. Data may be "
                                  "lost."),
