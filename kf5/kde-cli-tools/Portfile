# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$
# Copyright (c) 2015, 2016 R.J.V. Bertin

PortSystem          1.0

set kf5.project     kde-cli-tools
set kf5.virtualPath plasma
PortGroup           kf5 1.1
# kf5.use_latest      plasma
name                kf5-cli-tools

maintainers         gmail.com:rjvbertin mk openmaintainer

installs_libs       no

description         KF5 CLI utilities
long_description    KF5 command line interface utilities.
# 5.9.3
checksums           rmd160  a72acc88e0d0d014e5a57092f107297ef031bb1b \
                    sha256  0a5470bdd4d6fc5469aeabe72eef6dda05433cec632bd30482dece2ad3953fdd

patchfiles-append \
                    patch-preserve-window-icon.diff

kf5.depends_qt5_components \
                    qtsvg
kf5.depends_frameworks \
                    kcmutils kconfig kdoctools ki18n \
                    kiconthemes kinit kio kservice kwindowsystem
# these are optional:
kf5.depends_frameworks \
                    kdesu

# Qt documentation for this package makes no sense
kf5.allow_apidocs_generation no

platform linux {
    # this is only to get qt_libs_dir into the rpath in the cmake-kf5-mp wrapper
    cmake.install_rpath-prepend \
                    ${qt_libs_dir}
}

platform darwin {
    patchfiles-append \
                    patch-no-x11.diff \
                    patch-nongui-execs.diff
    kf5.kde4compat -port kde4-runtime {
        post-destroot {
            file delete -force ${destroot}${prefix}/share/doc/HTML
            file delete -force ${destroot}${prefix}/share/locale
            file delete -force ${destroot}${prefix}/share/man
        }
    }
    post-destroot {
        kf5.add_app_wrapper kcmshell5
    }
}

# store the cpp flags as the pre-configure phase will move them into
# configure.cflags and configure.cxxflags, and we want them in our post-destroot
set cppflags [join ${configure.cppflags}]

post-destroot {

    set cmakewrappername "${destroot}${prefix}/bin/cmake-kf5-mp"
    set fp [open ${cmakewrappername} "w"]
    puts ${fp} "#!/bin/sh\n"
    puts ${fp} "# This script wraps cmake with the arguments for building KF5 software in MacPorts style\n"
    puts ${fp} "if \[ \"\$\{CC\}\" = \"\" \] \;then"
    puts ${fp} "    CC=${configure.cc}"
    puts ${fp} "fi"
    puts ${fp} "if \[ \"\$\{CXX\}\" = \"\" \] \;then"
    puts ${fp} "    CXX=${configure.cxx}"
    puts ${fp} "fi\n"
    if {${cppflags} ne ""} {
        puts ${fp} "export CFLAGS=\"\$\{CFLAGS\} ${cppflags}\""
        puts ${fp} "export CXXFLAGS=\"\$\{CXXFLAGS\} ${cppflags}\"\n"
    }

    puts -nonewline ${fp} "exec ${configure.cmd}"
    if {[info exists configure.pre_args]} {
        puts -nonewline ${fp} " [join ${configure.pre_args}]"
    }
    if {[info exists configure.args]} {
        puts -nonewline ${fp} " [join ${configure.args}]"
    }
    if {[info exists configure.post_args]} {
        puts -nonewline ${fp} " [string map [list ${worksrcpath} ""] [join ${configure.post_args}]]"
    }
    puts ${fp} "\"\$@\""
    close ${fp}
    system "chmod 755 ${cmakewrappername}"
}

livecheck.type      regex
livecheck.url       http://download.kde.org/stable/plasma/
livecheck.regex     (5+(\\.\\d+)+)
