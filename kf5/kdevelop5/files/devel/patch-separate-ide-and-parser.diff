diff --git CMakeLists.txt CMakeLists.txt
index 8bb2ffbde0e7cec9781655d7f030a5ecb48f7820..bd766ad80699f42a20b55daef7c5104790906748 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -8,6 +8,13 @@ set( KDEVELOP_VERSION "${KDEVELOP_VERSION_MAJOR}.${KDEVELOP_VERSION_MINOR}.${KDE
 
 project(KDevelop)
 
+option(KDEVELOP_BUILD_IDE "Build the IDE" ON)
+option(KDEVELOP_BUILD_CLANG_PARSER "Build the Clang-based C/C++ parser (formerly kdev-clang)" ON)
+
+if ((NOT KDEVELOP_BUILD_IDE) AND (NOT KDEVELOP_BUILD_CLANG_PARSER))
+    message(FATAL_ERROR "KDEVELOP_BUILD_IDE and KDEVELOP_BUILD_CLANG_PARSER cannot both be OFF!")
+endif()
+
 # we need some parts of the ECM CMake helpers
 find_package (ECM 0.0.9 REQUIRED NO_MODULE)
 set(CMAKE_MODULE_PATH ${KDevelop_SOURCE_DIR}/cmake/modules ${ECM_MODULE_PATH})
@@ -62,10 +69,12 @@ find_package(KF5SysGuard)
 set_package_properties(KF5SysGuard PROPERTIES
     PURPOSE "Framework for process listing. Required for the 'Attach to Process' feature"
 )
-find_package(KDevelop-PG-Qt 1.90.90)
-set_package_properties(KDevelop-PG-Qt PROPERTIES
-    PURPOSE "KDevelop parser generator library. Required for the QMake Builder/Manager plugin."
-)
+if (KDEVELOP_BUILD_IDE)
+    find_package(KDevelop-PG-Qt 1.90.90)
+    set_package_properties(KDevelop-PG-Qt PROPERTIES
+        PURPOSE "KDevelop parser generator library. Required for the QMake Builder/Manager plugin."
+    )
+endif()
 
 find_package(KDevPlatform ${KDEVELOP_VERSION} REQUIRED)
 
@@ -111,47 +120,51 @@ endif()
 # create config.h
 configure_file (config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config.h )
 
-add_subdirectory(pics)
-add_subdirectory(app)
-add_subdirectory(analyzers)
-add_subdirectory(formatters)
+if (KDEVELOP_BUILD_IDE)
+    add_subdirectory(pics)
+    add_subdirectory(app)
+    add_subdirectory(analyzers)
+    add_subdirectory(formatters)
+    add_subdirectory(projectbuilders)
+    add_subdirectory(projectmanagers)
+    add_subdirectory(debuggers)
+    add_subdirectory(app_templates)
+    add_subdirectory(documentation)
+    add_subdirectory(kdeintegration)
+    add_subdirectory(utils)
+    add_subdirectory(file_templates)
+    add_subdirectory(providers)
+    add_subdirectory(shortcuts)
+    add_subdirectory(doc)
+endif()
 add_subdirectory(languages)
-add_subdirectory(projectbuilders)
-add_subdirectory(projectmanagers)
-add_subdirectory(debuggers)
-add_subdirectory(app_templates)
-add_subdirectory(documentation)
-add_subdirectory(kdeintegration)
-add_subdirectory(utils)
-add_subdirectory(file_templates)
-add_subdirectory(providers)
-add_subdirectory(shortcuts)
-add_subdirectory(doc)
 
 set(CMAKECONFIG_INSTALL_DIR "${KDE_INSTALL_CMAKEPACKAGEDIR}/KDevelop")
-ecm_configure_package_config_file("${CMAKE_CURRENT_SOURCE_DIR}/KDevelopConfig.cmake.in"
-                                  "${CMAKE_CURRENT_BINARY_DIR}/KDevelopConfig.cmake"
-                                  INSTALL_DESTINATION ${CMAKECONFIG_INSTALL_DIR}
-)
-ecm_setup_version(${KDEVELOP_VERSION_MAJOR}.${KDEVELOP_VERSION_MINOR}.${KDEVELOP_VERSION_PATCH}
-                  VARIABLE_PREFIX KDEVELOP
-                  VERSION_HEADER "${CMAKE_CURRENT_BINARY_DIR}/kdevelop_version.h"
-                  PACKAGE_VERSION_FILE "${CMAKE_CURRENT_BINARY_DIR}/KDevelopConfigVersion.cmake"
-                  SOVERSION ${KDEVELOP_LIB_SOVERSION}
-)
-install(FILES
-        "${CMAKE_CURRENT_BINARY_DIR}/kdevelop_version.h"
-        DESTINATION "${KDE_INSTALL_INCLUDEDIR}/kdevelop")
-install(FILES
-        "${CMAKE_CURRENT_BINARY_DIR}/KDevelopConfig.cmake"
-        "${CMAKE_CURRENT_BINARY_DIR}/KDevelopConfigVersion.cmake"
-        DESTINATION "${CMAKECONFIG_INSTALL_DIR}" )
-install(EXPORT KDevelopTargets DESTINATION "${CMAKECONFIG_INSTALL_DIR}" NAMESPACE KDev:: FILE KDevelopTargets.cmake)
-
-# CTestCustom.cmake has to be in the CTEST_BINARY_DIR.
-# in the KDE build system, this is the same as CMAKE_BINARY_DIR.
-configure_file(${CMAKE_SOURCE_DIR}/CTestCustom.cmake ${CMAKE_BINARY_DIR}/CTestCustom.cmake)
-
-install(FILES org.kde.kdevelop.appdata.xml DESTINATION ${KDE_INSTALL_METAINFODIR})
+if (KDEVELOP_BUILD_IDE)
+    ecm_configure_package_config_file("${CMAKE_CURRENT_SOURCE_DIR}/KDevelopConfig.cmake.in"
+                                      "${CMAKE_CURRENT_BINARY_DIR}/KDevelopConfig.cmake"
+                                      INSTALL_DESTINATION ${CMAKECONFIG_INSTALL_DIR}
+    )
+    ecm_setup_version(${KDEVELOP_VERSION_MAJOR}.${KDEVELOP_VERSION_MINOR}.${KDEVELOP_VERSION_PATCH}
+                      VARIABLE_PREFIX KDEVELOP
+                      VERSION_HEADER "${CMAKE_CURRENT_BINARY_DIR}/kdevelop_version.h"
+                      PACKAGE_VERSION_FILE "${CMAKE_CURRENT_BINARY_DIR}/KDevelopConfigVersion.cmake"
+                      SOVERSION ${KDEVELOP_LIB_SOVERSION}
+    )
+    install(FILES
+            "${CMAKE_CURRENT_BINARY_DIR}/kdevelop_version.h"
+            DESTINATION "${KDE_INSTALL_INCLUDEDIR}/kdevelop")
+    install(FILES
+            "${CMAKE_CURRENT_BINARY_DIR}/KDevelopConfig.cmake"
+            "${CMAKE_CURRENT_BINARY_DIR}/KDevelopConfigVersion.cmake"
+            DESTINATION "${CMAKECONFIG_INSTALL_DIR}" )
+    install(EXPORT KDevelopTargets DESTINATION "${CMAKECONFIG_INSTALL_DIR}" NAMESPACE KDev:: FILE KDevelopTargets.cmake)
+
+    # CTestCustom.cmake has to be in the CTEST_BINARY_DIR.
+    # in the KDE build system, this is the same as CMAKE_BINARY_DIR.
+    configure_file(${CMAKE_SOURCE_DIR}/CTestCustom.cmake ${CMAKE_BINARY_DIR}/CTestCustom.cmake)
+
+    install(FILES org.kde.kdevelop.appdata.xml DESTINATION ${KDE_INSTALL_METAINFODIR})
+endif()
 
 feature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)
diff --git languages/CMakeLists.txt languages/CMakeLists.txt
index b9653b1022e344be3806ff453d6c5e4442e7361e..0f61ce1d0b5ff36c73981ed43fa865e220ed0710 100644
--- languages/CMakeLists.txt
+++ languages/CMakeLists.txt
@@ -1,16 +1,20 @@
-ecm_optional_add_subdirectory(plugins)
-ecm_optional_add_subdirectory(qmljs)
+if (KDEVELOP_BUILD_IDE)
+    ecm_optional_add_subdirectory(plugins)
+    ecm_optional_add_subdirectory(qmljs)
+endif()
 
-find_package(Clang 3.5)
-set_package_properties(Clang PROPERTIES
-    PURPOSE "Clang libraries. Used for KDevelop's C++/C support plugin. Please install a package providing libclang."
-    TYPE REQUIRED
-)
+if(KDEVELOP_BUILD_CLANG_PARSER)
+    find_package(Clang 3.5)
+    set_package_properties(Clang PROPERTIES
+        PURPOSE "Clang libraries. Used for KDevelop's C++/C support plugin. Please install a package providing libclang."
+        TYPE REQUIRED
+    )
 
-if (CLANG_FOUND)
-    if (NOT CLANG_LIBCLANG_LIB)
-        message(FATAL_ERROR "Could not find the Clang C library: libclang")
-    endif()
+    if (CLANG_FOUND)
+        if (NOT CLANG_LIBCLANG_LIB)
+            message(FATAL_ERROR "Could not find the Clang C library: libclang")
+        endif()
 
-    ecm_optional_add_subdirectory(clang)
+        ecm_optional_add_subdirectory(clang)
+    endif()
 endif()
