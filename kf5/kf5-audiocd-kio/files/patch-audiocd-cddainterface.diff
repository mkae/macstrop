diff --git a/CMakeLists.txt b/CMakeLists.txt
index 178e816ca35df687cc4563aeae5f3c7c26d8615b..b5efcdfaf3b120d5f6f50601d369b5bdf6de919b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -59,6 +59,15 @@ if(CDDA_IOCTL_DEVICE_EXISTS)
 else()
     set(HAVE_CDDA_IOCTL_DEVICE 0)
 endif()
+execute_process(
+    COMMAND sed -e "s|cdda_private_data_t \\*private;|cdda_private_data_t \\*private_data;|g"
+    INPUT_FILE ${CDPARANOIA_INCLUDE_DIR}/cdda_interface.h
+    OUTPUT_FILE ${CMAKE_CURRENT_BINARY_DIR}/cdda_interface.hpp
+    RESULT_VARIABLE CDDA_INTERFACE_EDIT_ERROR
+)
+if (CDDA_INTERFACE_EDIT_ERROR)
+    message(STATUS "Fixing cdda_interface.h for C++ failed with exit code ${CDDA_INTERFACE_EDIT_ERROR}")
+endif()
 
 configure_file(config-audiocd.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config-audiocd.h)
 
diff --git a/audiocd.cpp b/audiocd.cpp
index 926308d5afca7462204409f04feda32071b51212..badc9d4745e3a8c2aed8798df9297e95a83cc64c 100644
--- a/audiocd.cpp
+++ b/audiocd.cpp
@@ -28,10 +28,9 @@
 extern "C"
 {
 	//cdda_interface.h in cdparanoia 10.2 has a member called 'private' which the C++ compiler doesn't like
-	#define private _private
-	#include <cdda_interface.h>
+    //we will thus use a generated local copy which renames that member.
+	#include "cdda_interface.hpp"
 	#include <cdda_paranoia.h>
-	#undef private
 	void paranoiaCallback(long, int);
 
 	KDE_EXPORT int kdemain(int argc, char ** argv);
diff --git a/plugins/wav/encodercda.cpp b/plugins/wav/encodercda.cpp
index d3b4aecf245a74bf792d88d2db68f0869d088365..de612296bebc933a007b55530bb2bd3770640bd1 100644
--- a/plugins/wav/encodercda.cpp
+++ b/plugins/wav/encodercda.cpp
@@ -43,9 +43,8 @@ const char * EncoderCda::mimeType() const {
 extern "C"
 {
   //cdda_interface.h in cdparanoia 10.2 has a member called 'private' which the C++ compiler doesn't like
-  #define private _private
-  #include <cdda_interface.h>
-  #undef private
+  //we will thus use a generated local copy which renames that member.
+  #include "cdda_interface.hpp"
 }
 
 inline int16_t swap16 (int16_t i)
