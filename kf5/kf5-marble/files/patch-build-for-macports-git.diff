diff --git a/CMakeLists.txt b/CMakeLists.txt
index e5cee1b4a65d6fe34bcd2b042713dc154eb722cc..c7097ced427762813cc9dca0b0a8e63fbf4d06dd 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -69,6 +69,14 @@ set ( CMAKE_MODULE_PATH
 include(GenerateExportHeader)
 include( MarbleMacros )
 
+# Generate a standalone app bundle when building on Apple's OS X
+# unset this to build a more unix-traditional layout that uses and provides
+# shared libraries and other resources (e.g. for MacPorts, Fink, HomeBrew etc.)
+if(APPLE)
+    option(APPLE_STANDALONE_BUNDLE "Generate a standalone app bundle when building on Apple's OS X" ON)
+    add_feature_info("App Bundle" APPLE_STANDALONE_BUNDLE "Generate a standalone app bundle when building on Apple's OS X.")
+endif(APPLE)
+
 ####################################################
 # Generate the tiles with the tilecreator at compile time
 # if this option is set, srtm.jpg will not be installed but the generated tiles instead
@@ -77,7 +85,7 @@ option(MOBILE "Create a Marble version optimized for handheld devices")
 ####################################################
 # Build a D-Bus interface for the Marble widget
 # This is disabled by default for all win32, apple and Android
-if(WIN32 OR APPLE OR CMAKE_SYSTEM_NAME STREQUAL Android)
+if(WIN32 OR APPLE_STANDALONE_BUNDLE OR CMAKE_SYSTEM_NAME STREQUAL Android)
     option(BUILD_WITH_DBUS "Build the D-Bus interface for the Marble widget" OFF)
 else()
     option(BUILD_WITH_DBUS "Build the D-Bus interface for the Marble widget" ON)
@@ -189,16 +197,24 @@ elseif(APPLE)
     FIND_LIBRARY(APP_SERVICES_LIBRARY ApplicationServices )
     MARK_AS_ADVANCED (APP_SERVICES_LIBRARY)
     SET(MAC_EXTRA_LIBS ${APP_SERVICES_LIBRARY})
-      # for Mac OS X, everything is put inside an application bundle
-      SET (CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/)
-      # path for library references
-      SET (CMAKE_INSTALL_NAME_DIR @executable_path/lib)
-      # install the Info.plist file
-      install(FILES src/mac/Info.plist DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents)
-      #SET (lib_dir ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/lib)
-      SET (data_dir   ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/resources/data)
-      set(locale_dir "${data_dir}/locale")
-      SET (plugin_dir   ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/resources/plugins)
+    if(APPLE_STANDALONE_BUNDLE)
+        ADD_DEFINITIONS(-DAPPLE_STANDALONE_BUNDLE)
+        # for Mac OS X, everything is put inside an application bundle
+        SET (CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/)
+        # path for library references
+        SET (CMAKE_INSTALL_NAME_DIR @executable_path/lib)
+        # install the Info.plist file
+        install(FILES src/mac/Info.plist DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents)
+        #SET (lib_dir ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/lib)
+        SET (data_dir   ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/resources/data)
+        set(locale_dir "${data_dir}/locale")
+        SET (plugin_dir   ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/resources/plugins)
+    else(APPLE_STANDALONE_BUNDLE)
+        set(data_dir ${CMAKE_INSTALL_FULL_DATAROOTDIR}/marble/data)
+        set(locale_dir "${CMAKE_INSTALL_FULL_DATAROOTDIR}/locale")
+        set(plugin_dir ${CMAKE_INSTALL_FULL_LIBDIR}/marble/plugins)
+        set(CMAKE_MODULES_INSTALL_PATH ${CMAKE_INSTALL_FULL_DATAROOTDIR}/marble/cmake)
+    endif(APPLE_STANDALONE_BUNDLE)
 elseif(CMAKE_SYSTEM_NAME STREQUAL Android)
       set(plugin_dir "${CMAKE_INSTALL_PREFIX}/assets/plugins")
       set(data_dir "${CMAKE_INSTALL_PREFIX}/assets/data")
diff --git a/data/CMakeLists.txt b/data/CMakeLists.txt
index 6f88faa4b364e5731d0f927fe8e382402c240f8f..dc204911bb859ac0ace58f320fb82aa18d1d0f61 100644
--- a/data/CMakeLists.txt
+++ b/data/CMakeLists.txt
@@ -270,14 +270,14 @@ else(MOBILE)
     install (FILES placemarks/cityplacemarks.cache DESTINATION ${MARBLE_DATA_INSTALL_PATH}/placemarks)
 endif(MOBILE)
 
-if(NOT APPLE AND NOT WIN32)
+if(NOT APPLE_STANDALONE_BUNDLE AND NOT WIN32)
   install (FILES icons/128-apps-marble.png DESTINATION ${ICON_INSTALL_DIR}/hicolor/128x128/apps/ RENAME marble.png)
   install (FILES icons/64-apps-marble.png DESTINATION ${ICON_INSTALL_DIR}/hicolor/64x64/apps/ RENAME marble.png)
   install (FILES icons/48-apps-marble.png DESTINATION ${ICON_INSTALL_DIR}/hicolor/48x48/apps/ RENAME marble.png)
   install (FILES icons/32-apps-marble.png DESTINATION ${ICON_INSTALL_DIR}/hicolor/32x32/apps/ RENAME marble.png)
   install (FILES icons/22-apps-marble.png DESTINATION ${ICON_INSTALL_DIR}/hicolor/22x22/apps/ RENAME marble.png)
   install (FILES icons/16-apps-marble.png DESTINATION ${ICON_INSTALL_DIR}/hicolor/16x16/apps/ RENAME marble.png)
-endif(NOT APPLE AND NOT WIN32 )
+endif(NOT APPLE_STANDALONE_BUNDLE AND NOT WIN32 )
 
 FILE (GLOB AUDIO_FILES audio/*.ogg)
 install (FILES
diff --git a/examples/cpp/marble-game/GameMainWindow.cpp b/examples/cpp/marble-game/GameMainWindow.cpp
index 4c6aa0b58631da9f430556ca0e6fe29bcf860af7..423178c5fe77a18764c1468a8aa1b1234076ebc2 100644
--- a/examples/cpp/marble-game/GameMainWindow.cpp
+++ b/examples/cpp/marble-game/GameMainWindow.cpp
@@ -82,6 +82,9 @@ Private::Private(QWidget* parent) :
 
 QString Private::readMarbleDataPath() const
 {
+#ifndef APPLE_STANDALONE_BUNDLE
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     return QSettings().value(QStringLiteral("MarbleWidget/marbleDataPath"), QString()).toString();
 }
 
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index af0a716a3f5009ed9e36ae6bf4343f5ed2ca59ef..57444f5c36a1a501a127b0dbacc0b2483be309c6 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -72,9 +72,9 @@ configure_file(
   ${CMAKE_CURRENT_BINARY_DIR}/config-marble.h
 )
 
-if(APPLE)
+if(APPLE AND APPLE_STANDALONE_BUNDLE)
   add_subdirectory( mac )
-endif(APPLE)
+endif(APPLE AND APPLE_STANDALONE_BUNDLE)
 
 add_subdirectory( plasma )
 add_subdirectory( plasmarunner )
diff --git a/src/apps/marble-kde/CMakeLists.txt b/src/apps/marble-kde/CMakeLists.txt
index 4c86cdc2dbc0095c74eaa3ffb0c8695b6b706a7a..089e62d7a9013cd44081786a52773da4ca1aa0d0 100644
--- a/src/apps/marble-kde/CMakeLists.txt
+++ b/src/apps/marble-kde/CMakeLists.txt
@@ -10,6 +10,7 @@ include(KDEInstallDirs)
 set(LIB_INSTALL_DIR ${KDE_INSTALL_LIBDIR})
 include(KDECMakeSettings)
 include(ECMInstallIcons)
+include(ECMAddAppIcon)
 
 macro_optional_find_package(KF5 ${REQUIRED_KF5_VERSION} QUIET COMPONENTS Crash NewStuff Parts CoreAddons I18n)
 
@@ -53,6 +54,9 @@ ecm_install_icons(ICONS
     "${CMAKE_SOURCE_DIR}/data/icons/48-apps-marble.png"
     "${CMAKE_SOURCE_DIR}/data/icons/64-apps-marble.png"
     DESTINATION ${KDE_INSTALL_ICONDIR})
+file(GLOB ICONS_SRCS
+  "${CMAKE_CURRENT_SOURCE_DIR}/../../../data/icons/*-apps-marble.png")
+ecm_add_app_icon(marble_kde_SRCS ICONS ${ICONS_SRCS})
 add_executable (marble ${marble_kde_SRCS})
 
 target_link_libraries (
diff --git a/src/apps/marble-qt/CMakeLists.txt b/src/apps/marble-qt/CMakeLists.txt
index d28e3aa5efc1f328e0306e80615299f6ca62d566..2e6568bf630104e14f46cd91bf4454972f4d26cf 100644
--- a/src/apps/marble-qt/CMakeLists.txt
+++ b/src/apps/marble-qt/CMakeLists.txt
@@ -14,13 +14,13 @@ if (WIN32)
 	  set_target_properties(marble-qt PROPERTIES LINK_FLAGS "/ENTRY:\"mainCRTStartup\"")
     endif()
 else (WIN32)
-    if (APPLE)
+    if (APPLE AND APPLE_STANDALONE_BUNDLE)
         add_executable (marble-qt ${marble_SRCS})
         # For Mac OS X, the executable must be at the root of the bundle's executable folder
         INSTALL(TARGETS marble-qt RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS)
-    else (APPLE)
+    else (APPLE AND APPLE_STANDALONE_BUNDLE)
         add_executable (marble-qt ${marble_SRCS})
-    endif (APPLE)
+    endif (APPLE AND APPLE_STANDALONE_BUNDLE)
 endif (WIN32)
 
 target_link_libraries (
@@ -50,11 +50,11 @@ endif(STATIC_BUILD)
 if(WIN32)
 install (TARGETS marble-qt RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX})
 else(WIN32)
-if (APPLE)
+if (APPLE AND APPLE_STANDALONE_BUNDLE)
   # No need for this when installing to a bundle
-else (APPLE)
+else (APPLE AND APPLE_STANDALONE_BUNDLE)
     install (TARGETS marble-qt RUNTIME DESTINATION bin )
-endif (APPLE)
+endif (APPLE AND APPLE_STANDALONE_BUNDLE)
 endif(WIN32)
 if(APPS_INSTALL_DIR)
   install(PROGRAMS org.kde.marble-qt.desktop DESTINATION ${APPS_INSTALL_DIR})
diff --git a/src/apps/marble-qt/QtMainWindow.cpp b/src/apps/marble-qt/QtMainWindow.cpp
index 03bfd79d3373b34948f65bff7e0d78d5ec4890b5..d78e3036bde5ad90724df920cf8e047e3cdad0f5 100644
--- a/src/apps/marble-qt/QtMainWindow.cpp
+++ b/src/apps/marble-qt/QtMainWindow.cpp
@@ -1116,6 +1116,9 @@ void MainWindow::closeEvent( QCloseEvent *event )
 
 QString MainWindow::readMarbleDataPath()
 {
+#ifndef APPLE_STANDALONE_BUNDLE
+     QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
      QSettings settings;
 
      settings.beginGroup("MarbleWidget");
@@ -1128,6 +1131,9 @@ QString MainWindow::readMarbleDataPath()
 
 void MainWindow::readSettings(const QVariantMap& overrideSettings)
 {
+#ifndef APPLE_STANDALONE_BUNDLE
+     QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
      QSettings settings;
 
      settings.beginGroup("MainWindow");
@@ -1337,6 +1343,9 @@ void MainWindow::readSettings(const QVariantMap& overrideSettings)
 
 void MainWindow::writeSettings()
 {
+#ifndef APPLE_STANDALONE_BUNDLE
+     QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
      QSettings settings;
 
      settings.beginGroup( "MainWindow" );
@@ -1605,6 +1614,9 @@ void MainWindow::updateWindowTitle()
 void MainWindow::showMapWizard()
 {
     QPointer<MapWizard> mapWizard = new MapWizard();
+#ifndef APPLE_STANDALONE_BUNDLE
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     QSettings settings;
 
     settings.beginGroup( "MapWizard" );
diff --git a/src/apps/marble-qt/qtmain.cpp b/src/apps/marble-qt/qtmain.cpp
index 7d55757323e16a67ea5b65b0eb0fa51920714562..8c09869a1ee15e60de7a84b263b5e4e7e89e1caa 100644
--- a/src/apps/marble-qt/qtmain.cpp
+++ b/src/apps/marble-qt/qtmain.cpp
@@ -32,7 +32,7 @@
  Q_IMPORT_PLUGIN(qsvg)
 #endif
 
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
 //for getting app bundle path
 #include <ApplicationServices/ApplicationServices.h>
 #endif
@@ -107,7 +107,7 @@ int main(int argc, char *argv[])
     QApplication::addLibraryPath( QApplication::applicationDirPath() 
         + QDir::separator() + QLatin1String("plugins"));
 #endif
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
     QApplication::instance()->setAttribute(Qt::AA_DontShowIconsInMenus);
     qDebug("Adding qt image plugins to plugin search path...");
     CFURLRef myBundleRef = CFBundleCopyBundleURL(CFBundleGetMainBundle());
@@ -122,7 +122,7 @@ int main(int argc, char *argv[])
     // lets try to set the qt plugin search path...
     if (myPath.contains(".app"))
     {
-      myPath += QLatin1String("/Contents/plugins");
+      myPath += QLatin1String("/Contents/Resources/plugins");
       QApplication::addLibraryPath( myPath );
       qDebug( "Added %s to plugin search path", qPrintable( myPath ) );
     }
diff --git a/src/lib/astro/CMakeLists.txt b/src/lib/astro/CMakeLists.txt
index 3dbe455716b0ddc28519381b26a35b8bbcd621c8..875895b596e8eb3a5be36aa4eba7049ebdda1d2c 100644
--- a/src/lib/astro/CMakeLists.txt
+++ b/src/lib/astro/CMakeLists.txt
@@ -49,7 +49,7 @@ target_include_directories(astro
 # choose the correct target install library path
 if(WIN32)
   INSTALL(TARGETS astro RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX} ARCHIVE DESTINATION lib)
-elseif(APPLE)
+elseif(APPLE AND APPLE_STANDALONE_BUNDLE)
   INSTALL(TARGETS astro LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/lib)
 else()
   install(TARGETS astro
@@ -60,7 +60,7 @@ endif()
 
 ########### install headers & cmake config files ###############
 
-if (WIN32 OR APPLE)
+if (WIN32 OR APPLE_STANDALONE_BUNDLE)
     # TODO: find how to install & deploy library, headers and config files as bundle for development
     return()
 endif()
diff --git a/src/lib/marble/AbstractFloatItem.cpp b/src/lib/marble/AbstractFloatItem.cpp
index 49ba5b627b10fe820e5e143adfa8ccd4f7d66f9b..d540f9008bbc91e198e291cb38a060b2af9bd707 100644
--- a/src/lib/marble/AbstractFloatItem.cpp
+++ b/src/lib/marble/AbstractFloatItem.cpp
@@ -47,7 +47,7 @@ class AbstractFloatItemPrivate
 };
 
 QPen         AbstractFloatItemPrivate::s_pen = QPen( Qt::black );
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
     QFont AbstractFloatItemPrivate::s_font = QFont( QStringLiteral("Sans Serif"), 10 );
 #else
     QFont AbstractFloatItemPrivate::s_font = QFont( QStringLiteral("Sans Serif"), 8 );
diff --git a/src/lib/marble/CMakeLists.txt b/src/lib/marble/CMakeLists.txt
index 6403ce45b9928404f857dabc97e4c90be97bce1b..7f0cb6f8046303d95f41dfff24acf7cbeac045d7 100644
--- a/src/lib/marble/CMakeLists.txt
+++ b/src/lib/marble/CMakeLists.txt
@@ -441,7 +441,7 @@ target_include_directories(marblewidget
 # choose the correct target install library path
 if(WIN32)
   install(TARGETS marblewidget RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX} ARCHIVE DESTINATION lib)
-elseif(APPLE)
+elseif(APPLE AND APPLE_STANDALONE_BUNDLE)
   install(TARGETS marblewidget LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/lib)
 else()
   install(TARGETS marblewidget
@@ -452,7 +452,7 @@ endif()
 
 ########### install headers & cmake config files ###############
 
-if (WIN32 OR APPLE)
+if (WIN32 OR APPLE_STANDALONE_BUNDLE)
     # TODO: find how to install & deploy library, headers and config files as bundle for development
     return()
 endif()
diff --git a/src/lib/marble/MapThemeSortFilterProxyModel.cpp b/src/lib/marble/MapThemeSortFilterProxyModel.cpp
index 8babb74e2e3499412758b8fb0c80a41c1a8ed0fa..5d9b4488e6d20803f988592b7c8246a197b8a0f0 100644
--- a/src/lib/marble/MapThemeSortFilterProxyModel.cpp
+++ b/src/lib/marble/MapThemeSortFilterProxyModel.cpp
@@ -52,6 +52,9 @@ bool MapThemeSortFilterProxyModel::isFavorite( const QModelIndex& index )
     const QAbstractItemModel *model = index.model();
     QModelIndex columnIndex = model->index( index.row(), 0, QModelIndex() );
     QString const key = QLatin1String("Favorites/") + model->data(columnIndex).toString();
+#ifndef APPLE_STANDALONE_BUNDLE
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     return QSettings().contains( key );
 }
 
@@ -60,6 +63,9 @@ QDateTime MapThemeSortFilterProxyModel::favoriteDateTime( const QModelIndex& ind
     const QAbstractItemModel *model = index.model();
     QModelIndex columnIndex = model->index( index.row(), 0, QModelIndex() );
     QString const key = QLatin1String("Favorites/") + model->data(columnIndex).toString();
+#ifndef APPLE_STANDALONE_BUNDLE
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     return QSettings().value( key ).toDateTime();
 }
 
diff --git a/src/lib/marble/MapViewItemDelegate.cpp b/src/lib/marble/MapViewItemDelegate.cpp
index 31d7a619c27cc5d678c8eb91ffea60ead1d6bed0..c4af68609eb794bee087aa8c959ce7cb23fb09e7 100644
--- a/src/lib/marble/MapViewItemDelegate.cpp
+++ b/src/lib/marble/MapViewItemDelegate.cpp
@@ -62,6 +62,9 @@ void MapViewItemDelegate::paint( QPainter *painter, const QStyleOptionViewItem &
 
     int const padding = 5;
     QString const name = index.data().toString();
+#ifndef APPLE_STANDALONE_BUNDLE
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     const bool isFavorite = QSettings().contains(QLatin1String("Favorites/") + name);
     QSize const bookmarkSize( 16, 16 );
     QRect bookmarkRect( iconRect.bottomRight(), bookmarkSize );
diff --git a/src/lib/marble/MapViewWidget.cpp b/src/lib/marble/MapViewWidget.cpp
index 626875e6e10b69503745aee9ef06113c732757a0..75d84560b6b49319d559958894a0a8ef2e5a22e4 100644
--- a/src/lib/marble/MapViewWidget.cpp
+++ b/src/lib/marble/MapViewWidget.cpp
@@ -72,6 +72,9 @@ class Q_DECL_HIDDEN MapViewWidget::Private {
     {
         m_mapSortProxy.setDynamicSortFilter( true );
         m_celestialListProxy.setDynamicSortFilter( true );
+#ifndef APPLE_STANDALONE_BUNDLE
+        QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     }
 
     ~Private()
diff --git a/src/lib/marble/MarbleDirs.cpp b/src/lib/marble/MarbleDirs.cpp
index dc48da58c554fa39b2fcf96d35123586e13a3ba5..9968ee6f87f118cb464e9b20ab0f5ffaa517d965 100644
--- a/src/lib/marble/MarbleDirs.cpp
+++ b/src/lib/marble/MarbleDirs.cpp
@@ -30,7 +30,7 @@
 #include <shlobj.h>
 #endif
 
-#ifdef Q_OS_MACX
+#ifdef APPLE_STANDALONE_BUNDLE
 //for getting app bundle path
 #include <ApplicationServices/ApplicationServices.h>
 #endif
@@ -131,7 +131,7 @@ QString MarbleDirs::systemPath()
 	return QCoreApplication::applicationDirPath() + QDir::separator() + QLatin1String("data");
 #endif
 
-#ifdef Q_OS_MACX
+#ifdef APPLE_STANDALONE_BUNDLE
     //
     // On OSX lets try to find any file first in the bundle
     // before branching out to home and sys dirs
@@ -144,8 +144,8 @@ QString MarbleDirs::systemPath()
     CFRelease(myMacPath);
     //do some magick so that we can still find data dir if
     //marble was not built as a bundle
-    if (myPath.contains(QLatin1String(".app"))) {  //its a bundle!
-      systempath = myPath + QLatin1String("/Contents/Resources/data");
+    if (myPath.contains(QLatin1String(".app"))) {  //it's a bundle!
+      systempath = myPath + QLatin1String("/Contents/Resources");
     }
 
     if ( QFile::exists( systempath ) ){ 
@@ -185,7 +185,7 @@ QString MarbleDirs::pluginSystemPath()
 
     QString systempath;
 
-#ifdef Q_OS_MACX
+#ifdef APPLE_STANDALONE_BUNDLE
     //
     // On OSX lets try to find any file first in the bundle
     // before branching out to home and sys dirs
diff --git a/src/lib/marble/QtMarbleConfigDialog.cpp b/src/lib/marble/QtMarbleConfigDialog.cpp
index 3b40f9c4513586deabc91e768a1b1a8a64076842..856750143b92ed024e58ece60b24f0f6cd386021 100644
--- a/src/lib/marble/QtMarbleConfigDialog.cpp
+++ b/src/lib/marble/QtMarbleConfigDialog.cpp
@@ -62,6 +62,9 @@ class QtMarbleConfigDialogPrivate
           m_cloudSyncManager(cloudSyncManager),
           m_pluginModel()
     {
+#ifndef APPLE_STANDALONE_BUNDLE
+        QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     }
 
     Ui::MarbleViewSettingsWidget       ui_viewSettings;
diff --git a/src/lib/marble/StyleBuilder.cpp b/src/lib/marble/StyleBuilder.cpp
index b23154c02840798427216ae2fd32f782e998418f..47d4e3bce48e6b3fbd8713f99dc4b9e52051c110 100644
--- a/src/lib/marble/StyleBuilder.cpp
+++ b/src/lib/marble/StyleBuilder.cpp
@@ -682,7 +682,7 @@ void StyleBuilder::Private::initializeDefaultStyles()
 
     QString defaultFamily = m_defaultFont.family();
 
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
     int defaultSize = 10;
 #else
     int defaultSize = 8;
diff --git a/src/lib/marble/declarative/MarbleQuickItem.cpp b/src/lib/marble/declarative/MarbleQuickItem.cpp
index 619bb3f3089c19b25681156223711148ec0a52c2..3a9e4ee152d04cd23382713588a30b6f30fda3dc 100644
--- a/src/lib/marble/declarative/MarbleQuickItem.cpp
+++ b/src/lib/marble/declarative/MarbleQuickItem.cpp
@@ -983,6 +983,9 @@ namespace Marble
 
     void MarbleQuickItem::loadSettings()
     {
+#ifndef APPLE_STANDALONE_BUNDLE
+        QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
         QSettings settings;
         settings.beginGroup(QStringLiteral("MarbleQuickItem"));
         double lon = settings.value(QStringLiteral("centerLon"), QVariant(0.0)).toDouble();
@@ -1013,6 +1016,9 @@ namespace Marble
 
     void MarbleQuickItem::writeSettings()
     {
+#ifndef APPLE_STANDALONE_BUNDLE
+        QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
         QSettings settings;
         settings.beginGroup(QStringLiteral("MarbleQuickItem"));
         settings.setValue(QStringLiteral("centerLon"), QVariant(d->m_map.centerLongitude()));
diff --git a/src/lib/marble/declarative/Settings.cpp b/src/lib/marble/declarative/Settings.cpp
index 6e3427566010a6305201d6bd58309001c5abf8fe..f5b2eea7a14ab1d76e44e4cc058660859363a61f 100644
--- a/src/lib/marble/declarative/Settings.cpp
+++ b/src/lib/marble/declarative/Settings.cpp
@@ -48,6 +48,9 @@ bool Settings::debugOutputEnabled() const
 
 QVariant Settings::value( const QString &group, const QString &key, const QVariant &value ) const
 {
+#ifndef APPLE_STANDALONE_BUNDLE
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     QSettings settings( m_organizationName, m_applicationName );
     settings.beginGroup( group );
     return settings.value( key, value );
@@ -55,6 +58,9 @@ QVariant Settings::value( const QString &group, const QString &key, const QVaria
 
 void Settings::setValue( const QString &group, const QString &key, const QVariant &value )
 {
+#ifndef APPLE_STANDALONE_BUNDLE
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     QSettings settings( m_organizationName, m_applicationName );
     settings.beginGroup( group );
     settings.setValue( key, value );
diff --git a/src/lib/marble/geodata/data/GeoDataLabelStyle.cpp b/src/lib/marble/geodata/data/GeoDataLabelStyle.cpp
index d67baa99c47adeb89140a2ba28899742f13df328..b826e114690212008da62696775850014771e280 100644
--- a/src/lib/marble/geodata/data/GeoDataLabelStyle.cpp
+++ b/src/lib/marble/geodata/data/GeoDataLabelStyle.cpp
@@ -19,7 +19,7 @@
 
 namespace Marble
 {
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
 static const int defaultSize = 10;
 #else
 static const int defaultSize = 8;
diff --git a/src/plugins/render/foursquare/FoursquarePlugin.cpp b/src/plugins/render/foursquare/FoursquarePlugin.cpp
index 981691bf0620c73199794bf8b6edfc8df0f81589..2eb4eb1147fed8777afa3ce52553caee866f266a 100644
--- a/src/plugins/render/foursquare/FoursquarePlugin.cpp
+++ b/src/plugins/render/foursquare/FoursquarePlugin.cpp
@@ -79,6 +79,9 @@ QIcon FoursquarePlugin::icon() const
 
 bool FoursquarePlugin::isAuthenticated()
 {
+#ifndef APPLE_STANDALONE_BUNDLE
+    QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
     QSettings settings;
 
     return !settings.value(QStringLiteral("access_token")).isNull();
@@ -88,6 +91,9 @@ bool FoursquarePlugin::storeAccessToken(const QString& tokenUrl)
 {
     QString expected = "http://edu.kde.org/marble/dummy#access_token=";
     if( tokenUrl.startsWith( expected ) ) {
+#ifndef APPLE_STANDALONE_BUNDLE
+        QSettings::setDefaultFormat(QSettings::IniFormat);
+#endif
         QSettings settings;
         QString url = tokenUrl;
         settings.setValue(QStringLiteral("access_token"), url.remove(expected));
diff --git a/src/plugins/render/graticule/GraticulePlugin.cpp b/src/plugins/render/graticule/GraticulePlugin.cpp
index 0555787fd88e7e28d2f35247f375bbcfcdff01c7..6ba0c1c36db375cfcdafb2d264cc32891b655c33 100644
--- a/src/plugins/render/graticule/GraticulePlugin.cpp
+++ b/src/plugins/render/graticule/GraticulePlugin.cpp
@@ -269,7 +269,7 @@ bool GraticulePlugin::render( GeoPainter *painter, ViewportParams *viewport,
     }
 
     // Setting the label font for the coordinate lines.
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
     int defaultFontSize = 10;
 #else
     int defaultFontSize = 8;
diff --git a/src/plugins/render/measure/MeasureToolPlugin.cpp b/src/plugins/render/measure/MeasureToolPlugin.cpp
index ff6f648ef3fd1b4a2e19dac5fecc4c40f164eebb..abe50ac15e43785278e1cd1628fe03a35c7c8ffb 100644
--- a/src/plugins/render/measure/MeasureToolPlugin.cpp
+++ b/src/plugins/render/measure/MeasureToolPlugin.cpp
@@ -37,7 +37,7 @@ namespace Marble
 MeasureToolPlugin::MeasureToolPlugin( const MarbleModel *marbleModel )
     : RenderPlugin( marbleModel ),
       m_measureLineString( GeoDataLineString( Tessellate ) ),
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
       m_font_regular( QFont( QStringLiteral( "Sans Serif" ), 10, 50, false ) ),
 #else
       m_font_regular( QFont( QStringLiteral( "Sans Serif" ),  8, 50, false ) ),
diff --git a/src/plugins/render/weather/WeatherItem.cpp b/src/plugins/render/weather/WeatherItem.cpp
index 0fa42eb10c32946a7d215ab66be95a7ce6d050cb..1acfd07ce10a48aefca8b8cd2ef623bf79988198 100644
--- a/src/plugins/render/weather/WeatherItem.cpp
+++ b/src/plugins/render/weather/WeatherItem.cpp
@@ -312,7 +312,7 @@ class WeatherItemPrivate
 };
 
 // FIXME: Fonts to be defined globally
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
     QFont WeatherItemPrivate::s_font = QFont( QStringLiteral( "Sans Serif" ), 10 );
 #else
     QFont WeatherItemPrivate::s_font = QFont( QStringLiteral( "Sans Serif" ), 8 );
diff --git a/src/plugins/runner/gpx/CMakeLists.txt b/src/plugins/runner/gpx/CMakeLists.txt
index 62e1e10d86f1eec8995c3268f0d1c72dbb3f03db..8d7cebff657cd570d6302f0ff83aa9b2c901fd97 100644
--- a/src/plugins/runner/gpx/CMakeLists.txt
+++ b/src/plugins/runner/gpx/CMakeLists.txt
@@ -69,7 +69,7 @@ endif()
 # register thumbnail plugin as handler
 install(FILES marble_thumbnail_gpx.desktop DESTINATION ${KDE_INSTALL_KSERVICES5DIR})
 
-if(NOT WIN32 AND NOT APPLE)
+if(NOT WIN32 AND NOT APPLE_STANDALONE_BUNDLE)
     # register marble app as handler
     install(FILES marble_gpx.desktop DESTINATION ${KDE_INSTALL_APPDIR})
 endif()
diff --git a/src/plugins/runner/json/CMakeLists.txt b/src/plugins/runner/json/CMakeLists.txt
index ce997af07a3f49508bb2e4ab53f3c1757cadfa1a..a91ea3925b58cd0b1fdc68577644bf168c01138d 100644
--- a/src/plugins/runner/json/CMakeLists.txt
+++ b/src/plugins/runner/json/CMakeLists.txt
@@ -30,7 +30,7 @@ endif()
 # register thumbnail plugin as handler
 install(FILES marble_thumbnail_geojson.desktop DESTINATION ${KDE_INSTALL_KSERVICES5DIR})
 
-if(NOT WIN32 AND NOT APPLE)
+if(NOT WIN32 AND NOT APPLE_STANDALONE_BUNDLE)
     # register marble app as handler
     install(FILES marble_geojson.desktop DESTINATION ${KDE_INSTALL_APPDIR})
 endif()
diff --git a/src/plugins/runner/kml/CMakeLists.txt b/src/plugins/runner/kml/CMakeLists.txt
index a31ce98f6267d95425317c5cbe18f1bb0e745be6..1e3714677c1d488e6c1a07e9cd5223d489a037f1 100644
--- a/src/plugins/runner/kml/CMakeLists.txt
+++ b/src/plugins/runner/kml/CMakeLists.txt
@@ -34,7 +34,7 @@ endif()
 install(FILES marble_thumbnail_kml.desktop DESTINATION ${KDE_INSTALL_KSERVICES5DIR})
 install(FILES marble_thumbnail_kmz.desktop DESTINATION ${KDE_INSTALL_KSERVICES5DIR})
 
-if(NOT WIN32 AND NOT APPLE)
+if(NOT WIN32 AND NOT APPLE_STANDALONE_BUNDLE)
     # register marble app as handler
     install(FILES marble_kml.desktop DESTINATION ${KDE_INSTALL_APPDIR})
     install(FILES marble_kmz.desktop DESTINATION ${KDE_INSTALL_APPDIR})
diff --git a/src/plugins/runner/shp/CMakeLists.txt b/src/plugins/runner/shp/CMakeLists.txt
index 7e080892470a4da6b83618d59e6f00559301e764..380ae8c541e79ea9fe47b76683c7a677c1b88de1 100644
--- a/src/plugins/runner/shp/CMakeLists.txt
+++ b/src/plugins/runner/shp/CMakeLists.txt
@@ -34,7 +34,7 @@ endif()
 # register thumbnail plugin as handler
 install(FILES marble_thumbnail_shp.desktop DESTINATION ${KDE_INSTALL_KSERVICES5DIR})
 
-if(NOT WIN32 AND NOT APPLE)
+if(NOT WIN32 AND NOT APPLE_STANDALONE_BUNDLE)
     # register marble app as handler
     install(FILES marble_shp.desktop DESTINATION ${KDE_INSTALL_APPDIR})
 endif()
diff --git a/tests/CMakeLists.txt b/tests/CMakeLists.txt
index ecb3012b0237b25e19cf8a82ab33bb5a5a7431b7..e4d2af4fba08b787bed76ff21e2b27b8a2d8516d 100644
--- a/tests/CMakeLists.txt
+++ b/tests/CMakeLists.txt
@@ -14,10 +14,10 @@ ENDIF (WIN32)
 # Since the tests are not actually installed, but rather
 # run directly from the build/src/tests dir we need to
 # ensure the marble libs can be found.
-IF (APPLE)
+IF (APPLE AND APPLE_STANDALONE_BUNDLE)
   # For Mac OS X, the executable must be at the root of the bundle's executable folder
   SET (CMAKE_INSTALL_NAME_DIR @executable_path/../lib)
-ENDIF (APPLE)
+ENDIF (APPLE AND APPLE_STANDALONE_BUNDLE)
 
 set( EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR} )
 
