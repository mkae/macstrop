# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$
# Copyright (c) 2015, 2016 R.J.V. Bertin

PortSystem          1.0

# variant qtonly conflicts replace_cocoa kdedialogs description {build only the Qt plugins} {}

if {${subport} ne "osx-integration-qt5" && ${subport} ne "osx-integration-qt5-devel"} {
    set kf5.project     osx-integration
    set kf5.virtualPath scratch
    set kf5.category    integration
    PortGroup           kf5 1.1
    license-append      LGPL-3

    description         OS X platform theme plugin
    long_description    This port contains an OS X adaptation of KDE's platform theme plugin \
                        which brings the KDE theme extensions to Qt5/KF5 applications on Mac. \
                        This allows them to customise their interface (widget \
                        style, fonts, colours & icons) almost just like they can on Linux/KDE desktop. \
                        The plugin also provides click-and-hold support (opens the contextmenu for \
                        select Qt widgets) and optional emulation of a Menu key. \
                        The port also provides modified versions of Qt's Cocoa platform plugin and \
                        'native' Macintosh widget style, providing among others improved support for \
                        less-common font-weights and named menu sections.
    set qtonly          no
} else {
    description         Modified Macintosh platform and native style plugins for Qt5
    long_description    This port provides modified versions of Qt's Cocoa platform plugin and \
                        'native' Macintosh widget style, providing among others improved support for \
                        less-common font-weights and named menu sections.
    set qtonly          yes
    # we need to set an initial name here
    name                osx-integration-qt5
}

subport osx-integration-qt5 {
    # even in this case we probably prefer to install qt5-kde
    # if no Qt5 port is installed yet.
    set qt5.prefer_kde  1
    PortGroup           qt5 1.0
    PortGroup           cmake 1.1

    license             LGPL-3
    conflicts-append    osx-integration-qt5-devel kf5-osx-integration kf5-osx-integration-devel
}

subport kf5-osx-integration-devel {
    conflicts-append \
                    kf5-osx-integration osx-integration-qt5 osx-integration-qt5-devel
}
subport osx-integration-qt5-devel {
    conflicts-append \
                    kf5-osx-integration kf5-osx-integration-devel osx-integration-qt5
}

# in case of unexpected behaviour, set QT_DEBUG_PLUGINS=1
# cf. http://doc.qt.io/qt-5/deployment-plugins.html#debugging-plugins

maintainers         gmail.com:rjvbertin mk openmaintainer
homepage            https://cgit.kde.org/scratch/rjvbb/osx-integration.git/

# plugins are not libraries even if technically they're almost exactly the same thing
installs_libs       no

if {[variant_isset replace_cocoa]} {
    long_description-append \n \
                    With the +replace_cocoa variant, the platform theme plugin will be called \"cocoa\" \
                    and will thus load automatically instead of the regular native platform theme. This \
                    has the effect of adding the KDE theme extensions to the native theme without having\
                    to take any action to load it. The drawback is this can be undone only by uninstalling \
                    or deactivating ${subport} (instead of setting KDE_SESSION_VERSION to a value < 4).
}

if {${subport} eq "kf5-osx-integration-devel" || ${subport} eq "osx-integration-qt5-devel"} {
    conflicts       ${name}
    fetch.type      git
    git.url         git://anongit.kde.org/scratch/rjvbb/osx-integration
    git.branch      dfc8a5f44dc9f6602706ecb40abb612d6cdd04c2
    version         5.31.21
    worksrcdir      ${name}-5
    distname        ${name}-5
} else {
    version         0
    conflicts       ${name}-devel
    checksums       rmd160  0 \
                    sha256  0
    description     ${description} This port doesn't have a release version yet.
    long_description \
                    ${long_description} This port doesn't have a release version yet.
    pre-fetch {
        ui_error "This port doesn't have a release version (yet), use ${name}-devel instead."
        return -code error "This port doesn't have a release version (yet)."
    }
}

if {![tbool qtonly]} {
    kf5.depends_frameworks \
                    kconfig kconfigwidgets ki18n kiconthemes \
                    kio knotifications kwidgetsaddons
} else {
    configure.args-append \
                    -DBUILD_KDE_THEME_PLUGIN=OFF
}

configure.args-append \
                    -DDEFINE_ICONTHEME_SETTINGS=ON \
                    -DPREFER_NATIVE_DIALOGS=ON \
                    -DOVERRIDE_NATIVE_THEME=OFF \
                    -DEMULATE_MENU_KEY=OFF

if {![tbool qtonly]} {
    variant kdedialogs conflicts description {prefer KDE over native dialogs} {
        configure.args-replace \
                    -DPREFER_NATIVE_DIALOGS=ON \
                    -DPREFER_NATIVE_DIALOGS=OFF
        configure.args-append \
                    -DNEVER_NATIVE_DIALOGS=ON
    }

    variant replace_cocoa \
        description "let the platform plugin replace the native platform theme (see `port info ${subport} +replace_cocoa`)" {
        configure.args-replace \
                    -DOVERRIDE_NATIVE_THEME=OFF \
                    -DOVERRIDE_NATIVE_THEME=ON
    }
}

variant menukey \
    description "the platform plugin converts the right Command+Option key combination to a context Menu key" {
    configure.args-replace \
                    -DEMULATE_MENU_KEY=OFF \
                    -DEMULATE_MENU_KEY=ON
}

if {![tbool qtonly]} {
    default_variants +menukey

    notes-append "Standard KDE fonts are Noto Sans (https://www.google.com/get/noto/) and \
Oxygen Mono (http://download.kde.org/stable/plasma/5.4.0/oxygen-fonts-5.4.0.tar.xz)."
    if {![variant_isset replace_cocoa]} {
        notes-append \
"Also, in order to use your selected \
KDE theme automatically, you need to use port:qt5-kde and set KDE_SESSION_VERSION to a \
value >=4 (launchctl setenv KDE_SESSION_VERSION 5 and equivalent in your login script).\n\
What also should work (with any Qt5 version) is to set QT_QPA_PLATFORMTHEME=kde using the same techniques."
    }
    notes-append \
"\nFinally, many KF5 ports install a wrapper script to invoke applications installed into ${kf5.applications_dir}
easily from in a terminal session. Those scripts can load a file \"~/.kf5.env\" to set up the environment\;
a sample is provided (${filespath}/.kf5.env)."
}

livecheck.type      none
