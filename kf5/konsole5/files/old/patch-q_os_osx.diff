diff --git src/Application.cpp src/Application.cpp
index 10f11a4..e9f27f2 100644
--- src/Application.cpp
+++ src/Application.cpp
@@ -51,7 +51,7 @@ void Application::init()
     // enable high dpi support
     setAttribute(Qt::AA_UseHighDpiPixmaps, true);
 
-#if defined(Q_OS_MAC)
+#if defined(Q_OS_MACOS)
     // this ensures that Ctrl and Meta are not swapped, so CTRL-C and friends
     // will work correctly in the terminal
     setAttribute(Qt::AA_MacDontSwapCtrlAndMeta);
diff --git src/ProcessInfo.cpp src/ProcessInfo.cpp
index 1f5505a..454edc8 100644
--- src/ProcessInfo.cpp
+++ src/ProcessInfo.cpp
@@ -45,11 +45,11 @@
 #include <KUser>
 #include <QDebug>
 
-#if defined(Q_OS_FREEBSD) || defined(Q_OS_OPENBSD) || defined(Q_OS_MAC)
+#if defined(Q_OS_FREEBSD) || defined(Q_OS_OPENBSD) || defined(Q_OS_MACOS)
 #include <sys/sysctl.h>
 #endif
 
-#if defined(Q_OS_MAC)
+#if defined(Q_OS_MACOS)
 #include <libproc.h>
 #endif
 
@@ -861,7 +861,7 @@ private:
     }
 };
 
-#elif defined(Q_OS_MAC)
+#elif defined(Q_OS_MACOS)
 class MacProcessInfo : public UnixProcessInfo
 {
 public:
@@ -1170,7 +1170,7 @@ ProcessInfo* ProcessInfo::newInstance(int aPid, bool enableEnvironmentRead)
     return new LinuxProcessInfo(aPid, enableEnvironmentRead);
 #elif defined(Q_OS_SOLARIS)
     return new SolarisProcessInfo(aPid, enableEnvironmentRead);
-#elif defined(Q_OS_MAC)
+#elif defined(Q_OS_MACOS)
     return new MacProcessInfo(aPid, enableEnvironmentRead);
 #elif defined(Q_OS_FREEBSD)
     return new FreeBSDProcessInfo(aPid, enableEnvironmentRead);
diff --git src/Session.h src/Session.h
index 65729e5..3ced405 100644
--- src/Session.h
+++ src/Session.h
@@ -55,7 +55,7 @@ class HistoryType;
  * Platform-specific main shortcut "opcode":
  */
 enum Modifier {
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
     ACCEL = Qt::META
 #else
     ACCEL = Qt::CTRL
diff --git src/TerminalDisplay.cpp src/TerminalDisplay.cpp
index 536aea6..8c241fc 100644
--- src/TerminalDisplay.cpp
+++ src/TerminalDisplay.cpp
@@ -726,7 +726,7 @@ void TerminalDisplay::drawBackground(QPainter& painter, const QRect& rect, const
     if (useOpacitySetting && !_wallpaper->isNull() &&
             _wallpaper->draw(painter, contentsRect, _opacity)) {
     } else if (qAlpha(_blendColor) < 0xff && useOpacitySetting) {
-#if defined(Q_OS_MAC)
+#if defined(Q_OS_MACOS)
         // TODO - On MacOS, using CompositionMode doesn't work.  Altering the
         //        transparency in the color scheme alters the brightness.
         painter.fillRect(contentsRect, backgroundColor);
